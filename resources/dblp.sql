-- --------------------------------------------------------
-- Host:                         127.0.0.1
-- Server version:               5.5.16 - MySQL Community Server (GPL)
-- Server OS:                    Win32
-- HeidiSQL version:             7.0.0.4053
-- Date/time:                    2012-09-06 13:24:04
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET FOREIGN_KEY_CHECKS=0 */;

-- Dumping database structure for dblp
CREATE DATABASE IF NOT EXISTS `dblp` /*!40100 DEFAULT CHARACTER SET latin1 */;
USE `dblp`;


-- Dumping structure for table dblp.authors
CREATE TABLE IF NOT EXISTS `authors` (
  `personid` int(20) NOT NULL,
  `name` varchar(70) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table dblp.authors: ~138 rows (approximately)
DELETE FROM `authors`;
/*!40000 ALTER TABLE `authors` DISABLE KEYS */;
INSERT INTO `authors` (`personid`, `name`) VALUES
	(1632506, 'Clarence A. Ellis'),
	(1632672, 'Sushil Jajodia'),
	(1634203, 'Divyakant Agrawal'),
	(1634204, 'Amr El Abbadi'),
	(1635058, 'Elke A. Rundensteiner'),
	(1635070, 'Wolfgang Klas'),
	(1635490, 'V. S. Subrahmanian'),
	(1635606, 'John Grant'),
	(1635903, 'P. Venkat Rangan'),
	(1636367, 'Qing Li'),
	(1636578, 'Ross Cutler'),
	(1636579, 'K. Selcuk Candan'),
	(1638447, 'Alberto Del Bimbo'),
	(1638910, 'Irene Cheng'),
	(1639041, 'Kwang-Hoon Kim'),
	(1639627, 'Junho Shim'),
	(1641409, 'Andruid Kerne'),
	(1641656, 'Ron Wakkary'),
	(1642018, 'Dickson K. W. Chiu'),
	(1647019, 'Eenjun Hwang'),
	(1648720, 'B. Prabhakaran'),
	(1649651, 'Qiong Luo'),
	(1649831, 'Lei Chen '),
	(1649882, 'Wei Han'),
	(1650202, 'Chengfei Liu'),
	(1651350, 'Kyung Dong Ryu'),
	(1653321, 'Benjamin W. Wah'),
	(1654062, 'Kutluhan Erol'),
	(1657953, 'Qi Yan'),
	(1660727, 'Noboru Babaguchi'),
	(1663251, 'Mario A. Nascimento'),
	(1665255, 'Shan Wang'),
	(1672037, 'Stephane Perennes'),
	(1672067, 'Afonso Ferreira'),
	(1672500, 'Rynson W. H. Lau'),
	(1672554, 'Wen-Syan Li'),
	(1672555, 'Yoshinori Hara'),
	(1673667, 'Mehmet Emin Donderler'),
	(1677020, 'Maria Luisa Sapino'),
	(1677489, 'Frank Nack'),
	(1679303, 'Abdulmotaleb El-Saddik'),
	(1679311, 'Carsten Griwodz'),
	(1689133, 'Yi Zhuang'),
	(1691060, 'Hari Sundaram'),
	(1693982, 'Christopher B. Mayer'),
	(1693983, 'Judson Dressler'),
	(1693984, 'Felicia Harlow'),
	(1693985, 'Gregory J. Brault'),
	(1700782, 'Jun\'ichi Tatemura'),
	(1700807, 'Huan Liu'),
	(1701194, 'Darijus Strasunskas'),
	(1701195, 'Stein L. Tomassen'),
	(1706961, 'Karam S. Chatha'),
	(1707228, 'Arunabha Sen'),
	(1708489, 'Xiao Zhang'),
	(1709042, 'Terri Hedgpeth'),
	(1709731, 'Wayne Huang'),
	(1711120, 'Su-Shing Chen'),
	(1711747, 'Jiangchuan Liu'),
	(1715380, 'Augusto Celentano'),
	(1717396, 'Yannis Papakonstantinou'),
	(1726675, 'Vijayshankar Raman'),
	(1731435, 'Jinghai Rao'),
	(1743291, 'Ping Lin'),
	(1743632, 'Radu Sion'),
	(1747591, 'Pamela Jennings'),
	(1749147, 'Kyoji Hirata'),
	(1749524, 'Sougata Mukherjea'),
	(1751579, 'Aisling Kelliher'),
	(1755528, 'Vishal S. Batra'),
	(1755661, 'Luping Ding'),
	(1755997, 'Songting Chen'),
	(1756460, 'Jong Wook Kim'),
	(1756499, 'Koji Hino'),
	(1756682, 'Yu-Ru Lin'),
	(1756778, 'Munmun De Choudhury'),
	(1756805, 'Huiping Cao'),
	(1756806, 'Yan Qi '),
	(1756874, 'Luigi Di Caro'),
	(1756898, 'Venkata Snehith Cherukuri'),
	(1757570, 'Liping Chen'),
	(1758870, 'Yinpeng Chen'),
	(1758891, 'Alejandro Jaimes'),
	(1758896, 'Lexing Xie'),
	(1758957, 'Lina Peng'),
	(1758958, 'Gisik Kwon'),
	(1759443, 'Keith W. Kintigh'),
	(1759818, 'Claudio Schifanella'),
	(1764417, 'Hua-Gang Li'),
	(1767798, 'Inderpal Narang'),
	(1768163, 'Cemal Yilmaz'),
	(1770995, 'Klaus Moessner'),
	(1772259, 'Sibel Adali'),
	(1783310, 'Cha Zhang'),
	(1792289, 'Dmitri V. Kalashnikov'),
	(1792339, 'Oliver Po'),
	(1792340, 'Wang-Pin Hsiung'),
	(1792577, 'Minqi Zhou'),
	(1792688, 'Murat Kantarcioglu'),
	(1800077, 'Thomas Phan'),
	(1823882, 'Xinxin Wang'),
	(1832334, 'Kunihiro Taniguchi'),
	(1849119, 'Rida A. Bazzi'),
	(1875664, 'Eric Lemar'),
	(1876677, 'Dirceu Cavendish'),
	(1879077, 'Quoc Vu'),
	(1895113, 'Ben Liang'),
	(1904891, 'Howard Leung'),
	(1911080, 'Shibo Wu'),
	(1913144, 'Tejas A. Bapat'),
	(1931101, 'Yifeng Yang'),
	(2000872, 'Zhichao Liu'),
	(2034808, 'Jaikannan Ramamoorthy'),
	(2034835, 'Arsany Sawires'),
	(2035130, 'Lakshmi Priya Mahalingam'),
	(2035134, 'Venkatesh Sangam'),
	(2035146, 'Nikhil Iyer'),
	(2036284, 'Prakash Yamuna'),
	(2036489, 'Aleksandra Dulic'),
	(2036525, 'Amanda Steggell'),
	(2041988, 'Bruno Beauquier'),
	(2044172, 'Mario Cataldi'),
	(2062158, 'Nancy Fix'),
	(2080404, 'Maria Goveas'),
	(2080448, 'Fenglin Liao'),
	(2089879, 'Son Vuong'),
	(2097005, 'Wei-Kuang Waine Huang'),
	(2097006, 'Yusuf Akca'),
	(2101523, 'Syed Toufeeq Ahmed'),
	(2205873, 'M. Lakshmi Priya'),
	(2266970, 'Reshma Suvarna'),
	(2371891, 'Mijung Kim'),
	(2390072, 'Renwei Yu'),
	(2490036, 'P.V. Rangan'),
	(2514621, 'V.S. Subrahmanian'),
	(2540868, 'K.S. Candan'),
	(2616934, 'Suganthi Cidambaram'),
	(2616935, 'Shruti Gaur');
/*!40000 ALTER TABLE `authors` ENABLE KEYS */;


-- Dumping structure for table dblp.citation
CREATE TABLE IF NOT EXISTS `citation` (
  `cited` int(20) NOT NULL,
  `cites` int(20) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table dblp.citation: ~372 rows (approximately)
DELETE FROM `citation`;
/*!40000 ALTER TABLE `citation` DISABLE KEYS */;
INSERT INTO `citation` (`cited`, `cites`) VALUES
	(1118430, 598954),
	(1118430, 613631),
	(95306, 27167),
	(95310, 27167),
	(300888, 27167),
	(855948, 27167),
	(939134, 27167),
	(95355, 27228),
	(140513, 95227),
	(95306, 95308),
	(855948, 95308),
	(939166, 95308),
	(95306, 95310),
	(855948, 95310),
	(939134, 95310),
	(95227, 140513),
	(1074824, 144383),
	(95587, 144385),
	(1533, 144425),
	(304093, 144425),
	(643811, 144454),
	(1141233, 151519),
	(856149, 152064),
	(544850, 176216),
	(1533, 176431),
	(304093, 176431),
	(599586, 176431),
	(844534, 176431),
	(506284, 183990),
	(505818, 184151),
	(856222, 184151),
	(544473, 195840),
	(855948, 196408),
	(1112874, 196639),
	(183990, 212395),
	(176720, 298017),
	(1185925, 298017),
	(1284157, 298017),
	(600181, 298088),
	(176187, 299343),
	(544761, 299343),
	(597986, 299343),
	(846398, 299874),
	(176720, 299889),
	(506231, 299892),
	(939134, 299892),
	(1012483, 299892),
	(176431, 299963),
	(304093, 299963),
	(844534, 299963),
	(299891, 300888),
	(855948, 300888),
	(856114, 300888),
	(856147, 300888),
	(939166, 300888),
	(144961, 300992),
	(499787, 300992),
	(1284157, 302434),
	(1533, 304093),
	(599586, 304093),
	(491647, 491645),
	(491649, 491645),
	(506231, 491645),
	(1012483, 491645),
	(491645, 491647),
	(491649, 491647),
	(939956, 491647),
	(491645, 491649),
	(491647, 491649),
	(176687, 499787),
	(1012483, 506231),
	(641900, 543615),
	(1118145, 543615),
	(544850, 544761),
	(1137955, 544761),
	(1112874, 544783),
	(1141233, 544783),
	(176187, 544843),
	(176216, 544843),
	(299343, 544843),
	(544761, 544843),
	(544850, 544843),
	(597986, 544843),
	(1112346, 544843),
	(1118145, 544843),
	(1137955, 544843),
	(1137955, 544850),
	(1141233, 559780),
	(544761, 597986),
	(183990, 597990),
	(506284, 597990),
	(544326, 597990),
	(642089, 597990),
	(95587, 597990),
	(1112575, 597990),
	(1118227, 597990),
	(846232, 597990),
	(139950, 600181),
	(299891, 614465),
	(855948, 614465),
	(856147, 614465),
	(939166, 614465),
	(1533, 618238),
	(304093, 618238),
	(599586, 618238),
	(856189, 618238),
	(641902, 641900),
	(1112344, 641900),
	(1117321, 641900),
	(1118145, 641900),
	(675223, 643291),
	(1185925, 643291),
	(643291, 674459),
	(675223, 674459),
	(1118754, 674459),
	(1185925, 674459),
	(1185925, 675223),
	(642213, 708902),
	(544783, 789647),
	(104979, 929626),
	(641900, 929626),
	(1117321, 929626),
	(1118145, 929626),
	(544761, 938194),
	(1137955, 938194),
	(176216, 938216),
	(232931, 938986),
	(1112346, 971328),
	(95306, 986325),
	(95310, 986325),
	(614465, 986325),
	(855948, 986325),
	(939134, 986325),
	(544783, 1112342),
	(1112874, 1112342),
	(544761, 1112346),
	(1137955, 1112346),
	(104979, 1117321),
	(641902, 1117321),
	(1112344, 1117321),
	(641902, 1118145),
	(1112344, 1118145),
	(139950, 1118754),
	(1185925, 1118754),
	(1284157, 1118754),
	(642089, 598248),
	(643128, 598248),
	(643132, 598248),
	(643133, 598248),
	(674307, 598248),
	(845903, 598248),
	(845905, 598248),
	(990383, 598248),
	(1016842, 598248),
	(846232, 598248),
	(499885, 599788),
	(643654, 599788),
	(675677, 600212),
	(499885, 642089),
	(990383, 642089),
	(643133, 643128),
	(845903, 643128),
	(845905, 643128),
	(846232, 643128),
	(643133, 674327),
	(674307, 674327),
	(845901, 674327),
	(674307, 845903),
	(674266, 1113100),
	(599191, 794692),
	(1113100, 794692),
	(643619, 147932),
	(176791, 643619),
	(1118227, 95587),
	(95587, 144317),
	(1118227, 144317),
	(95587, 183019),
	(1118227, 183019),
	(1118227, 299611),
	(1118227, 598359),
	(1112575, 1118227),
	(1582723, 15951),
	(951472, 440418),
	(1138287, 939952),
	(15951, 1113938),
	(1582723, 1113938),
	(1582723, 1114115),
	(1137958, 1112509),
	(1016745, 1112509),
	(1017132, 1112509),
	(597967, 500712),
	(1011001, 500712),
	(1137958, 500712),
	(1016745, 500712),
	(300170, 501998),
	(597967, 501998),
	(1011001, 501998),
	(1112509, 501998),
	(1112931, 501998),
	(1137958, 501998),
	(503138, 501998),
	(1016745, 501998),
	(1016855, 501998),
	(642089, 597965),
	(597963, 597965),
	(1137958, 597965),
	(846232, 597965),
	(300170, 1010999),
	(504505, 1010999),
	(597965, 1010999),
	(1016740, 1010999),
	(1112931, 1010999),
	(1137958, 1010999),
	(1016745, 1010999),
	(300170, 1011099),
	(1016851, 1011099),
	(1112931, 1011099),
	(1016745, 1011099),
	(501998, 1011101),
	(1011001, 1011101),
	(1112509, 1011101),
	(1137958, 1011101),
	(1016745, 1011101),
	(1016745, 1137958),
	(1011001, 300170),
	(1137958, 300170),
	(1016627, 189256),
	(644255, 597963),
	(1016627, 597963),
	(503138, 597967),
	(1016745, 597967),
	(299606, 905980),
	(597965, 984186),
	(174213, 74115),
	(856062, 160603),
	(1335016, 247977),
	(708878, 663479),
	(856062, 663479),
	(708878, 856062),
	(1335016, 856062),
	(708878, 938356),
	(856062, 938356),
	(174213, 938357),
	(708878, 938357),
	(856062, 938357),
	(1016745, 3028),
	(212288, 27194),
	(599191, 27194),
	(176696, 300490),
	(644138, 300490),
	(846232, 300490),
	(502772, 502770),
	(503387, 502770),
	(712831, 502770),
	(1017132, 502770),
	(1017132, 513412),
	(1137958, 89205),
	(1120459, 144236),
	(674266, 144236),
	(1137958, 300291),
	(1138176, 300291),
	(643127, 330558),
	(1120459, 526712),
	(473571, 526712),
	(674266, 526712),
	(599175, 567762),
	(1137958, 599175),
	(1011001, 643127),
	(1137958, 643127),
	(300291, 643127),
	(1138176, 643127),
	(1120459, 673856),
	(674266, 673856),
	(845567, 832767),
	(1120459, 845567),
	(473571, 845567),
	(674266, 845567),
	(644255, 845569),
	(1016745, 845569),
	(1016805, 845569),
	(1138287, 845569),
	(1016745, 845902),
	(212363, 845902),
	(1016745, 1003367),
	(1016805, 1003367),
	(1262335, 1077790),
	(1016745, 1138176),
	(1138287, 1138176),
	(644255, 499808),
	(1120459, 674266),
	(473571, 674266),
	(1341457, 674266),
	(96684, 473795),
	(96708, 600134),
	(176777, 600134),
	(96708, 600145),
	(176777, 600145),
	(600292, 600145),
	(644255, 600145),
	(1138287, 600145),
	(1138287, 644255),
	(96613, 600292),
	(176777, 600292),
	(1138287, 600292),
	(1341457, 675547),
	(96684, 720514),
	(675547, 720514),
	(1341457, 720514),
	(96253, 1003505),
	(600145, 1003505),
	(1138287, 1003505),
	(96708, 96253),
	(473795, 96253),
	(1262335, 96253),
	(1341457, 96253),
	(16253, 256190),
	(1120459, 256190),
	(96684, 256190),
	(473795, 256190),
	(1341457, 256190),
	(502772, 712831),
	(802786, 297941),
	(742863, 338360),
	(802786, 338360),
	(802786, 742863),
	(1016745, 503138),
	(212288, 794244),
	(599191, 794244),
	(1138366, 643554),
	(644255, 301750),
	(1016817, 256344),
	(1185942, 176696),
	(845567, 256463),
	(674405, 256463),
	(1120459, 674405),
	(674266, 674405),
	(845567, 674405),
	(256344, 256340),
	(1016817, 256340),
	(256342, 256340),
	(300081, 256340),
	(300291, 256342),
	(567762, 256342),
	(599175, 256342),
	(643127, 256342),
	(256344, 256342),
	(300081, 256342),
	(1016817, 794941),
	(212363, 794941),
	(520070, 794941),
	(1141828, 794941),
	(1113100, 256456),
	(674405, 256456),
	(212363, 256456),
	(644255, 1016627),
	(96581, 655601),
	(675439, 655601),
	(1167789, 655601),
	(96476, 675439),
	(1167789, 675439),
	(1211160, 675439),
	(1531252, 675439),
	(675489, 256790),
	(256772, 655496),
	(256790, 655496),
	(1121005, 503392),
	(1121005, 503448),
	(503448, 503471),
	(503678, 468020),
	(1242179, 525114),
	(1138366, 1302855),
	(890727, 95927);
/*!40000 ALTER TABLE `citation` ENABLE KEYS */;


-- Dumping structure for table dblp.coauthors
CREATE TABLE IF NOT EXISTS `coauthors` (
  `personid1` int(20) NOT NULL,
  `personid2` int(20) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table dblp.coauthors: ~1,112 rows (approximately)
DELETE FROM `coauthors`;
/*!40000 ALTER TABLE `coauthors` DISABLE KEYS */;
INSERT INTO `coauthors` (`personid1`, `personid2`) VALUES
	(1632506, 1636579),
	(1632506, 1639041),
	(1632506, 1642018),
	(1632506, 1649831),
	(1632506, 1650202),
	(1632506, 1665255),
	(1632506, 1672554),
	(1632506, 1689133),
	(1632506, 1701194),
	(1632506, 1701195),
	(1632506, 1708489),
	(1632506, 1731435),
	(1632672, 1635490),
	(1632672, 1636579),
	(1632672, 1677020),
	(1634203, 1634204),
	(1634203, 1636579),
	(1634203, 1649651),
	(1634203, 1672554),
	(1634203, 1672555),
	(1634203, 1700782),
	(1634203, 1709731),
	(1634203, 1743632),
	(1634203, 1749147),
	(1634203, 1749524),
	(1634203, 1755997),
	(1634203, 1756499),
	(1634203, 1757570),
	(1634203, 1764417),
	(1634203, 1768163),
	(1634203, 1792289),
	(1634203, 1792339),
	(1634203, 1792340),
	(1634203, 1792688),
	(1634203, 1832334),
	(1634203, 1876677),
	(1634203, 1879077),
	(1634203, 2034835),
	(1634203, 2080404),
	(1634203, 2080448),
	(1634203, 2097005),
	(1634203, 2097006),
	(1634204, 1634203),
	(1634204, 1636579),
	(1634204, 1700782),
	(1634204, 1764417),
	(1634204, 1792339),
	(1634204, 2034835),
	(1635058, 1636579),
	(1635058, 1700782),
	(1635058, 1755661),
	(1635058, 1755997),
	(1635058, 1792340),
	(1635070, 1636579),
	(1635070, 1715380),
	(1635490, 1632672),
	(1635490, 1635606),
	(1635490, 1635903),
	(1635490, 1636579),
	(1635490, 1647019),
	(1635490, 1648720),
	(1635490, 1654062),
	(1635490, 1677020),
	(1635490, 1711120),
	(1635490, 1717396),
	(1635490, 1772259),
	(1635490, 1875664),
	(1635606, 1635490),
	(1635606, 1636579),
	(1635903, 1635490),
	(1635903, 1636579),
	(1636367, 1636579),
	(1636367, 1638910),
	(1636367, 1642018),
	(1636367, 1649831),
	(1636367, 1650202),
	(1636367, 1653321),
	(1636367, 1657953),
	(1636367, 1672500),
	(1636367, 1673667),
	(1636367, 1677020),
	(1636367, 1679303),
	(1636367, 1689133),
	(1636367, 1709042),
	(1636367, 1756460),
	(1636367, 1756806),
	(1636367, 1783310),
	(1636367, 1904891),
	(1636578, 1636579),
	(1636579, 1632506),
	(1636579, 1632672),
	(1636579, 1634203),
	(1636579, 1634204),
	(1636579, 1635058),
	(1636579, 1635070),
	(1636579, 1635490),
	(1636579, 1635606),
	(1636579, 1635903),
	(1636579, 1636367),
	(1636579, 1636578),
	(1636579, 1638447),
	(1636579, 1638910),
	(1636579, 1639041),
	(1636579, 1639627),
	(1636579, 1641409),
	(1636579, 1641656),
	(1636579, 1642018),
	(1636579, 1647019),
	(1636579, 1648720),
	(1636579, 1649651),
	(1636579, 1649831),
	(1636579, 1649882),
	(1636579, 1650202),
	(1636579, 1651350),
	(1636579, 1653321),
	(1636579, 1654062),
	(1636579, 1657953),
	(1636579, 1660727),
	(1636579, 1663251),
	(1636579, 1665255),
	(1636579, 1672037),
	(1636579, 1672067),
	(1636579, 1672500),
	(1636579, 1672554),
	(1636579, 1672555),
	(1636579, 1673667),
	(1636579, 1677020),
	(1636579, 1677489),
	(1636579, 1679303),
	(1636579, 1679311),
	(1636579, 1689133),
	(1636579, 1691060),
	(1636579, 1693982),
	(1636579, 1693983),
	(1636579, 1693984),
	(1636579, 1693985),
	(1636579, 1700782),
	(1636579, 1700807),
	(1636579, 1701194),
	(1636579, 1701195),
	(1636579, 1706961),
	(1636579, 1707228),
	(1636579, 1708489),
	(1636579, 1709042),
	(1636579, 1709731),
	(1636579, 1711120),
	(1636579, 1711747),
	(1636579, 1715380),
	(1636579, 1717396),
	(1636579, 1726675),
	(1636579, 1731435),
	(1636579, 1743291),
	(1636579, 1743632),
	(1636579, 1747591),
	(1636579, 1749147),
	(1636579, 1749524),
	(1636579, 1751579),
	(1636579, 1755528),
	(1636579, 1755661),
	(1636579, 1755997),
	(1636579, 1756460),
	(1636579, 1756499),
	(1636579, 1756682),
	(1636579, 1756778),
	(1636579, 1756805),
	(1636579, 1756806),
	(1636579, 1756874),
	(1636579, 1756898),
	(1636579, 1757570),
	(1636579, 1758870),
	(1636579, 1758891),
	(1636579, 1758896),
	(1636579, 1758957),
	(1636579, 1758958),
	(1636579, 1759443),
	(1636579, 1759818),
	(1636579, 1764417),
	(1636579, 1767798),
	(1636579, 1768163),
	(1636579, 1770995),
	(1636579, 1772259),
	(1636579, 1783310),
	(1636579, 1792289),
	(1636579, 1792339),
	(1636579, 1792340),
	(1636579, 1792577),
	(1636579, 1792688),
	(1636579, 1800077),
	(1636579, 1823882),
	(1636579, 1832334),
	(1636579, 1849119),
	(1636579, 1875664),
	(1636579, 1876677),
	(1636579, 1879077),
	(1636579, 1895113),
	(1636579, 1904891),
	(1636579, 1911080),
	(1636579, 1913144),
	(1636579, 1931101),
	(1636579, 2000872),
	(1636579, 2034808),
	(1636579, 2034835),
	(1636579, 2035130),
	(1636579, 2035134),
	(1636579, 2035146),
	(1636579, 2036284),
	(1636579, 2036489),
	(1636579, 2036525),
	(1636579, 2041988),
	(1636579, 2044172),
	(1636579, 2062158),
	(1636579, 2080404),
	(1636579, 2080448),
	(1636579, 2089879),
	(1636579, 2097005),
	(1636579, 2097006),
	(1636579, 2101523),
	(1636579, 2205873),
	(1636579, 2266970),
	(1636579, 2371891),
	(1636579, 2390072),
	(1636579, 2616934),
	(1636579, 2616935),
	(1638447, 1636579),
	(1638447, 1641409),
	(1638447, 1641656),
	(1638447, 1677489),
	(1638447, 1679303),
	(1638447, 1679311),
	(1638447, 1747591),
	(1638447, 1758891),
	(1638447, 2036489),
	(1638447, 2036525),
	(1638447, 2089879),
	(1638910, 1636367),
	(1638910, 1636579),
	(1638910, 1653321),
	(1638910, 1672500),
	(1638910, 1679303),
	(1638910, 1783310),
	(1638910, 1904891),
	(1639041, 1632506),
	(1639041, 1636579),
	(1639041, 1642018),
	(1639041, 1649831),
	(1639041, 1650202),
	(1639041, 1665255),
	(1639041, 1672554),
	(1639041, 1689133),
	(1639041, 1701194),
	(1639041, 1701195),
	(1639041, 1708489),
	(1639041, 1731435),
	(1639627, 1636579),
	(1639627, 1672554),
	(1639627, 1672555),
	(1641409, 1636579),
	(1641409, 1638447),
	(1641409, 1641656),
	(1641409, 1677489),
	(1641409, 1747591),
	(1641409, 1758891),
	(1641409, 2036489),
	(1641409, 2036525),
	(1641656, 1636579),
	(1641656, 1638447),
	(1641656, 1641409),
	(1641656, 1677489),
	(1641656, 1747591),
	(1641656, 1758891),
	(1641656, 2036489),
	(1641656, 2036525),
	(1642018, 1632506),
	(1642018, 1636367),
	(1642018, 1636579),
	(1642018, 1639041),
	(1642018, 1649831),
	(1642018, 1650202),
	(1642018, 1665255),
	(1642018, 1672554),
	(1642018, 1689133),
	(1642018, 1701194),
	(1642018, 1701195),
	(1642018, 1708489),
	(1642018, 1731435),
	(1647019, 1635490),
	(1647019, 1636579),
	(1647019, 1648720),
	(1648720, 1635490),
	(1648720, 1636579),
	(1648720, 1647019),
	(1649651, 1634203),
	(1649651, 1636579),
	(1649651, 1649831),
	(1649651, 1672554),
	(1649651, 1709731),
	(1649651, 1768163),
	(1649651, 1792339),
	(1649651, 1792340),
	(1649651, 2097005),
	(1649651, 2097006),
	(1649831, 1632506),
	(1649831, 1636367),
	(1649831, 1636579),
	(1649831, 1639041),
	(1649831, 1642018),
	(1649831, 1649651),
	(1649831, 1650202),
	(1649831, 1665255),
	(1649831, 1672554),
	(1649831, 1689133),
	(1649831, 1701194),
	(1649831, 1701195),
	(1649831, 1708489),
	(1649831, 1731435),
	(1649882, 1636579),
	(1649882, 1672554),
	(1649882, 1726675),
	(1649882, 1755528),
	(1649882, 1767798),
	(1650202, 1632506),
	(1650202, 1636367),
	(1650202, 1636579),
	(1650202, 1639041),
	(1650202, 1642018),
	(1650202, 1649831),
	(1650202, 1665255),
	(1650202, 1672554),
	(1650202, 1689133),
	(1650202, 1701194),
	(1650202, 1701195),
	(1650202, 1708489),
	(1650202, 1731435),
	(1651350, 1636579),
	(1651350, 1691060),
	(1651350, 1693982),
	(1651350, 1706961),
	(1651350, 1758870),
	(1651350, 1758957),
	(1651350, 1758958),
	(1653321, 1636367),
	(1653321, 1636579),
	(1653321, 1638910),
	(1653321, 1672500),
	(1653321, 1679303),
	(1653321, 1783310),
	(1653321, 1904891),
	(1654062, 1635490),
	(1654062, 1636579),
	(1654062, 1711120),
	(1654062, 1772259),
	(1657953, 1636367),
	(1657953, 1636579),
	(1660727, 1636579),
	(1660727, 1663251),
	(1663251, 1636579),
	(1663251, 1660727),
	(1665255, 1632506),
	(1665255, 1636579),
	(1665255, 1639041),
	(1665255, 1642018),
	(1665255, 1649831),
	(1665255, 1650202),
	(1665255, 1672554),
	(1665255, 1689133),
	(1665255, 1701194),
	(1665255, 1701195),
	(1665255, 1708489),
	(1665255, 1731435),
	(1665255, 1756805),
	(1672037, 1636579),
	(1672037, 1672067),
	(1672037, 1707228),
	(1672037, 2041988),
	(1672067, 1636579),
	(1672067, 1672037),
	(1672067, 1707228),
	(1672067, 2041988),
	(1672500, 1636367),
	(1672500, 1636579),
	(1672500, 1638910),
	(1672500, 1653321),
	(1672500, 1679303),
	(1672500, 1783310),
	(1672500, 1904891),
	(1672554, 1632506),
	(1672554, 1634203),
	(1672554, 1636579),
	(1672554, 1639041),
	(1672554, 1639627),
	(1672554, 1642018),
	(1672554, 1649651),
	(1672554, 1649831),
	(1672554, 1649882),
	(1672554, 1650202),
	(1672554, 1665255),
	(1672554, 1672555),
	(1672554, 1689133),
	(1672554, 1700782),
	(1672554, 1701194),
	(1672554, 1701195),
	(1672554, 1708489),
	(1672554, 1709731),
	(1672554, 1726675),
	(1672554, 1731435),
	(1672554, 1743632),
	(1672554, 1749147),
	(1672554, 1749524),
	(1672554, 1755528),
	(1672554, 1756499),
	(1672554, 1767798),
	(1672554, 1768163),
	(1672554, 1792289),
	(1672554, 1792339),
	(1672554, 1792340),
	(1672554, 1792577),
	(1672554, 1792688),
	(1672554, 1800077),
	(1672554, 1832334),
	(1672554, 1879077),
	(1672554, 2062158),
	(1672554, 2097005),
	(1672554, 2097006),
	(1672554, 2205873),
	(1672555, 1634203),
	(1672555, 1636579),
	(1672555, 1639627),
	(1672555, 1672554),
	(1672555, 1700782),
	(1672555, 1749147),
	(1672555, 1749524),
	(1672555, 1879077),
	(1672555, 2062158),
	(1673667, 1636367),
	(1673667, 1636579),
	(1673667, 1677020),
	(1673667, 1709042),
	(1673667, 1756460),
	(1673667, 1756806),
	(1673667, 2034808),
	(1677020, 1632672),
	(1677020, 1635490),
	(1677020, 1636367),
	(1677020, 1636579),
	(1677020, 1673667),
	(1677020, 1691060),
	(1677020, 1706961),
	(1677020, 1709042),
	(1677020, 1715380),
	(1677020, 1756460),
	(1677020, 1756805),
	(1677020, 1756806),
	(1677020, 1756874),
	(1677020, 1758870),
	(1677020, 1758957),
	(1677020, 1758958),
	(1677020, 1759443),
	(1677020, 1759818),
	(1677020, 1772259),
	(1677020, 2044172),
	(1677489, 1636579),
	(1677489, 1638447),
	(1677489, 1641409),
	(1677489, 1641656),
	(1677489, 1747591),
	(1677489, 1751579),
	(1677489, 1758891),
	(1677489, 2036489),
	(1677489, 2036525),
	(1679303, 1636367),
	(1679303, 1636579),
	(1679303, 1638447),
	(1679303, 1638910),
	(1679303, 1653321),
	(1679303, 1672500),
	(1679303, 1679311),
	(1679303, 1711747),
	(1679303, 1758891),
	(1679303, 1770995),
	(1679303, 1783310),
	(1679303, 1895113),
	(1679303, 1904891),
	(1679303, 2089879),
	(1679311, 1636579),
	(1679311, 1638447),
	(1679311, 1679303),
	(1679311, 1758891),
	(1679311, 2089879),
	(1689133, 1632506),
	(1689133, 1636367),
	(1689133, 1636579),
	(1689133, 1639041),
	(1689133, 1642018),
	(1689133, 1649831),
	(1689133, 1650202),
	(1689133, 1665255),
	(1689133, 1672554),
	(1689133, 1701194),
	(1689133, 1701195),
	(1689133, 1708489),
	(1689133, 1731435),
	(1691060, 1636579),
	(1691060, 1651350),
	(1691060, 1677020),
	(1691060, 1700782),
	(1691060, 1706961),
	(1691060, 1751579),
	(1691060, 1756460),
	(1691060, 1756499),
	(1691060, 1756682),
	(1691060, 1756778),
	(1691060, 1756898),
	(1691060, 1758870),
	(1691060, 1758896),
	(1691060, 1758957),
	(1691060, 1758958),
	(1691060, 1823882),
	(1691060, 1913144),
	(1691060, 2101523),
	(1691060, 2371891),
	(1691060, 2390072),
	(1691060, 2616934),
	(1691060, 2616935),
	(1693982, 1636579),
	(1693982, 1651350),
	(1693982, 1693983),
	(1693982, 1693984),
	(1693982, 1693985),
	(1693982, 1706961),
	(1693982, 1758957),
	(1693982, 2035134),
	(1693983, 1636579),
	(1693983, 1693982),
	(1693983, 1693984),
	(1693983, 1693985),
	(1693984, 1636579),
	(1693984, 1693982),
	(1693984, 1693983),
	(1693984, 1693985),
	(1693985, 1636579),
	(1693985, 1693982),
	(1693985, 1693983),
	(1693985, 1693984),
	(1700782, 1634203),
	(1700782, 1634204),
	(1700782, 1635058),
	(1700782, 1636579),
	(1700782, 1672554),
	(1700782, 1672555),
	(1700782, 1691060),
	(1700782, 1743632),
	(1700782, 1755661),
	(1700782, 1755997),
	(1700782, 1756460),
	(1700782, 1756499),
	(1700782, 1756682),
	(1700782, 1756806),
	(1700782, 1757570),
	(1700782, 1764417),
	(1700782, 1792339),
	(1700782, 1792340),
	(1700782, 1876677),
	(1700782, 2034835),
	(1700782, 2080404),
	(1700782, 2080448),
	(1700807, 1636579),
	(1700807, 1707228),
	(1700807, 1756460),
	(1700807, 2266970),
	(1701194, 1632506),
	(1701194, 1636579),
	(1701194, 1639041),
	(1701194, 1642018),
	(1701194, 1649831),
	(1701194, 1650202),
	(1701194, 1665255),
	(1701194, 1672554),
	(1701194, 1689133),
	(1701194, 1701195),
	(1701194, 1708489),
	(1701194, 1731435),
	(1701195, 1632506),
	(1701195, 1636579),
	(1701195, 1639041),
	(1701195, 1642018),
	(1701195, 1649831),
	(1701195, 1650202),
	(1701195, 1665255),
	(1701195, 1672554),
	(1701195, 1689133),
	(1701195, 1701194),
	(1701195, 1708489),
	(1701195, 1731435),
	(1706961, 1636579),
	(1706961, 1651350),
	(1706961, 1677020),
	(1706961, 1691060),
	(1706961, 1693982),
	(1706961, 1758870),
	(1706961, 1758957),
	(1706961, 1758958),
	(1707228, 1636579),
	(1707228, 1672037),
	(1707228, 1672067),
	(1707228, 1700807),
	(1707228, 2041988),
	(1708489, 1632506),
	(1708489, 1636579),
	(1708489, 1639041),
	(1708489, 1642018),
	(1708489, 1649831),
	(1708489, 1650202),
	(1708489, 1665255),
	(1708489, 1672554),
	(1708489, 1689133),
	(1708489, 1701194),
	(1708489, 1701195),
	(1708489, 1731435),
	(1709042, 1636367),
	(1709042, 1636579),
	(1709042, 1673667),
	(1709042, 1677020),
	(1709042, 1756460),
	(1709731, 1634203),
	(1709731, 1636579),
	(1709731, 1649651),
	(1709731, 1672554),
	(1709731, 1768163),
	(1709731, 1792340),
	(1709731, 2097006),
	(1711120, 1635490),
	(1711120, 1636579),
	(1711120, 1654062),
	(1711120, 1772259),
	(1711747, 1636579),
	(1711747, 1679303),
	(1711747, 1770995),
	(1711747, 1895113),
	(1715380, 1635070),
	(1715380, 1636579),
	(1715380, 1677020),
	(1717396, 1635490),
	(1717396, 1636579),
	(1717396, 1772259),
	(1726675, 1636579),
	(1726675, 1649882),
	(1726675, 1672554),
	(1726675, 1755528),
	(1726675, 1767798),
	(1731435, 1632506),
	(1731435, 1636579),
	(1731435, 1639041),
	(1731435, 1642018),
	(1731435, 1649831),
	(1731435, 1650202),
	(1731435, 1665255),
	(1731435, 1672554),
	(1731435, 1689133),
	(1731435, 1701194),
	(1731435, 1701195),
	(1731435, 1708489),
	(1743291, 1636579),
	(1743291, 1849119),
	(1743291, 2000872),
	(1743632, 1634203),
	(1743632, 1636579),
	(1743632, 1672554),
	(1743632, 1700782),
	(1743632, 1767798),
	(1743632, 1792289),
	(1743632, 1792339),
	(1743632, 1792340),
	(1743632, 1800077),
	(1747591, 1636579),
	(1747591, 1638447),
	(1747591, 1641409),
	(1747591, 1641656),
	(1747591, 1677489),
	(1747591, 1758891),
	(1747591, 2036489),
	(1747591, 2036525),
	(1749147, 1634203),
	(1749147, 1636579),
	(1749147, 1672554),
	(1749147, 1672555),
	(1749147, 1749524),
	(1749147, 1879077),
	(1749147, 2062158),
	(1749524, 1634203),
	(1749524, 1636579),
	(1749524, 1672554),
	(1749524, 1672555),
	(1749524, 1749147),
	(1749524, 1755528),
	(1749524, 1879077),
	(1749524, 2062158),
	(1751579, 1636579),
	(1751579, 1677489),
	(1751579, 1691060),
	(1751579, 1756682),
	(1751579, 1756778),
	(1751579, 1758896),
	(1755528, 1636579),
	(1755528, 1649882),
	(1755528, 1672554),
	(1755528, 1726675),
	(1755528, 1749524),
	(1755528, 1767798),
	(1755661, 1635058),
	(1755661, 1636579),
	(1755661, 1700782),
	(1755661, 1755997),
	(1755661, 1792340),
	(1755997, 1634203),
	(1755997, 1635058),
	(1755997, 1636579),
	(1755997, 1700782),
	(1755997, 1755661),
	(1755997, 1756806),
	(1755997, 1764417),
	(1755997, 1792339),
	(1755997, 1792340),
	(1755997, 2034835),
	(1755997, 2080404),
	(1755997, 2080448),
	(1756460, 1636367),
	(1756460, 1636579),
	(1756460, 1673667),
	(1756460, 1677020),
	(1756460, 1691060),
	(1756460, 1700782),
	(1756460, 1700807),
	(1756460, 1709042),
	(1756460, 1756806),
	(1756460, 1823882),
	(1756460, 2034808),
	(1756460, 2101523),
	(1756460, 2266970),
	(1756460, 2371891),
	(1756460, 2390072),
	(1756460, 2616934),
	(1756460, 2616935),
	(1756499, 1634203),
	(1756499, 1636579),
	(1756499, 1672554),
	(1756499, 1691060),
	(1756499, 1700782),
	(1756499, 1756682),
	(1756499, 1792339),
	(1756499, 1792340),
	(1756682, 1636579),
	(1756682, 1691060),
	(1756682, 1700782),
	(1756682, 1751579),
	(1756682, 1756499),
	(1756682, 1756778),
	(1756682, 1758896),
	(1756778, 1636579),
	(1756778, 1691060),
	(1756778, 1751579),
	(1756778, 1756682),
	(1756778, 1758896),
	(1756805, 1636579),
	(1756805, 1665255),
	(1756805, 1677020),
	(1756805, 1756806),
	(1756806, 1636367),
	(1756806, 1636579),
	(1756806, 1673667),
	(1756806, 1677020),
	(1756806, 1700782),
	(1756806, 1755997),
	(1756806, 1756460),
	(1756806, 1756805),
	(1756806, 1759443),
	(1756806, 2034808),
	(1756806, 2080448),
	(1756874, 1636579),
	(1756874, 1677020),
	(1756874, 1758891),
	(1756874, 1759818),
	(1756874, 2044172),
	(1756898, 1636579),
	(1756898, 1691060),
	(1756898, 1913144),
	(1757570, 1634203),
	(1757570, 1636579),
	(1757570, 1700782),
	(1757570, 1876677),
	(1758870, 1636579),
	(1758870, 1651350),
	(1758870, 1677020),
	(1758870, 1691060),
	(1758870, 1706961),
	(1758870, 1758957),
	(1758870, 1758958),
	(1758891, 1636579),
	(1758891, 1638447),
	(1758891, 1641409),
	(1758891, 1641656),
	(1758891, 1677489),
	(1758891, 1679303),
	(1758891, 1679311),
	(1758891, 1747591),
	(1758891, 1756874),
	(1758891, 2036489),
	(1758891, 2036525),
	(1758891, 2089879),
	(1758896, 1636579),
	(1758896, 1691060),
	(1758896, 1751579),
	(1758896, 1756682),
	(1758896, 1756778),
	(1758957, 1636579),
	(1758957, 1651350),
	(1758957, 1677020),
	(1758957, 1691060),
	(1758957, 1693982),
	(1758957, 1706961),
	(1758957, 1758870),
	(1758957, 1758958),
	(1758957, 1823882),
	(1758957, 2390072),
	(1758958, 1636579),
	(1758958, 1651350),
	(1758958, 1677020),
	(1758958, 1691060),
	(1758958, 1706961),
	(1758958, 1758870),
	(1758958, 1758957),
	(1759443, 1636579),
	(1759443, 1677020),
	(1759443, 1756806),
	(1759818, 1636579),
	(1759818, 1677020),
	(1759818, 1756874),
	(1759818, 2044172),
	(1764417, 1634203),
	(1764417, 1634204),
	(1764417, 1636579),
	(1764417, 1700782),
	(1764417, 1755997),
	(1764417, 1792340),
	(1767798, 1636579),
	(1767798, 1649882),
	(1767798, 1672554),
	(1767798, 1726675),
	(1767798, 1743632),
	(1767798, 1755528),
	(1767798, 1800077),
	(1768163, 1634203),
	(1768163, 1636579),
	(1768163, 1649651),
	(1768163, 1672554),
	(1768163, 1709731),
	(1768163, 1792339),
	(1768163, 1792340),
	(1768163, 2097005),
	(1768163, 2097006),
	(1770995, 1636579),
	(1770995, 1679303),
	(1770995, 1711747),
	(1770995, 1895113),
	(1772259, 1635490),
	(1772259, 1636579),
	(1772259, 1654062),
	(1772259, 1677020),
	(1772259, 1711120),
	(1772259, 1717396),
	(1783310, 1636367),
	(1783310, 1636579),
	(1783310, 1638910),
	(1783310, 1653321),
	(1783310, 1672500),
	(1783310, 1679303),
	(1783310, 1904891),
	(1792289, 1634203),
	(1792289, 1636579),
	(1792289, 1672554),
	(1792289, 1743632),
	(1792289, 1792339),
	(1792289, 1792340),
	(1792339, 1634203),
	(1792339, 1634204),
	(1792339, 1636579),
	(1792339, 1649651),
	(1792339, 1672554),
	(1792339, 1700782),
	(1792339, 1743632),
	(1792339, 1755997),
	(1792339, 1756499),
	(1792339, 1768163),
	(1792339, 1792289),
	(1792339, 1792340),
	(1792339, 1832334),
	(1792339, 2034835),
	(1792339, 2080404),
	(1792339, 2080448),
	(1792339, 2097005),
	(1792339, 2097006),
	(1792340, 1634203),
	(1792340, 1635058),
	(1792340, 1636579),
	(1792340, 1649651),
	(1792340, 1672554),
	(1792340, 1700782),
	(1792340, 1709731),
	(1792340, 1743632),
	(1792340, 1755661),
	(1792340, 1755997),
	(1792340, 1756499),
	(1792340, 1764417),
	(1792340, 1768163),
	(1792340, 1792289),
	(1792340, 1792339),
	(1792340, 1832334),
	(1792340, 2034835),
	(1792340, 2097005),
	(1792340, 2097006),
	(1792577, 1636579),
	(1792577, 1672554),
	(1792577, 1800077),
	(1792688, 1634203),
	(1792688, 1636579),
	(1792688, 1672554),
	(1792688, 2097006),
	(1800077, 1636579),
	(1800077, 1672554),
	(1800077, 1743632),
	(1800077, 1767798),
	(1800077, 1792577),
	(1823882, 1636579),
	(1823882, 1691060),
	(1823882, 1756460),
	(1823882, 1758957),
	(1823882, 2101523),
	(1823882, 2371891),
	(1823882, 2390072),
	(1823882, 2616934),
	(1823882, 2616935),
	(1832334, 1634203),
	(1832334, 1636579),
	(1832334, 1672554),
	(1832334, 1792339),
	(1832334, 1792340),
	(1832334, 2097006),
	(1849119, 1636579),
	(1849119, 1743291),
	(1849119, 2000872),
	(1875664, 1635490),
	(1875664, 1636579),
	(1876677, 1634203),
	(1876677, 1636579),
	(1876677, 1700782),
	(1876677, 1757570),
	(1879077, 1634203),
	(1879077, 1636579),
	(1879077, 1672554),
	(1879077, 1672555),
	(1879077, 1749147),
	(1879077, 1749524),
	(1895113, 1636579),
	(1895113, 1679303),
	(1895113, 1711747),
	(1895113, 1770995),
	(1904891, 1636367),
	(1904891, 1636579),
	(1904891, 1638910),
	(1904891, 1653321),
	(1904891, 1672500),
	(1904891, 1679303),
	(1904891, 1783310),
	(1911080, 1636579),
	(1913144, 1636579),
	(1913144, 1691060),
	(1913144, 1756898),
	(1931101, 1636579),
	(2000872, 1636579),
	(2000872, 1743291),
	(2000872, 1849119),
	(2034808, 1636579),
	(2034808, 1673667),
	(2034808, 1756460),
	(2034808, 1756806),
	(2034835, 1634203),
	(2034835, 1634204),
	(2034835, 1636579),
	(2034835, 1700782),
	(2034835, 1755997),
	(2034835, 1792339),
	(2034835, 1792340),
	(2034835, 2080404),
	(2035130, 1636579),
	(2035134, 1636579),
	(2035134, 1693982),
	(2035146, 1636579),
	(2036284, 1636579),
	(2036489, 1636579),
	(2036489, 1638447),
	(2036489, 1641409),
	(2036489, 1641656),
	(2036489, 1677489),
	(2036489, 1747591),
	(2036489, 1758891),
	(2036489, 2036525),
	(2036525, 1636579),
	(2036525, 1638447),
	(2036525, 1641409),
	(2036525, 1641656),
	(2036525, 1677489),
	(2036525, 1747591),
	(2036525, 1758891),
	(2036525, 2036489),
	(2041988, 1636579),
	(2041988, 1672037),
	(2041988, 1672067),
	(2041988, 1707228),
	(2044172, 1636579),
	(2044172, 1677020),
	(2044172, 1756874),
	(2044172, 1759818),
	(2062158, 1636579),
	(2062158, 1672554),
	(2062158, 1672555),
	(2062158, 1749147),
	(2062158, 1749524),
	(2080404, 1634203),
	(2080404, 1636579),
	(2080404, 1700782),
	(2080404, 1755997),
	(2080404, 1792339),
	(2080404, 2034835),
	(2080448, 1634203),
	(2080448, 1636579),
	(2080448, 1700782),
	(2080448, 1755997),
	(2080448, 1756806),
	(2080448, 1792339),
	(2089879, 1636579),
	(2089879, 1638447),
	(2089879, 1679303),
	(2089879, 1679311),
	(2089879, 1758891),
	(2097005, 1634203),
	(2097005, 1636579),
	(2097005, 1649651),
	(2097005, 1672554),
	(2097005, 1768163),
	(2097005, 1792339),
	(2097005, 1792340),
	(2097005, 2097006),
	(2097006, 1634203),
	(2097006, 1636579),
	(2097006, 1649651),
	(2097006, 1672554),
	(2097006, 1709731),
	(2097006, 1768163),
	(2097006, 1792339),
	(2097006, 1792340),
	(2097006, 1792688),
	(2097006, 1832334),
	(2097006, 2097005),
	(2101523, 1636579),
	(2101523, 1691060),
	(2101523, 1756460),
	(2101523, 1823882),
	(2101523, 2371891),
	(2101523, 2390072),
	(2101523, 2616934),
	(2101523, 2616935),
	(2205873, 1636579),
	(2205873, 1672554),
	(2266970, 1636579),
	(2266970, 1700807),
	(2266970, 1756460),
	(2371891, 1636579),
	(2371891, 1691060),
	(2371891, 1756460),
	(2371891, 1823882),
	(2371891, 2101523),
	(2371891, 2390072),
	(2371891, 2616934),
	(2371891, 2616935),
	(2390072, 1636579),
	(2390072, 1691060),
	(2390072, 1756460),
	(2390072, 1758957),
	(2390072, 1823882),
	(2390072, 2101523),
	(2390072, 2371891),
	(2390072, 2616934),
	(2390072, 2616935);
/*!40000 ALTER TABLE `coauthors` ENABLE KEYS */;


-- Dumping structure for table dblp.coauthorswpaper
CREATE TABLE IF NOT EXISTS `coauthorswpaper` (
  `personid1` int(20) NOT NULL,
  `personid2` int(20) NOT NULL,
  `paperid` int(20) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table dblp.coauthorswpaper: ~3,412 rows (approximately)
DELETE FROM `coauthorswpaper`;
/*!40000 ALTER TABLE `coauthorswpaper` DISABLE KEYS */;
INSERT INTO `coauthorswpaper` (`personid1`, `personid2`, `paperid`) VALUES
	(1632506, 1636579, 1511977),
	(1632506, 1639041, 68194),
	(1632506, 1639041, 105899),
	(1632506, 1639041, 237222),
	(1632506, 1639041, 943390),
	(1632506, 1639041, 1201666),
	(1632506, 1639041, 1511977),
	(1632506, 1642018, 1511977),
	(1632506, 1649831, 1511960),
	(1632506, 1649831, 1511977),
	(1632506, 1650202, 1511977),
	(1632506, 1665255, 1511977),
	(1632506, 1672554, 1511977),
	(1632506, 1689133, 1511977),
	(1632506, 1701194, 1511977),
	(1632506, 1701195, 1511977),
	(1632506, 1708489, 1511977),
	(1632506, 1731435, 1511977),
	(1632672, 1635490, 3562),
	(1632672, 1635490, 299606),
	(1632672, 1635490, 598954),
	(1632672, 1635490, 599903),
	(1632672, 1635490, 613631),
	(1632672, 1635490, 942049),
	(1632672, 1635490, 1118430),
	(1632672, 1636579, 299606),
	(1632672, 1677020, 1118430),
	(1634203, 1634204, 1230),
	(1634203, 1634204, 1533),
	(1634203, 1634204, 2192),
	(1634203, 1634204, 27167),
	(1634203, 1634204, 27228),
	(1634203, 1634204, 63163),
	(1634203, 1634204, 63165),
	(1634203, 1634204, 94642),
	(1634203, 1634204, 95095),
	(1634203, 1634204, 95227),
	(1634203, 1634204, 95302),
	(1634203, 1634204, 95306),
	(1634203, 1634204, 95308),
	(1634203, 1634204, 95310),
	(1634203, 1634204, 95355),
	(1634203, 1634204, 95817),
	(1634203, 1634204, 96053),
	(1634203, 1634204, 96055),
	(1634203, 1634204, 96057),
	(1634203, 1634204, 104979),
	(1634203, 1634204, 109525),
	(1634203, 1634204, 115690),
	(1634203, 1634204, 115704),
	(1634203, 1634204, 139927),
	(1634203, 1634204, 139950),
	(1634203, 1634204, 140402),
	(1634203, 1634204, 140422),
	(1634203, 1634204, 140513),
	(1634203, 1634204, 144383),
	(1634203, 1634204, 144385),
	(1634203, 1634204, 144425),
	(1634203, 1634204, 144448),
	(1634203, 1634204, 144454),
	(1634203, 1634204, 144942),
	(1634203, 1634204, 144961),
	(1634203, 1634204, 149206),
	(1634203, 1634204, 150612),
	(1634203, 1634204, 151519),
	(1634203, 1634204, 152064),
	(1634203, 1634204, 157344),
	(1634203, 1634204, 159034),
	(1634203, 1634204, 159364),
	(1634203, 1634204, 159366),
	(1634203, 1634204, 159536),
	(1634203, 1634204, 176187),
	(1634203, 1634204, 176216),
	(1634203, 1634204, 176431),
	(1634203, 1634204, 176605),
	(1634203, 1634204, 176654),
	(1634203, 1634204, 176663),
	(1634203, 1634204, 176687),
	(1634203, 1634204, 176720),
	(1634203, 1634204, 183990),
	(1634203, 1634204, 184151),
	(1634203, 1634204, 195840),
	(1634203, 1634204, 196408),
	(1634203, 1634204, 196639),
	(1634203, 1634204, 212395),
	(1634203, 1634204, 220333),
	(1634203, 1634204, 220352),
	(1634203, 1634204, 232931),
	(1634203, 1634204, 243231),
	(1634203, 1634204, 264270),
	(1634203, 1634204, 296941),
	(1634203, 1634204, 297695),
	(1634203, 1634204, 298017),
	(1634203, 1634204, 298088),
	(1634203, 1634204, 299295),
	(1634203, 1634204, 299343),
	(1634203, 1634204, 299728),
	(1634203, 1634204, 299874),
	(1634203, 1634204, 299889),
	(1634203, 1634204, 299891),
	(1634203, 1634204, 299892),
	(1634203, 1634204, 299963),
	(1634203, 1634204, 300705),
	(1634203, 1634204, 300888),
	(1634203, 1634204, 300904),
	(1634203, 1634204, 300905),
	(1634203, 1634204, 300906),
	(1634203, 1634204, 300992),
	(1634203, 1634204, 301189),
	(1634203, 1634204, 301357),
	(1634203, 1634204, 301652),
	(1634203, 1634204, 301678),
	(1634203, 1634204, 301952),
	(1634203, 1634204, 302255),
	(1634203, 1634204, 302434),
	(1634203, 1634204, 304093),
	(1634203, 1634204, 304154),
	(1634203, 1634204, 330975),
	(1634203, 1634204, 365256),
	(1634203, 1634204, 370546),
	(1634203, 1634204, 372795),
	(1634203, 1634204, 406553),
	(1634203, 1634204, 491645),
	(1634203, 1634204, 491647),
	(1634203, 1634204, 491649),
	(1634203, 1634204, 499787),
	(1634203, 1634204, 499859),
	(1634203, 1634204, 502779),
	(1634203, 1634204, 505818),
	(1634203, 1634204, 506231),
	(1634203, 1634204, 506284),
	(1634203, 1634204, 509106),
	(1634203, 1634204, 509133),
	(1634203, 1634204, 509167),
	(1634203, 1634204, 522666),
	(1634203, 1634204, 525257),
	(1634203, 1634204, 543615),
	(1634203, 1634204, 544326),
	(1634203, 1634204, 544473),
	(1634203, 1634204, 544761),
	(1634203, 1634204, 544783),
	(1634203, 1634204, 544806),
	(1634203, 1634204, 544843),
	(1634203, 1634204, 544850),
	(1634203, 1634204, 559780),
	(1634203, 1634204, 568214),
	(1634203, 1634204, 571112),
	(1634203, 1634204, 597986),
	(1634203, 1634204, 597990),
	(1634203, 1634204, 599586),
	(1634203, 1634204, 599846),
	(1634203, 1634204, 599963),
	(1634203, 1634204, 600181),
	(1634203, 1634204, 614465),
	(1634203, 1634204, 614994),
	(1634203, 1634204, 615754),
	(1634203, 1634204, 616798),
	(1634203, 1634204, 617027),
	(1634203, 1634204, 617028),
	(1634203, 1634204, 617182),
	(1634203, 1634204, 617526),
	(1634203, 1634204, 617628),
	(1634203, 1634204, 617684),
	(1634203, 1634204, 617935),
	(1634203, 1634204, 618219),
	(1634203, 1634204, 618238),
	(1634203, 1634204, 641898),
	(1634203, 1634204, 641900),
	(1634203, 1634204, 641902),
	(1634203, 1634204, 641949),
	(1634203, 1634204, 643291),
	(1634203, 1634204, 643654),
	(1634203, 1634204, 643811),
	(1634203, 1634204, 644071),
	(1634203, 1634204, 653609),
	(1634203, 1634204, 653611),
	(1634203, 1634204, 663811),
	(1634203, 1634204, 665202),
	(1634203, 1634204, 665203),
	(1634203, 1634204, 674403),
	(1634203, 1634204, 674459),
	(1634203, 1634204, 675223),
	(1634203, 1634204, 676435),
	(1634203, 1634204, 708902),
	(1634203, 1634204, 712819),
	(1634203, 1634204, 789647),
	(1634203, 1634204, 835078),
	(1634203, 1634204, 844266),
	(1634203, 1634204, 844332),
	(1634203, 1634204, 844425),
	(1634203, 1634204, 844534),
	(1634203, 1634204, 845017),
	(1634203, 1634204, 845137),
	(1634203, 1634204, 846398),
	(1634203, 1634204, 846412),
	(1634203, 1634204, 855948),
	(1634203, 1634204, 855951),
	(1634203, 1634204, 855961),
	(1634203, 1634204, 856096),
	(1634203, 1634204, 856114),
	(1634203, 1634204, 856147),
	(1634203, 1634204, 856149),
	(1634203, 1634204, 856189),
	(1634203, 1634204, 856222),
	(1634203, 1634204, 856396),
	(1634203, 1634204, 874449),
	(1634203, 1634204, 902947),
	(1634203, 1634204, 929626),
	(1634203, 1634204, 929630),
	(1634203, 1634204, 938194),
	(1634203, 1634204, 938216),
	(1634203, 1634204, 938986),
	(1634203, 1634204, 939134),
	(1634203, 1634204, 939166),
	(1634203, 1634204, 939201),
	(1634203, 1634204, 971328),
	(1634203, 1634204, 972442),
	(1634203, 1634204, 986325),
	(1634203, 1634204, 988155),
	(1634203, 1634204, 1011256),
	(1634203, 1634204, 1012483),
	(1634203, 1634204, 1074824),
	(1634203, 1634204, 1112342),
	(1634203, 1634204, 1112344),
	(1634203, 1634204, 1112346),
	(1634203, 1634204, 1112874),
	(1634203, 1634204, 1117321),
	(1634203, 1634204, 1118145),
	(1634203, 1634204, 1118147),
	(1634203, 1634204, 1118754),
	(1634203, 1634204, 1124559),
	(1634203, 1634204, 1137955),
	(1634203, 1634204, 1138256),
	(1634203, 1634204, 1141233),
	(1634203, 1634204, 1185925),
	(1634203, 1634204, 1253300),
	(1634203, 1634204, 1284157),
	(1634203, 1634204, 1306364),
	(1634203, 1634204, 1516612),
	(1634203, 1634204, 1518808),
	(1634203, 1634204, 1519681),
	(1634203, 1634204, 1577376),
	(1634203, 1634204, 1591939),
	(1634203, 1634204, 1617311),
	(1634203, 1636579, 140737),
	(1634203, 1636579, 175863),
	(1634203, 1636579, 499885),
	(1634203, 1636579, 525329),
	(1634203, 1636579, 598248),
	(1634203, 1636579, 599788),
	(1634203, 1636579, 600041),
	(1634203, 1636579, 600212),
	(1634203, 1636579, 642089),
	(1634203, 1636579, 642091),
	(1634203, 1636579, 642213),
	(1634203, 1636579, 643128),
	(1634203, 1636579, 643129),
	(1634203, 1636579, 643132),
	(1634203, 1636579, 643133),
	(1634203, 1636579, 643654),
	(1634203, 1636579, 674283),
	(1634203, 1636579, 674307),
	(1634203, 1636579, 674327),
	(1634203, 1636579, 674407),
	(1634203, 1636579, 845903),
	(1634203, 1636579, 845905),
	(1634203, 1636579, 845906),
	(1634203, 1636579, 986735),
	(1634203, 1636579, 986755),
	(1634203, 1636579, 1113100),
	(1634203, 1636579, 1114118),
	(1634203, 1636579, 1316139),
	(1634203, 1649651, 598248),
	(1634203, 1649651, 643128),
	(1634203, 1649651, 674407),
	(1634203, 1672554, 140737),
	(1634203, 1672554, 175863),
	(1634203, 1672554, 212288),
	(1634203, 1672554, 598248),
	(1634203, 1672554, 599191),
	(1634203, 1672554, 642089),
	(1634203, 1672554, 643128),
	(1634203, 1672554, 643132),
	(1634203, 1672554, 643133),
	(1634203, 1672554, 674283),
	(1634203, 1672554, 674307),
	(1634203, 1672554, 674327),
	(1634203, 1672554, 674407),
	(1634203, 1672554, 794692),
	(1634203, 1672554, 845561),
	(1634203, 1672554, 845903),
	(1634203, 1672554, 845905),
	(1634203, 1672554, 845906),
	(1634203, 1672554, 986735),
	(1634203, 1672554, 986755),
	(1634203, 1672554, 1113100),
	(1634203, 1672555, 212288),
	(1634203, 1672555, 599191),
	(1634203, 1672555, 794692),
	(1634203, 1700782, 499885),
	(1634203, 1700782, 525329),
	(1634203, 1700782, 599788),
	(1634203, 1700782, 600041),
	(1634203, 1700782, 600212),
	(1634203, 1700782, 642091),
	(1634203, 1700782, 642213),
	(1634203, 1700782, 643129),
	(1634203, 1700782, 643654),
	(1634203, 1700782, 1114118),
	(1634203, 1700782, 1253300),
	(1634203, 1700782, 1316139),
	(1634203, 1709731, 674407),
	(1634203, 1743632, 643132),
	(1634203, 1749147, 599191),
	(1634203, 1749524, 599191),
	(1634203, 1755997, 600041),
	(1634203, 1755997, 600212),
	(1634203, 1755997, 642091),
	(1634203, 1755997, 642213),
	(1634203, 1755997, 643129),
	(1634203, 1755997, 1114118),
	(1634203, 1756499, 674307),
	(1634203, 1757570, 525329),
	(1634203, 1757570, 1316139),
	(1634203, 1764417, 140402),
	(1634203, 1764417, 144448),
	(1634203, 1764417, 150612),
	(1634203, 1764417, 617628),
	(1634203, 1764417, 642213),
	(1634203, 1764417, 643129),
	(1634203, 1764417, 674403),
	(1634203, 1764417, 676435),
	(1634203, 1764417, 708902),
	(1634203, 1764417, 846412),
	(1634203, 1764417, 1114118),
	(1634203, 1768163, 643128),
	(1634203, 1768163, 674407),
	(1634203, 1792289, 643132),
	(1634203, 1792339, 140737),
	(1634203, 1792339, 175863),
	(1634203, 1792339, 499885),
	(1634203, 1792339, 599788),
	(1634203, 1792339, 600041),
	(1634203, 1792339, 600212),
	(1634203, 1792339, 642089),
	(1634203, 1792339, 643128),
	(1634203, 1792339, 643132),
	(1634203, 1792339, 643133),
	(1634203, 1792339, 643654),
	(1634203, 1792339, 674307),
	(1634203, 1792339, 674327),
	(1634203, 1792339, 845903),
	(1634203, 1792339, 845905),
	(1634203, 1792339, 845906),
	(1634203, 1792339, 1253300),
	(1634203, 1792340, 140737),
	(1634203, 1792340, 175863),
	(1634203, 1792340, 598248),
	(1634203, 1792340, 642089),
	(1634203, 1792340, 642091),
	(1634203, 1792340, 642213),
	(1634203, 1792340, 643128),
	(1634203, 1792340, 643129),
	(1634203, 1792340, 643132),
	(1634203, 1792340, 643133),
	(1634203, 1792340, 674307),
	(1634203, 1792340, 674327),
	(1634203, 1792340, 674407),
	(1634203, 1792340, 845903),
	(1634203, 1792340, 845905),
	(1634203, 1792340, 845906),
	(1634203, 1792340, 1114118),
	(1634203, 1792688, 986755),
	(1634203, 1832334, 643133),
	(1634203, 1876677, 525329),
	(1634203, 1876677, 1316139),
	(1634203, 1879077, 599191),
	(1634203, 1879077, 674283),
	(1634203, 1879077, 794692),
	(1634203, 1879077, 1113100),
	(1634203, 2034835, 499885),
	(1634203, 2034835, 599788),
	(1634203, 2034835, 600041),
	(1634203, 2034835, 643654),
	(1634203, 2034835, 1253300),
	(1634203, 2080404, 600041),
	(1634203, 2080448, 600212),
	(1634203, 2097005, 643128),
	(1634203, 2097006, 643128),
	(1634203, 2097006, 643133),
	(1634203, 2097006, 674407),
	(1634203, 2097006, 986755),
	(1634204, 1634203, 1230),
	(1634204, 1634203, 1533),
	(1634204, 1634203, 2192),
	(1634204, 1634203, 27167),
	(1634204, 1634203, 27228),
	(1634204, 1634203, 63163),
	(1634204, 1634203, 63165),
	(1634204, 1634203, 94642),
	(1634204, 1634203, 95095),
	(1634204, 1634203, 95227),
	(1634204, 1634203, 95302),
	(1634204, 1634203, 95306),
	(1634204, 1634203, 95308),
	(1634204, 1634203, 95310),
	(1634204, 1634203, 95355),
	(1634204, 1634203, 95817),
	(1634204, 1634203, 96053),
	(1634204, 1634203, 96055),
	(1634204, 1634203, 96057),
	(1634204, 1634203, 104979),
	(1634204, 1634203, 109525),
	(1634204, 1634203, 115690),
	(1634204, 1634203, 115704),
	(1634204, 1634203, 139927),
	(1634204, 1634203, 139950),
	(1634204, 1634203, 140402),
	(1634204, 1634203, 140422),
	(1634204, 1634203, 140513),
	(1634204, 1634203, 144383),
	(1634204, 1634203, 144385),
	(1634204, 1634203, 144425),
	(1634204, 1634203, 144448),
	(1634204, 1634203, 144454),
	(1634204, 1634203, 144942),
	(1634204, 1634203, 144961),
	(1634204, 1634203, 149206),
	(1634204, 1634203, 150612),
	(1634204, 1634203, 151519),
	(1634204, 1634203, 152064),
	(1634204, 1634203, 157344),
	(1634204, 1634203, 159034),
	(1634204, 1634203, 159364),
	(1634204, 1634203, 159366),
	(1634204, 1634203, 159536),
	(1634204, 1634203, 176187),
	(1634204, 1634203, 176216),
	(1634204, 1634203, 176431),
	(1634204, 1634203, 176605),
	(1634204, 1634203, 176654),
	(1634204, 1634203, 176663),
	(1634204, 1634203, 176687),
	(1634204, 1634203, 176720),
	(1634204, 1634203, 183990),
	(1634204, 1634203, 184151),
	(1634204, 1634203, 195840),
	(1634204, 1634203, 196408),
	(1634204, 1634203, 196639),
	(1634204, 1634203, 212395),
	(1634204, 1634203, 220333),
	(1634204, 1634203, 220352),
	(1634204, 1634203, 232931),
	(1634204, 1634203, 243231),
	(1634204, 1634203, 264270),
	(1634204, 1634203, 296941),
	(1634204, 1634203, 297695),
	(1634204, 1634203, 298017),
	(1634204, 1634203, 298088),
	(1634204, 1634203, 299295),
	(1634204, 1634203, 299343),
	(1634204, 1634203, 299728),
	(1634204, 1634203, 299874),
	(1634204, 1634203, 299889),
	(1634204, 1634203, 299891),
	(1634204, 1634203, 299892),
	(1634204, 1634203, 299963),
	(1634204, 1634203, 300705),
	(1634204, 1634203, 300888),
	(1634204, 1634203, 300904),
	(1634204, 1634203, 300905),
	(1634204, 1634203, 300906),
	(1634204, 1634203, 300992),
	(1634204, 1634203, 301189),
	(1634204, 1634203, 301357),
	(1634204, 1634203, 301652),
	(1634204, 1634203, 301678),
	(1634204, 1634203, 301952),
	(1634204, 1634203, 302255),
	(1634204, 1634203, 302434),
	(1634204, 1634203, 304093),
	(1634204, 1634203, 304154),
	(1634204, 1634203, 330975),
	(1634204, 1634203, 365256),
	(1634204, 1634203, 370546),
	(1634204, 1634203, 372795),
	(1634204, 1634203, 406553),
	(1634204, 1634203, 491645),
	(1634204, 1634203, 491647),
	(1634204, 1634203, 491649),
	(1634204, 1634203, 499787),
	(1634204, 1634203, 499859),
	(1634204, 1634203, 502779),
	(1634204, 1634203, 505818),
	(1634204, 1634203, 506231),
	(1634204, 1634203, 506284),
	(1634204, 1634203, 509106),
	(1634204, 1634203, 509133),
	(1634204, 1634203, 509167),
	(1634204, 1634203, 522666),
	(1634204, 1634203, 525257),
	(1634204, 1634203, 543615),
	(1634204, 1634203, 544326),
	(1634204, 1634203, 544473),
	(1634204, 1634203, 544761),
	(1634204, 1634203, 544783),
	(1634204, 1634203, 544806),
	(1634204, 1634203, 544843),
	(1634204, 1634203, 544850),
	(1634204, 1634203, 559780),
	(1634204, 1634203, 568214),
	(1634204, 1634203, 571112),
	(1634204, 1634203, 597986),
	(1634204, 1634203, 597990),
	(1634204, 1634203, 599586),
	(1634204, 1634203, 599846),
	(1634204, 1634203, 599963),
	(1634204, 1634203, 600181),
	(1634204, 1634203, 614465),
	(1634204, 1634203, 614994),
	(1634204, 1634203, 615754),
	(1634204, 1634203, 616798),
	(1634204, 1634203, 617027),
	(1634204, 1634203, 617028),
	(1634204, 1634203, 617182),
	(1634204, 1634203, 617526),
	(1634204, 1634203, 617628),
	(1634204, 1634203, 617684),
	(1634204, 1634203, 617935),
	(1634204, 1634203, 618219),
	(1634204, 1634203, 618238),
	(1634204, 1634203, 641898),
	(1634204, 1634203, 641900),
	(1634204, 1634203, 641902),
	(1634204, 1634203, 641949),
	(1634204, 1634203, 643291),
	(1634204, 1634203, 643654),
	(1634204, 1634203, 643811),
	(1634204, 1634203, 644071),
	(1634204, 1634203, 653609),
	(1634204, 1634203, 653611),
	(1634204, 1634203, 663811),
	(1634204, 1634203, 665202),
	(1634204, 1634203, 665203),
	(1634204, 1634203, 674403),
	(1634204, 1634203, 674459),
	(1634204, 1634203, 675223),
	(1634204, 1634203, 676435),
	(1634204, 1634203, 708902),
	(1634204, 1634203, 712819),
	(1634204, 1634203, 789647),
	(1634204, 1634203, 835078),
	(1634204, 1634203, 844266),
	(1634204, 1634203, 844332),
	(1634204, 1634203, 844425),
	(1634204, 1634203, 844534),
	(1634204, 1634203, 845017),
	(1634204, 1634203, 845137),
	(1634204, 1634203, 846398),
	(1634204, 1634203, 846412),
	(1634204, 1634203, 855948),
	(1634204, 1634203, 855951),
	(1634204, 1634203, 855961),
	(1634204, 1634203, 856096),
	(1634204, 1634203, 856114),
	(1634204, 1634203, 856147),
	(1634204, 1634203, 856149),
	(1634204, 1634203, 856189),
	(1634204, 1634203, 856222),
	(1634204, 1634203, 856396),
	(1634204, 1634203, 874449),
	(1634204, 1634203, 902947),
	(1634204, 1634203, 929626),
	(1634204, 1634203, 929630),
	(1634204, 1634203, 938194),
	(1634204, 1634203, 938216),
	(1634204, 1634203, 938986),
	(1634204, 1634203, 939134),
	(1634204, 1634203, 939166),
	(1634204, 1634203, 939201),
	(1634204, 1634203, 971328),
	(1634204, 1634203, 972442),
	(1634204, 1634203, 986325),
	(1634204, 1634203, 988155),
	(1634204, 1634203, 1011256),
	(1634204, 1634203, 1012483),
	(1634204, 1634203, 1074824),
	(1634204, 1634203, 1112342),
	(1634204, 1634203, 1112344),
	(1634204, 1634203, 1112346),
	(1634204, 1634203, 1112874),
	(1634204, 1634203, 1117321),
	(1634204, 1634203, 1118145),
	(1634204, 1634203, 1118147),
	(1634204, 1634203, 1118754),
	(1634204, 1634203, 1124559),
	(1634204, 1634203, 1137955),
	(1634204, 1634203, 1138256),
	(1634204, 1634203, 1141233),
	(1634204, 1634203, 1185925),
	(1634204, 1634203, 1253300),
	(1634204, 1634203, 1284157),
	(1634204, 1634203, 1306364),
	(1634204, 1634203, 1516612),
	(1634204, 1634203, 1518808),
	(1634204, 1634203, 1519681),
	(1634204, 1634203, 1577376),
	(1634204, 1634203, 1591939),
	(1634204, 1634203, 1617311),
	(1634204, 1636579, 643654),
	(1634204, 1700782, 643654),
	(1634204, 1700782, 1253300),
	(1634204, 1764417, 140402),
	(1634204, 1764417, 144448),
	(1634204, 1764417, 150612),
	(1634204, 1764417, 617628),
	(1634204, 1764417, 674403),
	(1634204, 1764417, 676435),
	(1634204, 1764417, 708902),
	(1634204, 1764417, 846412),
	(1634204, 1792339, 643654),
	(1634204, 1792339, 1253300),
	(1634204, 2034835, 643654),
	(1634204, 2034835, 1253300),
	(1635058, 1636579, 302084),
	(1635058, 1700782, 302084),
	(1635058, 1755661, 95219),
	(1635058, 1755661, 147932),
	(1635058, 1755661, 176351),
	(1635058, 1755661, 176791),
	(1635058, 1755661, 298955),
	(1635058, 1755661, 302084),
	(1635058, 1755661, 372949),
	(1635058, 1755661, 600003),
	(1635058, 1755661, 643619),
	(1635058, 1755661, 661973),
	(1635058, 1755997, 95587),
	(1635058, 1755997, 144317),
	(1635058, 1755997, 183019),
	(1635058, 1755997, 299611),
	(1635058, 1755997, 299683),
	(1635058, 1755997, 302084),
	(1635058, 1755997, 598359),
	(1635058, 1755997, 1112575),
	(1635058, 1755997, 1118227),
	(1635058, 1792340, 302084),
	(1635070, 1636579, 1120951),
	(1635070, 1715380, 1120951),
	(1635490, 1632672, 3562),
	(1635490, 1632672, 299606),
	(1635490, 1632672, 598954),
	(1635490, 1632672, 599903),
	(1635490, 1632672, 613631),
	(1635490, 1632672, 942049),
	(1635490, 1632672, 1118430),
	(1635490, 1635606, 15951),
	(1635490, 1635606, 440418),
	(1635490, 1635606, 741905),
	(1635490, 1635606, 939952),
	(1635490, 1635606, 951472),
	(1635490, 1635606, 1112818),
	(1635490, 1635606, 1113938),
	(1635490, 1635606, 1114115),
	(1635490, 1635606, 1256392),
	(1635490, 1635606, 1582723),
	(1635490, 1635903, 329848),
	(1635490, 1635903, 1112509),
	(1635490, 1636579, 299606),
	(1635490, 1636579, 329848),
	(1635490, 1636579, 500712),
	(1635490, 1636579, 501998),
	(1635490, 1636579, 597965),
	(1635490, 1636579, 939952),
	(1635490, 1636579, 1010999),
	(1635490, 1636579, 1011099),
	(1635490, 1636579, 1011101),
	(1635490, 1636579, 1112509),
	(1635490, 1636579, 1137958),
	(1635490, 1647019, 300170),
	(1635490, 1647019, 1011099),
	(1635490, 1647019, 1016851),
	(1635490, 1647019, 1112931),
	(1635490, 1648720, 300170),
	(1635490, 1648720, 501998),
	(1635490, 1648720, 1011101),
	(1635490, 1648720, 1112931),
	(1635490, 1654062, 12651),
	(1635490, 1654062, 744782),
	(1635490, 1654062, 1010999),
	(1635490, 1677020, 189256),
	(1635490, 1677020, 212629),
	(1635490, 1677020, 500664),
	(1635490, 1677020, 504505),
	(1635490, 1677020, 597963),
	(1635490, 1677020, 597967),
	(1635490, 1677020, 970511),
	(1635490, 1677020, 1011001),
	(1635490, 1677020, 1016740),
	(1635490, 1677020, 1118430),
	(1635490, 1677020, 1530955),
	(1635490, 1711120, 95926),
	(1635490, 1711120, 1010999),
	(1635490, 1717396, 597965),
	(1635490, 1772259, 212629),
	(1635490, 1772259, 500664),
	(1635490, 1772259, 597963),
	(1635490, 1772259, 597965),
	(1635490, 1772259, 597967),
	(1635490, 1772259, 905980),
	(1635490, 1772259, 984186),
	(1635490, 1772259, 1010999),
	(1635490, 1772259, 1011001),
	(1635490, 1875664, 500712),
	(1635490, 1875664, 1137958),
	(1635606, 1635490, 15951),
	(1635606, 1635490, 440418),
	(1635606, 1635490, 741905),
	(1635606, 1635490, 939952),
	(1635606, 1635490, 951472),
	(1635606, 1635490, 1112818),
	(1635606, 1635490, 1113938),
	(1635606, 1635490, 1114115),
	(1635606, 1635490, 1256392),
	(1635606, 1635490, 1582723),
	(1635606, 1636579, 939952),
	(1635903, 1635490, 329848),
	(1635903, 1635490, 1112509),
	(1635903, 1636579, 329848),
	(1635903, 1636579, 1112509),
	(1636367, 1636579, 16253),
	(1636367, 1636579, 655470),
	(1636367, 1636579, 1120459),
	(1636367, 1636579, 1250266),
	(1636367, 1638910, 1250266),
	(1636367, 1642018, 74115),
	(1636367, 1642018, 111907),
	(1636367, 1642018, 115789),
	(1636367, 1642018, 140534),
	(1636367, 1642018, 160603),
	(1636367, 1642018, 174213),
	(1636367, 1642018, 247977),
	(1636367, 1642018, 627795),
	(1636367, 1642018, 627796),
	(1636367, 1642018, 651795),
	(1636367, 1642018, 659164),
	(1636367, 1642018, 659437),
	(1636367, 1642018, 663479),
	(1636367, 1642018, 708878),
	(1636367, 1642018, 856062),
	(1636367, 1642018, 938356),
	(1636367, 1642018, 938357),
	(1636367, 1649831, 96141),
	(1636367, 1649831, 141232),
	(1636367, 1649831, 176713),
	(1636367, 1649831, 298253),
	(1636367, 1649831, 1077465),
	(1636367, 1650202, 68454),
	(1636367, 1650202, 1335016),
	(1636367, 1653321, 1250266),
	(1636367, 1653321, 1273164),
	(1636367, 1657953, 16253),
	(1636367, 1672500, 86364),
	(1636367, 1672500, 140865),
	(1636367, 1672500, 246170),
	(1636367, 1672500, 257237),
	(1636367, 1672500, 361013),
	(1636367, 1672500, 369719),
	(1636367, 1672500, 500287),
	(1636367, 1672500, 568499),
	(1636367, 1672500, 663920),
	(1636367, 1672500, 1120546),
	(1636367, 1672500, 1120554),
	(1636367, 1672500, 1250266),
	(1636367, 1672500, 1273164),
	(1636367, 1672500, 1279090),
	(1636367, 1672500, 1534426),
	(1636367, 1672500, 1534427),
	(1636367, 1672500, 1534428),
	(1636367, 1672500, 1534429),
	(1636367, 1672500, 1534430),
	(1636367, 1673667, 1120459),
	(1636367, 1677020, 1120459),
	(1636367, 1679303, 1250266),
	(1636367, 1689133, 96141),
	(1636367, 1689133, 141232),
	(1636367, 1689133, 176713),
	(1636367, 1689133, 224503),
	(1636367, 1689133, 298253),
	(1636367, 1689133, 1077465),
	(1636367, 1709042, 1120459),
	(1636367, 1756460, 1120459),
	(1636367, 1756806, 655470),
	(1636367, 1783310, 1250266),
	(1636367, 1904891, 1250266),
	(1636367, 1904891, 1534428),
	(1636578, 1636579, 3028),
	(1636579, 1632506, 1511977),
	(1636579, 1632672, 299606),
	(1636579, 1634203, 140737),
	(1636579, 1634203, 175863),
	(1636579, 1634203, 499885),
	(1636579, 1634203, 525329),
	(1636579, 1634203, 598248),
	(1636579, 1634203, 599788),
	(1636579, 1634203, 600041),
	(1636579, 1634203, 600212),
	(1636579, 1634203, 642089),
	(1636579, 1634203, 642091),
	(1636579, 1634203, 642213),
	(1636579, 1634203, 643128),
	(1636579, 1634203, 643129),
	(1636579, 1634203, 643132),
	(1636579, 1634203, 643133),
	(1636579, 1634203, 643654),
	(1636579, 1634203, 674283),
	(1636579, 1634203, 674307),
	(1636579, 1634203, 674327),
	(1636579, 1634203, 674407),
	(1636579, 1634203, 845903),
	(1636579, 1634203, 845905),
	(1636579, 1634203, 845906),
	(1636579, 1634203, 986735),
	(1636579, 1634203, 986755),
	(1636579, 1634203, 1113100),
	(1636579, 1634203, 1114118),
	(1636579, 1634203, 1316139),
	(1636579, 1634204, 643654),
	(1636579, 1635058, 302084),
	(1636579, 1635070, 1120951),
	(1636579, 1635490, 299606),
	(1636579, 1635490, 329848),
	(1636579, 1635490, 500712),
	(1636579, 1635490, 501998),
	(1636579, 1635490, 597965),
	(1636579, 1635490, 939952),
	(1636579, 1635490, 1010999),
	(1636579, 1635490, 1011099),
	(1636579, 1635490, 1011101),
	(1636579, 1635490, 1112509),
	(1636579, 1635490, 1137958),
	(1636579, 1635606, 939952),
	(1636579, 1635903, 329848),
	(1636579, 1635903, 1112509),
	(1636579, 1636367, 16253),
	(1636579, 1636367, 655470),
	(1636579, 1636367, 1120459),
	(1636579, 1636367, 1250266),
	(1636579, 1636578, 3028),
	(1636579, 1638447, 503806),
	(1636579, 1638447, 1279294),
	(1636579, 1638447, 1543022),
	(1636579, 1638910, 1250266),
	(1636579, 1639041, 1511977),
	(1636579, 1639627, 27194),
	(1636579, 1639627, 1137536),
	(1636579, 1641409, 503806),
	(1636579, 1641656, 503806),
	(1636579, 1642018, 1511977),
	(1636579, 1647019, 1011099),
	(1636579, 1648720, 501998),
	(1636579, 1648720, 1011101),
	(1636579, 1649651, 598248),
	(1636579, 1649651, 643128),
	(1636579, 1649651, 674407),
	(1636579, 1649831, 1511977),
	(1636579, 1649882, 300490),
	(1636579, 1650202, 1511977),
	(1636579, 1651350, 500714),
	(1636579, 1651350, 502770),
	(1636579, 1651350, 502772),
	(1636579, 1651350, 1017132),
	(1636579, 1653321, 1250266),
	(1636579, 1654062, 1010999),
	(1636579, 1657953, 16253),
	(1636579, 1660727, 1016877),
	(1636579, 1663251, 1016877),
	(1636579, 1665255, 1511977),
	(1636579, 1672037, 513412),
	(1636579, 1672067, 513412),
	(1636579, 1672500, 1250266),
	(1636579, 1672554, 27194),
	(1636579, 1672554, 89205),
	(1636579, 1672554, 140737),
	(1636579, 1672554, 144236),
	(1636579, 1672554, 175863),
	(1636579, 1672554, 300291),
	(1636579, 1672554, 300490),
	(1636579, 1672554, 302442),
	(1636579, 1672554, 330558),
	(1636579, 1672554, 526712),
	(1636579, 1672554, 559883),
	(1636579, 1672554, 567762),
	(1636579, 1672554, 598248),
	(1636579, 1672554, 599175),
	(1636579, 1672554, 642089),
	(1636579, 1672554, 643127),
	(1636579, 1672554, 643128),
	(1636579, 1672554, 643132),
	(1636579, 1672554, 643133),
	(1636579, 1672554, 673453),
	(1636579, 1672554, 673856),
	(1636579, 1672554, 674283),
	(1636579, 1672554, 674307),
	(1636579, 1672554, 674327),
	(1636579, 1672554, 674407),
	(1636579, 1672554, 832767),
	(1636579, 1672554, 845567),
	(1636579, 1672554, 845569),
	(1636579, 1672554, 845902),
	(1636579, 1672554, 845903),
	(1636579, 1672554, 845905),
	(1636579, 1672554, 845906),
	(1636579, 1672554, 986735),
	(1636579, 1672554, 986755),
	(1636579, 1672554, 1003367),
	(1636579, 1672554, 1077790),
	(1636579, 1672554, 1113100),
	(1636579, 1672554, 1137536),
	(1636579, 1672554, 1138176),
	(1636579, 1672554, 1230512),
	(1636579, 1672554, 1230513),
	(1636579, 1672554, 1511977),
	(1636579, 1672555, 27194),
	(1636579, 1672555, 89205),
	(1636579, 1672555, 330558),
	(1636579, 1672555, 559883),
	(1636579, 1672555, 599175),
	(1636579, 1672555, 643127),
	(1636579, 1672555, 673453),
	(1636579, 1672555, 845902),
	(1636579, 1672555, 1138176),
	(1636579, 1673667, 499808),
	(1636579, 1673667, 674266),
	(1636579, 1673667, 1120459),
	(1636579, 1677020, 96613),
	(1636579, 1677020, 96684),
	(1636579, 1677020, 98402),
	(1636579, 1677020, 98916),
	(1636579, 1677020, 176777),
	(1636579, 1677020, 331904),
	(1636579, 1677020, 473795),
	(1636579, 1677020, 600134),
	(1636579, 1677020, 600145),
	(1636579, 1677020, 644255),
	(1636579, 1677020, 701781),
	(1636579, 1677020, 1120459),
	(1636579, 1677020, 1138287),
	(1636579, 1677020, 1236702),
	(1636579, 1677020, 1262335),
	(1636579, 1677020, 1295319),
	(1636579, 1677020, 1520818),
	(1636579, 1677020, 1520849),
	(1636579, 1677489, 503806),
	(1636579, 1679303, 1013028),
	(1636579, 1679303, 1250266),
	(1636579, 1679303, 1543022),
	(1636579, 1679311, 1279294),
	(1636579, 1679311, 1543022),
	(1636579, 1689133, 1511977),
	(1636579, 1691060, 98402),
	(1636579, 1691060, 302429),
	(1636579, 1691060, 502770),
	(1636579, 1691060, 502772),
	(1636579, 1691060, 1305468),
	(1636579, 1691060, 1531074),
	(1636579, 1691060, 1578685),
	(1636579, 1693982, 42981),
	(1636579, 1693982, 500675),
	(1636579, 1693982, 500714),
	(1636579, 1693982, 524253),
	(1636579, 1693982, 1016842),
	(1636579, 1693982, 1017132),
	(1636579, 1693983, 42981),
	(1636579, 1693984, 42981),
	(1636579, 1693985, 42981),
	(1636579, 1700782, 302084),
	(1636579, 1700782, 499885),
	(1636579, 1700782, 525329),
	(1636579, 1700782, 599788),
	(1636579, 1700782, 600041),
	(1636579, 1700782, 600212),
	(1636579, 1700782, 600292),
	(1636579, 1700782, 642091),
	(1636579, 1700782, 642213),
	(1636579, 1700782, 643129),
	(1636579, 1700782, 643654),
	(1636579, 1700782, 675547),
	(1636579, 1700782, 720514),
	(1636579, 1700782, 1114118),
	(1636579, 1700782, 1316139),
	(1636579, 1700782, 1341457),
	(1636579, 1700807, 1003505),
	(1636579, 1700807, 1063485),
	(1636579, 1701194, 1511977),
	(1636579, 1701195, 1511977),
	(1636579, 1706961, 98402),
	(1636579, 1706961, 500714),
	(1636579, 1706961, 502770),
	(1636579, 1706961, 502772),
	(1636579, 1706961, 1017132),
	(1636579, 1707228, 513412),
	(1636579, 1708489, 1511977),
	(1636579, 1709042, 1120459),
	(1636579, 1709731, 674407),
	(1636579, 1711120, 1010999),
	(1636579, 1711747, 1013028),
	(1636579, 1715380, 1120951),
	(1636579, 1715380, 1542975),
	(1636579, 1717396, 597965),
	(1636579, 1726675, 300490),
	(1636579, 1731435, 1511977),
	(1636579, 1743291, 300518),
	(1636579, 1743291, 435694),
	(1636579, 1743291, 435696),
	(1636579, 1743291, 579367),
	(1636579, 1743291, 604932),
	(1636579, 1743291, 846415),
	(1636579, 1743291, 1187762),
	(1636579, 1743632, 643132),
	(1636579, 1747591, 503806),
	(1636579, 1749147, 89205),
	(1636579, 1749147, 330558),
	(1636579, 1749147, 559883),
	(1636579, 1749147, 567762),
	(1636579, 1749147, 599175),
	(1636579, 1749147, 643127),
	(1636579, 1749147, 673453),
	(1636579, 1749147, 845902),
	(1636579, 1749147, 1138176),
	(1636579, 1749524, 559883),
	(1636579, 1751579, 1578685),
	(1636579, 1755528, 300490),
	(1636579, 1755661, 302084),
	(1636579, 1755997, 302084),
	(1636579, 1755997, 600041),
	(1636579, 1755997, 600212),
	(1636579, 1755997, 600292),
	(1636579, 1755997, 642091),
	(1636579, 1755997, 642213),
	(1636579, 1755997, 643129),
	(1636579, 1755997, 1114118),
	(1636579, 1756460, 96253),
	(1636579, 1756460, 473571),
	(1636579, 1756460, 499808),
	(1636579, 1756460, 674266),
	(1636579, 1756460, 675547),
	(1636579, 1756460, 720514),
	(1636579, 1756460, 1003505),
	(1636579, 1756460, 1120459),
	(1636579, 1756460, 1212236),
	(1636579, 1756460, 1212882),
	(1636579, 1756460, 1341457),
	(1636579, 1756460, 1531074),
	(1636579, 1756499, 674307),
	(1636579, 1756682, 1578685),
	(1636579, 1756778, 1578685),
	(1636579, 1756805, 96613),
	(1636579, 1756805, 176777),
	(1636579, 1756805, 1138287),
	(1636579, 1756805, 1236702),
	(1636579, 1756805, 1520849),
	(1636579, 1756806, 96613),
	(1636579, 1756806, 98916),
	(1636579, 1756806, 176777),
	(1636579, 1756806, 256190),
	(1636579, 1756806, 499808),
	(1636579, 1756806, 600134),
	(1636579, 1756806, 600145),
	(1636579, 1756806, 600292),
	(1636579, 1756806, 644255),
	(1636579, 1756806, 655470),
	(1636579, 1756806, 1138287),
	(1636579, 1756806, 1236702),
	(1636579, 1756806, 1520849),
	(1636579, 1756874, 96684),
	(1636579, 1756874, 473795),
	(1636579, 1756874, 1262335),
	(1636579, 1756898, 96708),
	(1636579, 1756898, 302429),
	(1636579, 1756898, 1305468),
	(1636579, 1757570, 525329),
	(1636579, 1757570, 1316139),
	(1636579, 1758870, 98402),
	(1636579, 1758870, 502772),
	(1636579, 1758891, 503806),
	(1636579, 1758891, 1279294),
	(1636579, 1758891, 1543022),
	(1636579, 1758896, 1578685),
	(1636579, 1758957, 98402),
	(1636579, 1758957, 300861),
	(1636579, 1758957, 301601),
	(1636579, 1758957, 331904),
	(1636579, 1758957, 332571),
	(1636579, 1758957, 500714),
	(1636579, 1758957, 502770),
	(1636579, 1758957, 502772),
	(1636579, 1758957, 712831),
	(1636579, 1758957, 1017132),
	(1636579, 1758957, 1279177),
	(1636579, 1758958, 98402),
	(1636579, 1758958, 331904),
	(1636579, 1758958, 502772),
	(1636579, 1758958, 503387),
	(1636579, 1759443, 98916),
	(1636579, 1759443, 600134),
	(1636579, 1759818, 701781),
	(1636579, 1759818, 1262335),
	(1636579, 1764417, 642213),
	(1636579, 1764417, 643129),
	(1636579, 1764417, 1114118),
	(1636579, 1767798, 300490),
	(1636579, 1768163, 643128),
	(1636579, 1768163, 674407),
	(1636579, 1770995, 1013028),
	(1636579, 1772259, 597965),
	(1636579, 1772259, 1010999),
	(1636579, 1783310, 1250266),
	(1636579, 1792289, 643132),
	(1636579, 1792339, 140737),
	(1636579, 1792339, 175863),
	(1636579, 1792339, 499885),
	(1636579, 1792339, 599788),
	(1636579, 1792339, 600041),
	(1636579, 1792339, 600212),
	(1636579, 1792339, 642089),
	(1636579, 1792339, 643128),
	(1636579, 1792339, 643132),
	(1636579, 1792339, 643133),
	(1636579, 1792339, 643654),
	(1636579, 1792339, 674307),
	(1636579, 1792339, 674327),
	(1636579, 1792339, 845903),
	(1636579, 1792339, 845905),
	(1636579, 1792339, 845906),
	(1636579, 1792340, 140737),
	(1636579, 1792340, 175863),
	(1636579, 1792340, 302084),
	(1636579, 1792340, 598248),
	(1636579, 1792340, 642089),
	(1636579, 1792340, 642091),
	(1636579, 1792340, 642213),
	(1636579, 1792340, 643128),
	(1636579, 1792340, 643129),
	(1636579, 1792340, 643132),
	(1636579, 1792340, 643133),
	(1636579, 1792340, 674307),
	(1636579, 1792340, 674327),
	(1636579, 1792340, 674407),
	(1636579, 1792340, 845903),
	(1636579, 1792340, 845905),
	(1636579, 1792340, 845906),
	(1636579, 1792340, 1114118),
	(1636579, 1792340, 1230512),
	(1636579, 1792577, 302442),
	(1636579, 1792688, 986755),
	(1636579, 1800077, 302442),
	(1636579, 1823882, 1279177),
	(1636579, 1823882, 1515593),
	(1636579, 1823882, 1531074),
	(1636579, 1832334, 643133),
	(1636579, 1849119, 435696),
	(1636579, 1875664, 500712),
	(1636579, 1875664, 1137958),
	(1636579, 1876677, 301711),
	(1636579, 1876677, 525329),
	(1636579, 1876677, 990383),
	(1636579, 1876677, 1316139),
	(1636579, 1879077, 674283),
	(1636579, 1879077, 1113100),
	(1636579, 1895113, 1013028),
	(1636579, 1904891, 1250266),
	(1636579, 1911080, 297941),
	(1636579, 1911080, 338360),
	(1636579, 1911080, 742863),
	(1636579, 1911080, 802786),
	(1636579, 1913144, 302429),
	(1636579, 1913144, 1305468),
	(1636579, 1931101, 329850),
	(1636579, 2000872, 435696),
	(1636579, 2034808, 499808),
	(1636579, 2034835, 499885),
	(1636579, 2034835, 599788),
	(1636579, 2034835, 600041),
	(1636579, 2034835, 643654),
	(1636579, 2035130, 500667),
	(1636579, 2035130, 1016805),
	(1636579, 2035134, 500675),
	(1636579, 2035134, 524253),
	(1636579, 2035134, 1016842),
	(1636579, 2035146, 500710),
	(1636579, 2036284, 503138),
	(1636579, 2036284, 1016745),
	(1636579, 2036489, 503806),
	(1636579, 2036525, 503806),
	(1636579, 2041988, 513412),
	(1636579, 2044172, 701781),
	(1636579, 2044172, 1262335),
	(1636579, 2044172, 1520818),
	(1636579, 2062158, 559883),
	(1636579, 2080404, 600041),
	(1636579, 2080448, 600212),
	(1636579, 2080448, 600292),
	(1636579, 2089879, 1543022),
	(1636579, 2097005, 643128),
	(1636579, 2097005, 1230513),
	(1636579, 2097006, 643128),
	(1636579, 2097006, 643133),
	(1636579, 2097006, 674407),
	(1636579, 2097006, 986755),
	(1636579, 2101523, 1531074),
	(1636579, 2205873, 845569),
	(1636579, 2266970, 1003505),
	(1636579, 2266970, 1063485),
	(1636579, 2371891, 1531074),
	(1636579, 2390072, 1279177),
	(1636579, 2390072, 1531074),
	(1636579, 2616934, 1531074),
	(1636579, 2616935, 1531074),
	(1638447, 1636579, 503806),
	(1638447, 1636579, 1279294),
	(1638447, 1636579, 1543022),
	(1638447, 1641409, 503806),
	(1638447, 1641656, 503806),
	(1638447, 1677489, 503806),
	(1638447, 1679303, 1543022),
	(1638447, 1679311, 1279294),
	(1638447, 1679311, 1543022),
	(1638447, 1747591, 503806),
	(1638447, 1758891, 503806),
	(1638447, 1758891, 1279294),
	(1638447, 1758891, 1543022),
	(1638447, 2036489, 503806),
	(1638447, 2036525, 503806),
	(1638447, 2089879, 1543022),
	(1638910, 1636367, 1250266),
	(1638910, 1636579, 1250266),
	(1638910, 1653321, 1250266),
	(1638910, 1672500, 1250266),
	(1638910, 1679303, 1250266),
	(1638910, 1783310, 1250266),
	(1638910, 1904891, 1250266),
	(1639041, 1632506, 68194),
	(1639041, 1632506, 105899),
	(1639041, 1632506, 237222),
	(1639041, 1632506, 943390),
	(1639041, 1632506, 1201666),
	(1639041, 1632506, 1511977),
	(1639041, 1636579, 1511977),
	(1639041, 1642018, 1511977),
	(1639041, 1649831, 1511977),
	(1639041, 1650202, 1511977),
	(1639041, 1665255, 1511977),
	(1639041, 1672554, 1511977),
	(1639041, 1689133, 1511977),
	(1639041, 1701194, 1511977),
	(1639041, 1701195, 1511977),
	(1639041, 1708489, 1511977),
	(1639041, 1731435, 1511977),
	(1639627, 1636579, 27194),
	(1639627, 1636579, 1137536),
	(1639627, 1672554, 27194),
	(1639627, 1672554, 794244),
	(1639627, 1672554, 1137536),
	(1639627, 1672555, 27194),
	(1641409, 1636579, 503806),
	(1641409, 1638447, 503806),
	(1641409, 1641656, 503806),
	(1641409, 1677489, 503806),
	(1641409, 1747591, 503806),
	(1641409, 1758891, 503806),
	(1641409, 2036489, 503806),
	(1641409, 2036525, 503806),
	(1641656, 1636579, 503806),
	(1641656, 1638447, 503806),
	(1641656, 1641409, 503806),
	(1641656, 1677489, 503806),
	(1641656, 1747591, 503806),
	(1641656, 1758891, 503806),
	(1641656, 2036489, 503806),
	(1641656, 2036525, 503806),
	(1642018, 1632506, 1511977),
	(1642018, 1636367, 74115),
	(1642018, 1636367, 111907),
	(1642018, 1636367, 115789),
	(1642018, 1636367, 140534),
	(1642018, 1636367, 160603),
	(1642018, 1636367, 174213),
	(1642018, 1636367, 247977),
	(1642018, 1636367, 627795),
	(1642018, 1636367, 627796),
	(1642018, 1636367, 651795),
	(1642018, 1636367, 659164),
	(1642018, 1636367, 659437),
	(1642018, 1636367, 663479),
	(1642018, 1636367, 708878),
	(1642018, 1636367, 856062),
	(1642018, 1636367, 938356),
	(1642018, 1636367, 938357),
	(1642018, 1636579, 1511977),
	(1642018, 1639041, 1511977),
	(1642018, 1649831, 1511977),
	(1642018, 1650202, 1511977),
	(1642018, 1665255, 1511977),
	(1642018, 1672554, 1511977),
	(1642018, 1689133, 1238347),
	(1642018, 1689133, 1303112),
	(1642018, 1689133, 1303118),
	(1642018, 1689133, 1511977),
	(1642018, 1701194, 1511977),
	(1642018, 1701195, 1511977),
	(1642018, 1708489, 1511977),
	(1642018, 1731435, 1511977),
	(1647019, 1635490, 300170),
	(1647019, 1635490, 1011099),
	(1647019, 1635490, 1016851),
	(1647019, 1635490, 1112931),
	(1647019, 1636579, 1011099),
	(1647019, 1648720, 300170),
	(1647019, 1648720, 330271),
	(1647019, 1648720, 1016853),
	(1647019, 1648720, 1016855),
	(1647019, 1648720, 1112931),
	(1648720, 1635490, 300170),
	(1648720, 1635490, 501998),
	(1648720, 1635490, 1011101),
	(1648720, 1635490, 1112931),
	(1648720, 1636579, 501998),
	(1648720, 1636579, 1011101),
	(1648720, 1647019, 300170),
	(1648720, 1647019, 330271),
	(1648720, 1647019, 1016853),
	(1648720, 1647019, 1016855),
	(1648720, 1647019, 1112931),
	(1649651, 1634203, 598248),
	(1649651, 1634203, 643128),
	(1649651, 1634203, 674407),
	(1649651, 1636579, 598248),
	(1649651, 1636579, 643128),
	(1649651, 1636579, 674407),
	(1649651, 1649831, 599972),
	(1649651, 1672554, 598248),
	(1649651, 1672554, 643128),
	(1649651, 1672554, 674407),
	(1649651, 1709731, 674407),
	(1649651, 1768163, 643128),
	(1649651, 1768163, 674407),
	(1649651, 1792339, 643128),
	(1649651, 1792340, 598248),
	(1649651, 1792340, 643128),
	(1649651, 1792340, 674407),
	(1649651, 2097005, 643128),
	(1649651, 2097006, 643128),
	(1649651, 2097006, 674407),
	(1649831, 1632506, 1511960),
	(1649831, 1632506, 1511977),
	(1649831, 1636367, 96141),
	(1649831, 1636367, 141232),
	(1649831, 1636367, 176713),
	(1649831, 1636367, 298253),
	(1649831, 1636367, 1077465),
	(1649831, 1636579, 1511977),
	(1649831, 1639041, 1511977),
	(1649831, 1642018, 1511977),
	(1649831, 1649651, 599972),
	(1649831, 1650202, 1511977),
	(1649831, 1650202, 1518177),
	(1649831, 1665255, 1511977),
	(1649831, 1672554, 1511977),
	(1649831, 1689133, 96141),
	(1649831, 1689133, 141232),
	(1649831, 1689133, 176713),
	(1649831, 1689133, 298253),
	(1649831, 1689133, 1077465),
	(1649831, 1689133, 1511977),
	(1649831, 1701194, 1511977),
	(1649831, 1701195, 1511977),
	(1649831, 1708489, 1511977),
	(1649831, 1731435, 1511977),
	(1649882, 1636579, 300490),
	(1649882, 1672554, 300490),
	(1649882, 1672554, 643126),
	(1649882, 1726675, 300490),
	(1649882, 1726675, 600062),
	(1649882, 1726675, 643126),
	(1649882, 1726675, 643554),
	(1649882, 1755528, 300490),
	(1649882, 1755528, 643126),
	(1649882, 1767798, 300490),
	(1649882, 1767798, 600062),
	(1649882, 1767798, 643126),
	(1649882, 1767798, 643554),
	(1650202, 1632506, 1511977),
	(1650202, 1636367, 68454),
	(1650202, 1636367, 1335016),
	(1650202, 1636579, 1511977),
	(1650202, 1639041, 1511977),
	(1650202, 1642018, 1511977),
	(1650202, 1649831, 1511977),
	(1650202, 1649831, 1518177),
	(1650202, 1665255, 1511977),
	(1650202, 1672554, 1511977),
	(1650202, 1689133, 1511977),
	(1650202, 1701194, 1511977),
	(1650202, 1701195, 1511977),
	(1650202, 1708489, 1511977),
	(1650202, 1731435, 1511977),
	(1651350, 1636579, 500714),
	(1651350, 1636579, 502770),
	(1651350, 1636579, 502772),
	(1651350, 1636579, 1017132),
	(1651350, 1691060, 502770),
	(1651350, 1691060, 502772),
	(1651350, 1693982, 500714),
	(1651350, 1693982, 1017132),
	(1651350, 1706961, 500714),
	(1651350, 1706961, 502770),
	(1651350, 1706961, 502772),
	(1651350, 1706961, 1017132),
	(1651350, 1758870, 502772),
	(1651350, 1758957, 500714),
	(1651350, 1758957, 502770),
	(1651350, 1758957, 502772),
	(1651350, 1758957, 1017132),
	(1651350, 1758958, 341276),
	(1651350, 1758958, 502772),
	(1651350, 1758958, 571374),
	(1653321, 1636367, 1250266),
	(1653321, 1636367, 1273164),
	(1653321, 1636579, 1250266),
	(1653321, 1638910, 1250266),
	(1653321, 1672500, 1250266),
	(1653321, 1672500, 1273164),
	(1653321, 1672500, 1616136),
	(1653321, 1679303, 1250266),
	(1653321, 1783310, 1250266),
	(1653321, 1904891, 1250266),
	(1654062, 1635490, 12651),
	(1654062, 1635490, 744782),
	(1654062, 1635490, 1010999),
	(1654062, 1636579, 1010999),
	(1654062, 1711120, 1010999),
	(1654062, 1772259, 1010999),
	(1657953, 1636367, 16253),
	(1657953, 1636579, 16253),
	(1660727, 1636579, 1016877),
	(1660727, 1663251, 1016877),
	(1663251, 1636579, 1016877),
	(1663251, 1660727, 1016877),
	(1665255, 1632506, 1511977),
	(1665255, 1636579, 1511977),
	(1665255, 1639041, 1511977),
	(1665255, 1642018, 1511977),
	(1665255, 1649831, 1511977),
	(1665255, 1650202, 1511977),
	(1665255, 1672554, 1511977),
	(1665255, 1689133, 1511977),
	(1665255, 1701194, 1511977),
	(1665255, 1701195, 1511977),
	(1665255, 1708489, 301750),
	(1665255, 1708489, 1234960),
	(1665255, 1708489, 1511973),
	(1665255, 1708489, 1511977),
	(1665255, 1708489, 1512036),
	(1665255, 1731435, 1511977),
	(1665255, 1756805, 939956),
	(1672037, 1636579, 513412),
	(1672037, 1672067, 186044),
	(1672037, 1672067, 267543),
	(1672037, 1672067, 408179),
	(1672037, 1672067, 408642),
	(1672037, 1672067, 513412),
	(1672037, 1672067, 615089),
	(1672037, 1672067, 660501),
	(1672037, 1672067, 749752),
	(1672037, 1672067, 749914),
	(1672037, 1672067, 836331),
	(1672037, 1672067, 1024299),
	(1672037, 1672067, 1099156),
	(1672037, 1672067, 1124650),
	(1672037, 1707228, 513412),
	(1672037, 2041988, 513412),
	(1672037, 2041988, 614033),
	(1672037, 2041988, 836055),
	(1672037, 2041988, 986586),
	(1672067, 1636579, 513412),
	(1672067, 1672037, 186044),
	(1672067, 1672037, 267543),
	(1672067, 1672037, 408179),
	(1672067, 1672037, 408642),
	(1672067, 1672037, 513412),
	(1672067, 1672037, 615089),
	(1672067, 1672037, 660501),
	(1672067, 1672037, 749752),
	(1672067, 1672037, 749914),
	(1672067, 1672037, 836331),
	(1672067, 1672037, 1024299),
	(1672067, 1672037, 1099156),
	(1672067, 1672037, 1124650),
	(1672067, 1707228, 513412),
	(1672067, 2041988, 513412),
	(1672500, 1636367, 86364),
	(1672500, 1636367, 140865),
	(1672500, 1636367, 246170),
	(1672500, 1636367, 257237),
	(1672500, 1636367, 361013),
	(1672500, 1636367, 369719),
	(1672500, 1636367, 500287),
	(1672500, 1636367, 568499),
	(1672500, 1636367, 663920),
	(1672500, 1636367, 1120546),
	(1672500, 1636367, 1120554),
	(1672500, 1636367, 1250266),
	(1672500, 1636367, 1273164),
	(1672500, 1636367, 1279090),
	(1672500, 1636367, 1534426),
	(1672500, 1636367, 1534427),
	(1672500, 1636367, 1534428),
	(1672500, 1636367, 1534429),
	(1672500, 1636367, 1534430),
	(1672500, 1636579, 1250266),
	(1672500, 1638910, 1250266),
	(1672500, 1653321, 1250266),
	(1672500, 1653321, 1273164),
	(1672500, 1653321, 1616136),
	(1672500, 1679303, 1250266),
	(1672500, 1783310, 1250266),
	(1672500, 1904891, 369558),
	(1672500, 1904891, 1250266),
	(1672500, 1904891, 1534428),
	(1672554, 1632506, 1511977),
	(1672554, 1634203, 140737),
	(1672554, 1634203, 175863),
	(1672554, 1634203, 212288),
	(1672554, 1634203, 598248),
	(1672554, 1634203, 599191),
	(1672554, 1634203, 642089),
	(1672554, 1634203, 643128),
	(1672554, 1634203, 643132),
	(1672554, 1634203, 643133),
	(1672554, 1634203, 674283),
	(1672554, 1634203, 674307),
	(1672554, 1634203, 674327),
	(1672554, 1634203, 674407),
	(1672554, 1634203, 794692),
	(1672554, 1634203, 845561),
	(1672554, 1634203, 845903),
	(1672554, 1634203, 845905),
	(1672554, 1634203, 845906),
	(1672554, 1634203, 986735),
	(1672554, 1634203, 986755),
	(1672554, 1634203, 1113100),
	(1672554, 1636579, 27194),
	(1672554, 1636579, 89205),
	(1672554, 1636579, 140737),
	(1672554, 1636579, 144236),
	(1672554, 1636579, 175863),
	(1672554, 1636579, 300291),
	(1672554, 1636579, 300490),
	(1672554, 1636579, 302442),
	(1672554, 1636579, 330558),
	(1672554, 1636579, 526712),
	(1672554, 1636579, 559883),
	(1672554, 1636579, 567762),
	(1672554, 1636579, 598248),
	(1672554, 1636579, 599175),
	(1672554, 1636579, 642089),
	(1672554, 1636579, 643127),
	(1672554, 1636579, 643128),
	(1672554, 1636579, 643132),
	(1672554, 1636579, 643133),
	(1672554, 1636579, 673453),
	(1672554, 1636579, 673856),
	(1672554, 1636579, 674283),
	(1672554, 1636579, 674307),
	(1672554, 1636579, 674327),
	(1672554, 1636579, 674407),
	(1672554, 1636579, 832767),
	(1672554, 1636579, 845567),
	(1672554, 1636579, 845569),
	(1672554, 1636579, 845902),
	(1672554, 1636579, 845903),
	(1672554, 1636579, 845905),
	(1672554, 1636579, 845906),
	(1672554, 1636579, 986735),
	(1672554, 1636579, 986755),
	(1672554, 1636579, 1003367),
	(1672554, 1636579, 1077790),
	(1672554, 1636579, 1113100),
	(1672554, 1636579, 1137536),
	(1672554, 1636579, 1138176),
	(1672554, 1636579, 1230512),
	(1672554, 1636579, 1230513),
	(1672554, 1636579, 1511977),
	(1672554, 1639041, 1511977),
	(1672554, 1639627, 27194),
	(1672554, 1639627, 794244),
	(1672554, 1639627, 1137536),
	(1672554, 1642018, 1511977),
	(1672554, 1649651, 598248),
	(1672554, 1649651, 643128),
	(1672554, 1649651, 674407),
	(1672554, 1649831, 1511977),
	(1672554, 1649882, 300490),
	(1672554, 1649882, 643126),
	(1672554, 1650202, 1511977),
	(1672554, 1665255, 1511977),
	(1672554, 1672555, 27194),
	(1672554, 1672555, 89205),
	(1672554, 1672555, 212288),
	(1672554, 1672555, 256344),
	(1672554, 1672555, 330214),
	(1672554, 1672555, 330558),
	(1672554, 1672555, 559883),
	(1672554, 1672555, 599175),
	(1672554, 1672555, 599191),
	(1672554, 1672555, 643127),
	(1672554, 1672555, 673453),
	(1672554, 1672555, 794692),
	(1672554, 1672555, 845902),
	(1672554, 1672555, 1016817),
	(1672554, 1672555, 1077777),
	(1672554, 1672555, 1138176),
	(1672554, 1689133, 1511977),
	(1672554, 1700782, 674709),
	(1672554, 1701194, 1511977),
	(1672554, 1701195, 1511977),
	(1672554, 1708489, 1511977),
	(1672554, 1709731, 674407),
	(1672554, 1726675, 300490),
	(1672554, 1726675, 643126),
	(1672554, 1731435, 1511977),
	(1672554, 1743632, 150356),
	(1672554, 1743632, 643132),
	(1672554, 1749147, 89205),
	(1672554, 1749147, 256344),
	(1672554, 1749147, 330214),
	(1672554, 1749147, 330558),
	(1672554, 1749147, 559883),
	(1672554, 1749147, 567762),
	(1672554, 1749147, 599175),
	(1672554, 1749147, 599191),
	(1672554, 1749147, 643127),
	(1672554, 1749147, 673453),
	(1672554, 1749147, 845902),
	(1672554, 1749147, 1016817),
	(1672554, 1749147, 1077777),
	(1672554, 1749147, 1138176),
	(1672554, 1749524, 256344),
	(1672554, 1749524, 330214),
	(1672554, 1749524, 559883),
	(1672554, 1749524, 599191),
	(1672554, 1749524, 1016817),
	(1672554, 1749524, 1077777),
	(1672554, 1755528, 298157),
	(1672554, 1755528, 300490),
	(1672554, 1755528, 300502),
	(1672554, 1755528, 643126),
	(1672554, 1755528, 846232),
	(1672554, 1756499, 674307),
	(1672554, 1767798, 150356),
	(1672554, 1767798, 300490),
	(1672554, 1767798, 300502),
	(1672554, 1767798, 643126),
	(1672554, 1767798, 644138),
	(1672554, 1767798, 846232),
	(1672554, 1768163, 643128),
	(1672554, 1768163, 674407),
	(1672554, 1792289, 643132),
	(1672554, 1792339, 140737),
	(1672554, 1792339, 175863),
	(1672554, 1792339, 642089),
	(1672554, 1792339, 643128),
	(1672554, 1792339, 643132),
	(1672554, 1792339, 643133),
	(1672554, 1792339, 674307),
	(1672554, 1792339, 674327),
	(1672554, 1792339, 845903),
	(1672554, 1792339, 845905),
	(1672554, 1792339, 845906),
	(1672554, 1792340, 140737),
	(1672554, 1792340, 175863),
	(1672554, 1792340, 598248),
	(1672554, 1792340, 642089),
	(1672554, 1792340, 643128),
	(1672554, 1792340, 643132),
	(1672554, 1792340, 643133),
	(1672554, 1792340, 674307),
	(1672554, 1792340, 674327),
	(1672554, 1792340, 674407),
	(1672554, 1792340, 674709),
	(1672554, 1792340, 845903),
	(1672554, 1792340, 845905),
	(1672554, 1792340, 845906),
	(1672554, 1792340, 1230512),
	(1672554, 1792577, 302442),
	(1672554, 1792688, 845901),
	(1672554, 1792688, 986755),
	(1672554, 1800077, 150356),
	(1672554, 1800077, 176696),
	(1672554, 1800077, 301926),
	(1672554, 1800077, 302442),
	(1672554, 1800077, 500137),
	(1672554, 1800077, 1185942),
	(1672554, 1832334, 643133),
	(1672554, 1879077, 256463),
	(1672554, 1879077, 599191),
	(1672554, 1879077, 674283),
	(1672554, 1879077, 674405),
	(1672554, 1879077, 794692),
	(1672554, 1879077, 1113100),
	(1672554, 2062158, 559883),
	(1672554, 2097005, 643128),
	(1672554, 2097005, 1230513),
	(1672554, 2097006, 643128),
	(1672554, 2097006, 643133),
	(1672554, 2097006, 674407),
	(1672554, 2097006, 986755),
	(1672554, 2205873, 845569),
	(1672555, 1634203, 212288),
	(1672555, 1634203, 599191),
	(1672555, 1634203, 794692),
	(1672555, 1636579, 27194),
	(1672555, 1636579, 89205),
	(1672555, 1636579, 330558),
	(1672555, 1636579, 559883),
	(1672555, 1636579, 599175),
	(1672555, 1636579, 643127),
	(1672555, 1636579, 673453),
	(1672555, 1636579, 845902),
	(1672555, 1636579, 1138176),
	(1672555, 1639627, 27194),
	(1672555, 1672554, 27194),
	(1672555, 1672554, 89205),
	(1672555, 1672554, 212288),
	(1672555, 1672554, 256344),
	(1672555, 1672554, 330214),
	(1672555, 1672554, 330558),
	(1672555, 1672554, 559883),
	(1672555, 1672554, 599175),
	(1672555, 1672554, 599191),
	(1672555, 1672554, 643127),
	(1672555, 1672554, 673453),
	(1672555, 1672554, 794692),
	(1672555, 1672554, 845902),
	(1672555, 1672554, 1016817),
	(1672555, 1672554, 1077777),
	(1672555, 1672554, 1138176),
	(1672555, 1700782, 48288),
	(1672555, 1749147, 89205),
	(1672555, 1749147, 212363),
	(1672555, 1749147, 256340),
	(1672555, 1749147, 256342),
	(1672555, 1749147, 256344),
	(1672555, 1749147, 256346),
	(1672555, 1749147, 300081),
	(1672555, 1749147, 330214),
	(1672555, 1749147, 330558),
	(1672555, 1749147, 520070),
	(1672555, 1749147, 559883),
	(1672555, 1749147, 599175),
	(1672555, 1749147, 599191),
	(1672555, 1749147, 643127),
	(1672555, 1749147, 673453),
	(1672555, 1749147, 794941),
	(1672555, 1749147, 845902),
	(1672555, 1749147, 1016817),
	(1672555, 1749147, 1077777),
	(1672555, 1749147, 1138176),
	(1672555, 1749147, 1141828),
	(1672555, 1749524, 256344),
	(1672555, 1749524, 256456),
	(1672555, 1749524, 330214),
	(1672555, 1749524, 460552),
	(1672555, 1749524, 520070),
	(1672555, 1749524, 559883),
	(1672555, 1749524, 599191),
	(1672555, 1749524, 794941),
	(1672555, 1749524, 1016817),
	(1672555, 1749524, 1077777),
	(1672555, 1749524, 1141828),
	(1672555, 1879077, 599191),
	(1672555, 1879077, 794692),
	(1672555, 2062158, 559883),
	(1673667, 1636367, 1120459),
	(1673667, 1636579, 499808),
	(1673667, 1636579, 674266),
	(1673667, 1636579, 1120459),
	(1673667, 1677020, 1120459),
	(1673667, 1709042, 1120459),
	(1673667, 1756460, 499808),
	(1673667, 1756460, 674266),
	(1673667, 1756460, 1120459),
	(1673667, 1756806, 499808),
	(1673667, 2034808, 499808),
	(1677020, 1632672, 1118430),
	(1677020, 1635490, 189256),
	(1677020, 1635490, 212629),
	(1677020, 1635490, 500664),
	(1677020, 1635490, 504505),
	(1677020, 1635490, 597963),
	(1677020, 1635490, 597967),
	(1677020, 1635490, 970511),
	(1677020, 1635490, 1011001),
	(1677020, 1635490, 1016740),
	(1677020, 1635490, 1118430),
	(1677020, 1635490, 1530955),
	(1677020, 1636367, 1120459),
	(1677020, 1636579, 96613),
	(1677020, 1636579, 96684),
	(1677020, 1636579, 98402),
	(1677020, 1636579, 98916),
	(1677020, 1636579, 176777),
	(1677020, 1636579, 331904),
	(1677020, 1636579, 473795),
	(1677020, 1636579, 600134),
	(1677020, 1636579, 600145),
	(1677020, 1636579, 644255),
	(1677020, 1636579, 701781),
	(1677020, 1636579, 1120459),
	(1677020, 1636579, 1138287),
	(1677020, 1636579, 1236702),
	(1677020, 1636579, 1262335),
	(1677020, 1636579, 1295319),
	(1677020, 1636579, 1520818),
	(1677020, 1636579, 1520849),
	(1677020, 1673667, 1120459),
	(1677020, 1691060, 98402),
	(1677020, 1706961, 98402),
	(1677020, 1709042, 1120459),
	(1677020, 1715380, 500723),
	(1677020, 1715380, 1011105),
	(1677020, 1756460, 1120459),
	(1677020, 1756805, 96613),
	(1677020, 1756805, 176777),
	(1677020, 1756805, 1138287),
	(1677020, 1756805, 1236702),
	(1677020, 1756805, 1520849),
	(1677020, 1756806, 96613),
	(1677020, 1756806, 98916),
	(1677020, 1756806, 176777),
	(1677020, 1756806, 600134),
	(1677020, 1756806, 600145),
	(1677020, 1756806, 644255),
	(1677020, 1756806, 1138287),
	(1677020, 1756806, 1236702),
	(1677020, 1756806, 1520849),
	(1677020, 1756874, 96684),
	(1677020, 1756874, 473795),
	(1677020, 1756874, 1262335),
	(1677020, 1758870, 98402),
	(1677020, 1758957, 98402),
	(1677020, 1758957, 331904),
	(1677020, 1758958, 98402),
	(1677020, 1758958, 331904),
	(1677020, 1759443, 98916),
	(1677020, 1759443, 600134),
	(1677020, 1759818, 701781),
	(1677020, 1759818, 1262335),
	(1677020, 1772259, 212629),
	(1677020, 1772259, 299311),
	(1677020, 1772259, 500662),
	(1677020, 1772259, 500664),
	(1677020, 1772259, 597963),
	(1677020, 1772259, 597967),
	(1677020, 1772259, 628228),
	(1677020, 1772259, 1011001),
	(1677020, 1772259, 1016627),
	(1677020, 2044172, 518647),
	(1677020, 2044172, 701781),
	(1677020, 2044172, 1262335),
	(1677020, 2044172, 1520818),
	(1677489, 1636579, 503806),
	(1677489, 1638447, 503806),
	(1677489, 1641409, 503806),
	(1677489, 1641656, 503806),
	(1677489, 1747591, 503806),
	(1677489, 1751579, 503796),
	(1677489, 1751579, 1543029),
	(1677489, 1758891, 503806),
	(1677489, 2036489, 503806),
	(1677489, 2036525, 503806),
	(1679303, 1636367, 1250266),
	(1679303, 1636579, 1013028),
	(1679303, 1636579, 1250266),
	(1679303, 1636579, 1543022),
	(1679303, 1638447, 1543022),
	(1679303, 1638910, 1250266),
	(1679303, 1653321, 1250266),
	(1679303, 1672500, 1250266),
	(1679303, 1679311, 32225),
	(1679303, 1679311, 373266),
	(1679303, 1679311, 1543022),
	(1679303, 1711747, 1013028),
	(1679303, 1758891, 1543022),
	(1679303, 1770995, 1013028),
	(1679303, 1783310, 1250266),
	(1679303, 1895113, 1013028),
	(1679303, 1904891, 1250266),
	(1679303, 2089879, 1543022),
	(1679311, 1636579, 1279294),
	(1679311, 1636579, 1543022),
	(1679311, 1638447, 1279294),
	(1679311, 1638447, 1543022),
	(1679311, 1679303, 32225),
	(1679311, 1679303, 373266),
	(1679311, 1679303, 1543022),
	(1679311, 1758891, 1279294),
	(1679311, 1758891, 1543022),
	(1679311, 2089879, 1543022),
	(1689133, 1632506, 1511977),
	(1689133, 1636367, 96141),
	(1689133, 1636367, 141232),
	(1689133, 1636367, 176713),
	(1689133, 1636367, 224503),
	(1689133, 1636367, 298253),
	(1689133, 1636367, 1077465),
	(1689133, 1636579, 1511977),
	(1689133, 1639041, 1511977),
	(1689133, 1642018, 1238347),
	(1689133, 1642018, 1303112),
	(1689133, 1642018, 1303118),
	(1689133, 1642018, 1511977),
	(1689133, 1649831, 96141),
	(1689133, 1649831, 141232),
	(1689133, 1649831, 176713),
	(1689133, 1649831, 298253),
	(1689133, 1649831, 1077465),
	(1689133, 1649831, 1511977),
	(1689133, 1650202, 1511977),
	(1689133, 1665255, 1511977),
	(1689133, 1672554, 1511977),
	(1689133, 1701194, 1511977),
	(1689133, 1701195, 1511977),
	(1689133, 1708489, 1511977),
	(1689133, 1731435, 1511977),
	(1691060, 1636579, 98402),
	(1691060, 1636579, 302429),
	(1691060, 1636579, 502770),
	(1691060, 1636579, 502772),
	(1691060, 1636579, 1305468),
	(1691060, 1636579, 1531074),
	(1691060, 1636579, 1578685),
	(1691060, 1651350, 502770),
	(1691060, 1651350, 502772),
	(1691060, 1677020, 98402),
	(1691060, 1700782, 333057),
	(1691060, 1700782, 630611),
	(1691060, 1700782, 655601),
	(1691060, 1700782, 701648),
	(1691060, 1700782, 1167899),
	(1691060, 1706961, 98402),
	(1691060, 1706961, 502770),
	(1691060, 1706961, 502772),
	(1691060, 1751579, 96476),
	(1691060, 1751579, 675590),
	(1691060, 1751579, 720457),
	(1691060, 1751579, 1211160),
	(1691060, 1751579, 1250242),
	(1691060, 1751579, 1531252),
	(1691060, 1751579, 1572350),
	(1691060, 1751579, 1578606),
	(1691060, 1751579, 1578685),
	(1691060, 1751579, 1590540),
	(1691060, 1756460, 1531074),
	(1691060, 1756499, 630611),
	(1691060, 1756682, 96476),
	(1691060, 1756682, 333035),
	(1691060, 1756682, 333057),
	(1691060, 1756682, 630611),
	(1691060, 1756682, 655601),
	(1691060, 1756682, 675439),
	(1691060, 1756682, 675590),
	(1691060, 1756682, 701648),
	(1691060, 1756682, 1167789),
	(1691060, 1756682, 1167899),
	(1691060, 1756682, 1211160),
	(1691060, 1756682, 1250242),
	(1691060, 1756682, 1531100),
	(1691060, 1756682, 1531252),
	(1691060, 1756682, 1572350),
	(1691060, 1756682, 1578606),
	(1691060, 1756682, 1578685),
	(1691060, 1756778, 96581),
	(1691060, 1756778, 256772),
	(1691060, 1756778, 256790),
	(1691060, 1756778, 539001),
	(1691060, 1756778, 655496),
	(1691060, 1756778, 675489),
	(1691060, 1756778, 1258228),
	(1691060, 1756778, 1531100),
	(1691060, 1756778, 1531252),
	(1691060, 1756778, 1578685),
	(1691060, 1756778, 1590540),
	(1691060, 1756898, 302429),
	(1691060, 1756898, 1305468),
	(1691060, 1758870, 98306),
	(1691060, 1758870, 98402),
	(1691060, 1758870, 332109),
	(1691060, 1758870, 502772),
	(1691060, 1758870, 503392),
	(1691060, 1758870, 503448),
	(1691060, 1758870, 503471),
	(1691060, 1758870, 504932),
	(1691060, 1758870, 1121005),
	(1691060, 1758870, 1184987),
	(1691060, 1758896, 332687),
	(1691060, 1758896, 468020),
	(1691060, 1758896, 502965),
	(1691060, 1758896, 503678),
	(1691060, 1758896, 1578685),
	(1691060, 1758957, 98402),
	(1691060, 1758957, 502770),
	(1691060, 1758957, 502772),
	(1691060, 1758958, 98402),
	(1691060, 1758958, 502772),
	(1691060, 1823882, 1531074),
	(1691060, 1913144, 302429),
	(1691060, 1913144, 1305468),
	(1691060, 2101523, 1531074),
	(1691060, 2371891, 1531074),
	(1691060, 2390072, 1531074),
	(1691060, 2616934, 1531074),
	(1691060, 2616935, 1531074),
	(1693982, 1636579, 42981),
	(1693982, 1636579, 500675),
	(1693982, 1636579, 500714),
	(1693982, 1636579, 524253),
	(1693982, 1636579, 1016842),
	(1693982, 1636579, 1017132),
	(1693982, 1651350, 500714),
	(1693982, 1651350, 1017132),
	(1693982, 1693983, 42981),
	(1693982, 1693984, 42981),
	(1693982, 1693985, 42981),
	(1693982, 1693985, 506773),
	(1693982, 1693985, 512203),
	(1693982, 1706961, 500714),
	(1693982, 1706961, 1017132),
	(1693982, 1758957, 500714),
	(1693982, 1758957, 1017132),
	(1693982, 2035134, 500675),
	(1693982, 2035134, 524253),
	(1693982, 2035134, 1016842),
	(1693983, 1636579, 42981),
	(1693983, 1693982, 42981),
	(1693983, 1693984, 42981),
	(1693983, 1693985, 42981),
	(1693984, 1636579, 42981),
	(1693984, 1693982, 42981),
	(1693984, 1693983, 42981),
	(1693984, 1693985, 42981),
	(1693985, 1636579, 42981),
	(1693985, 1693982, 42981),
	(1693985, 1693982, 506773),
	(1693985, 1693982, 512203),
	(1693985, 1693983, 42981),
	(1693985, 1693984, 42981),
	(1700782, 1634203, 499885),
	(1700782, 1634203, 525329),
	(1700782, 1634203, 599788),
	(1700782, 1634203, 600041),
	(1700782, 1634203, 600212),
	(1700782, 1634203, 642091),
	(1700782, 1634203, 642213),
	(1700782, 1634203, 643129),
	(1700782, 1634203, 643654),
	(1700782, 1634203, 1114118),
	(1700782, 1634203, 1253300),
	(1700782, 1634203, 1316139),
	(1700782, 1634204, 643654),
	(1700782, 1634204, 1253300),
	(1700782, 1635058, 302084),
	(1700782, 1636579, 302084),
	(1700782, 1636579, 499885),
	(1700782, 1636579, 525329),
	(1700782, 1636579, 599788),
	(1700782, 1636579, 600041),
	(1700782, 1636579, 600212),
	(1700782, 1636579, 600292),
	(1700782, 1636579, 642091),
	(1700782, 1636579, 642213),
	(1700782, 1636579, 643129),
	(1700782, 1636579, 643654),
	(1700782, 1636579, 675547),
	(1700782, 1636579, 720514),
	(1700782, 1636579, 1114118),
	(1700782, 1636579, 1316139),
	(1700782, 1636579, 1341457),
	(1700782, 1672554, 674709),
	(1700782, 1672555, 48288),
	(1700782, 1691060, 333057),
	(1700782, 1691060, 630611),
	(1700782, 1691060, 655601),
	(1700782, 1691060, 701648),
	(1700782, 1691060, 1167899),
	(1700782, 1743632, 370803),
	(1700782, 1755661, 302084),
	(1700782, 1755997, 302084),
	(1700782, 1755997, 491990),
	(1700782, 1755997, 584517),
	(1700782, 1755997, 600041),
	(1700782, 1755997, 600212),
	(1700782, 1755997, 600292),
	(1700782, 1755997, 642091),
	(1700782, 1755997, 642213),
	(1700782, 1755997, 643129),
	(1700782, 1755997, 1114118),
	(1700782, 1756460, 675547),
	(1700782, 1756460, 720514),
	(1700782, 1756460, 1341457),
	(1700782, 1756499, 630611),
	(1700782, 1756682, 333057),
	(1700782, 1756682, 630611),
	(1700782, 1756682, 655601),
	(1700782, 1756682, 701648),
	(1700782, 1756682, 1167899),
	(1700782, 1756806, 600292),
	(1700782, 1757570, 525329),
	(1700782, 1757570, 1316139),
	(1700782, 1764417, 642213),
	(1700782, 1764417, 643129),
	(1700782, 1764417, 1114118),
	(1700782, 1792339, 499885),

	(1700782, 1792339, 599788),
	(1700782, 1792339, 600041),
	(1700782, 1792339, 600212),
	(1700782, 1792339, 643654),
	(1700782, 1792339, 1253300),
	(1700782, 1792339, 1571222),
	(1700782, 1792340, 302084),
	(1700782, 1792340, 491990),
	(1700782, 1792340, 584517),
	(1700782, 1792340, 642091),
	(1700782, 1792340, 642213),
	(1700782, 1792340, 643129),
	(1700782, 1792340, 674709),
	(1700782, 1792340, 675677),
	(1700782, 1792340, 862645),
	(1700782, 1792340, 1114118),
	(1700782, 1792340, 1571222),
	(1700782, 1876677, 525329),
	(1700782, 1876677, 1316139),
	(1700782, 2034835, 499885),
	(1700782, 2034835, 599788),
	(1700782, 2034835, 600041),
	(1700782, 2034835, 643654),
	(1700782, 2034835, 675677),
	(1700782, 2034835, 1253300),
	(1700782, 2034835, 1571222),
	(1700782, 2080404, 600041),
	(1700782, 2080448, 600212),
	(1700782, 2080448, 600292),
	(1700807, 1636579, 1003505),
	(1700807, 1636579, 1063485),
	(1700807, 1707228, 1578652),
	(1700807, 1756460, 1003505),
	(1700807, 2266970, 1003505),
	(1700807, 2266970, 1063485),
	(1701194, 1632506, 1511977),
	(1701194, 1636579, 1511977),
	(1701194, 1639041, 1511977),
	(1701194, 1642018, 1511977),
	(1701194, 1649831, 1511977),
	(1701194, 1650202, 1511977),
	(1701194, 1665255, 1511977),
	(1701194, 1672554, 1511977),
	(1701194, 1689133, 1511977),
	(1701194, 1701195, 48613),
	(1701194, 1701195, 451198),
	(1701194, 1701195, 518582),
	(1701194, 1701195, 524670),
	(1701194, 1701195, 525114),
	(1701194, 1701195, 721510),
	(1701194, 1701195, 1224178),
	(1701194, 1701195, 1242179),
	(1701194, 1701195, 1299816),
	(1701194, 1701195, 1511977),
	(1701194, 1701195, 1535423),
	(1701194, 1701195, 1535430),
	(1701194, 1708489, 1511977),
	(1701194, 1731435, 1511977),
	(1701195, 1632506, 1511977),
	(1701195, 1636579, 1511977),
	(1701195, 1639041, 1511977),
	(1701195, 1642018, 1511977),
	(1701195, 1649831, 1511977),
	(1701195, 1650202, 1511977),
	(1701195, 1665255, 1511977),
	(1701195, 1672554, 1511977),
	(1701195, 1689133, 1511977),
	(1701195, 1701194, 48613),
	(1701195, 1701194, 451198),
	(1701195, 1701194, 518582),
	(1701195, 1701194, 524670),
	(1701195, 1701194, 525114),
	(1701195, 1701194, 721510),
	(1701195, 1701194, 1224178),
	(1701195, 1701194, 1242179),
	(1701195, 1701194, 1299816),
	(1701195, 1701194, 1511977),
	(1701195, 1701194, 1535423),
	(1701195, 1701194, 1535430),
	(1701195, 1708489, 1511977),
	(1701195, 1731435, 1511977),
	(1706961, 1636579, 98402),
	(1706961, 1636579, 500714),
	(1706961, 1636579, 502770),
	(1706961, 1636579, 502772),
	(1706961, 1636579, 1017132),
	(1706961, 1651350, 500714),
	(1706961, 1651350, 502770),
	(1706961, 1651350, 502772),
	(1706961, 1651350, 1017132),
	(1706961, 1677020, 98402),
	(1706961, 1691060, 98402),
	(1706961, 1691060, 502770),
	(1706961, 1691060, 502772),
	(1706961, 1693982, 500714),
	(1706961, 1693982, 1017132),
	(1706961, 1758870, 98402),
	(1706961, 1758870, 502772),
	(1706961, 1758957, 98402),
	(1706961, 1758957, 500714),
	(1706961, 1758957, 502770),
	(1706961, 1758957, 502772),
	(1706961, 1758957, 1017132),
	(1706961, 1758958, 98402),
	(1706961, 1758958, 502772),
	(1707228, 1636579, 513412),
	(1707228, 1672037, 513412),
	(1707228, 1672067, 513412),
	(1707228, 1700807, 1578652),
	(1707228, 2041988, 513412),
	(1708489, 1632506, 1511977),
	(1708489, 1636579, 1511977),
	(1708489, 1639041, 1511977),
	(1708489, 1642018, 1511977),
	(1708489, 1649831, 1511977),
	(1708489, 1650202, 1511977),
	(1708489, 1665255, 301750),
	(1708489, 1665255, 1234960),
	(1708489, 1665255, 1511973),
	(1708489, 1665255, 1511977),
	(1708489, 1665255, 1512036),
	(1708489, 1672554, 1511977),
	(1708489, 1689133, 1511977),
	(1708489, 1701194, 1511977),
	(1708489, 1701195, 1511977),
	(1708489, 1731435, 1511977),
	(1709042, 1636367, 1120459),
	(1709042, 1636579, 1120459),
	(1709042, 1673667, 1120459),
	(1709042, 1677020, 1120459),
	(1709042, 1756460, 1120459),
	(1709731, 1634203, 674407),
	(1709731, 1636579, 674407),
	(1709731, 1649651, 674407),
	(1709731, 1672554, 674407),
	(1709731, 1768163, 674407),
	(1709731, 1792340, 674407),
	(1709731, 2097006, 674407),
	(1711120, 1635490, 95926),
	(1711120, 1635490, 1010999),
	(1711120, 1636579, 1010999),
	(1711120, 1654062, 1010999),
	(1711120, 1772259, 1010999),
	(1711747, 1636579, 1013028),
	(1711747, 1679303, 1013028),
	(1711747, 1770995, 1013028),
	(1711747, 1895113, 1013028),
	(1715380, 1635070, 1120951),
	(1715380, 1636579, 1120951),
	(1715380, 1636579, 1542975),
	(1715380, 1677020, 500723),
	(1715380, 1677020, 1011105),
	(1717396, 1635490, 597965),
	(1717396, 1636579, 597965),
	(1717396, 1772259, 597965),
	(1726675, 1636579, 300490),
	(1726675, 1649882, 300490),
	(1726675, 1649882, 600062),
	(1726675, 1649882, 643126),
	(1726675, 1649882, 643554),
	(1726675, 1672554, 300490),
	(1726675, 1672554, 643126),
	(1726675, 1755528, 300490),
	(1726675, 1755528, 643126),
	(1726675, 1767798, 300490),
	(1726675, 1767798, 302090),
	(1726675, 1767798, 302095),
	(1726675, 1767798, 600062),
	(1726675, 1767798, 643126),
	(1726675, 1767798, 643554),
	(1726675, 1767798, 891777),
	(1726675, 1767798, 1138366),
	(1726675, 1767798, 1302855),
	(1731435, 1632506, 1511977),
	(1731435, 1636579, 1511977),
	(1731435, 1639041, 1511977),
	(1731435, 1642018, 1511977),
	(1731435, 1649831, 1511977),
	(1731435, 1650202, 1511977),
	(1731435, 1665255, 1511977),
	(1731435, 1672554, 1511977),
	(1731435, 1689133, 1511977),
	(1731435, 1701194, 1511977),
	(1731435, 1701195, 1511977),
	(1731435, 1708489, 1511977),
	(1743291, 1636579, 300518),
	(1743291, 1636579, 435694),
	(1743291, 1636579, 435696),
	(1743291, 1636579, 579367),
	(1743291, 1636579, 604932),
	(1743291, 1636579, 846415),
	(1743291, 1636579, 1187762),
	(1743291, 1849119, 435696),
	(1743291, 2000872, 435696),
	(1743632, 1634203, 643132),
	(1743632, 1636579, 643132),
	(1743632, 1672554, 150356),
	(1743632, 1672554, 643132),
	(1743632, 1700782, 370803),
	(1743632, 1767798, 150356),
	(1743632, 1767798, 176590),
	(1743632, 1792289, 643132),
	(1743632, 1792339, 643132),
	(1743632, 1792340, 643132),
	(1743632, 1800077, 150356),
	(1743632, 1800077, 176590),
	(1743632, 1800077, 471056),
	(1743632, 1800077, 877191),
	(1747591, 1636579, 503806),
	(1747591, 1638447, 503806),
	(1747591, 1641409, 503806),
	(1747591, 1641656, 503806),
	(1747591, 1677489, 503806),
	(1747591, 1758891, 502382),
	(1747591, 1758891, 503806),
	(1747591, 1758891, 893920),
	(1747591, 2036489, 503806),
	(1747591, 2036525, 503806),
	(1749147, 1634203, 599191),
	(1749147, 1636579, 89205),
	(1749147, 1636579, 330558),
	(1749147, 1636579, 559883),
	(1749147, 1636579, 567762),
	(1749147, 1636579, 599175),
	(1749147, 1636579, 643127),
	(1749147, 1636579, 673453),
	(1749147, 1636579, 845902),
	(1749147, 1636579, 1138176),
	(1749147, 1672554, 89205),
	(1749147, 1672554, 256344),
	(1749147, 1672554, 330214),
	(1749147, 1672554, 330558),
	(1749147, 1672554, 559883),
	(1749147, 1672554, 567762),
	(1749147, 1672554, 599175),
	(1749147, 1672554, 599191),
	(1749147, 1672554, 643127),
	(1749147, 1672554, 673453),
	(1749147, 1672554, 845902),
	(1749147, 1672554, 1016817),
	(1749147, 1672554, 1077777),
	(1749147, 1672554, 1138176),
	(1749147, 1672555, 89205),
	(1749147, 1672555, 212363),
	(1749147, 1672555, 256340),
	(1749147, 1672555, 256342),
	(1749147, 1672555, 256344),
	(1749147, 1672555, 256346),
	(1749147, 1672555, 300081),
	(1749147, 1672555, 330214),
	(1749147, 1672555, 330558),
	(1749147, 1672555, 520070),
	(1749147, 1672555, 559883),
	(1749147, 1672555, 599175),
	(1749147, 1672555, 599191),
	(1749147, 1672555, 643127),
	(1749147, 1672555, 673453),
	(1749147, 1672555, 794941),
	(1749147, 1672555, 845902),
	(1749147, 1672555, 1016817),
	(1749147, 1672555, 1077777),
	(1749147, 1672555, 1138176),
	(1749147, 1672555, 1141828),
	(1749147, 1749524, 256344),
	(1749147, 1749524, 330214),
	(1749147, 1749524, 520070),
	(1749147, 1749524, 559883),
	(1749147, 1749524, 599191),
	(1749147, 1749524, 794941),
	(1749147, 1749524, 1016817),
	(1749147, 1749524, 1077777),
	(1749147, 1749524, 1141828),
	(1749147, 1879077, 599191),
	(1749147, 2062158, 559883),
	(1749524, 1634203, 599191),
	(1749524, 1636579, 559883),
	(1749524, 1672554, 256344),
	(1749524, 1672554, 330214),
	(1749524, 1672554, 559883),
	(1749524, 1672554, 599191),
	(1749524, 1672554, 1016817),
	(1749524, 1672554, 1077777),
	(1749524, 1672555, 256344),
	(1749524, 1672555, 256456),
	(1749524, 1672555, 330214),
	(1749524, 1672555, 460552),
	(1749524, 1672555, 520070),
	(1749524, 1672555, 559883),
	(1749524, 1672555, 599191),
	(1749524, 1672555, 794941),
	(1749524, 1672555, 1016817),
	(1749524, 1672555, 1077777),
	(1749524, 1672555, 1141828),
	(1749524, 1749147, 256344),
	(1749524, 1749147, 330214),
	(1749524, 1749147, 520070),
	(1749524, 1749147, 559883),
	(1749524, 1749147, 599191),
	(1749524, 1749147, 794941),
	(1749524, 1749147, 1016817),
	(1749524, 1749147, 1077777),
	(1749524, 1749147, 1141828),
	(1749524, 1755528, 95927),
	(1749524, 1755528, 890727),
	(1749524, 1879077, 599191),
	(1749524, 2062158, 559883),
	(1751579, 1636579, 1578685),
	(1751579, 1677489, 503796),
	(1751579, 1677489, 1543029),
	(1751579, 1691060, 96476),
	(1751579, 1691060, 675590),
	(1751579, 1691060, 720457),
	(1751579, 1691060, 1211160),
	(1751579, 1691060, 1250242),
	(1751579, 1691060, 1531252),
	(1751579, 1691060, 1572350),
	(1751579, 1691060, 1578606),
	(1751579, 1691060, 1578685),
	(1751579, 1691060, 1590540),
	(1751579, 1756682, 96476),
	(1751579, 1756682, 675590),
	(1751579, 1756682, 1211160),
	(1751579, 1756682, 1250188),
	(1751579, 1756682, 1250242),
	(1751579, 1756682, 1531252),
	(1751579, 1756682, 1572350),
	(1751579, 1756682, 1578606),
	(1751579, 1756682, 1578685),
	(1751579, 1756778, 1531252),
	(1751579, 1756778, 1578685),
	(1751579, 1756778, 1590540),
	(1751579, 1758896, 1578685),
	(1755528, 1636579, 300490),
	(1755528, 1649882, 300490),
	(1755528, 1649882, 643126),
	(1755528, 1672554, 298157),
	(1755528, 1672554, 300490),
	(1755528, 1672554, 300502),
	(1755528, 1672554, 643126),
	(1755528, 1672554, 846232),
	(1755528, 1726675, 300490),
	(1755528, 1726675, 643126),
	(1755528, 1749524, 95927),
	(1755528, 1749524, 890727),
	(1755528, 1767798, 300490),
	(1755528, 1767798, 300502),
	(1755528, 1767798, 643126),
	(1755528, 1767798, 846232),
	(1755661, 1635058, 95219),
	(1755661, 1635058, 147932),
	(1755661, 1635058, 176351),
	(1755661, 1635058, 176791),
	(1755661, 1635058, 298955),
	(1755661, 1635058, 302084),
	(1755661, 1635058, 372949),
	(1755661, 1635058, 600003),
	(1755661, 1635058, 643619),
	(1755661, 1635058, 661973),
	(1755661, 1636579, 302084),
	(1755661, 1700782, 302084),
	(1755661, 1755997, 302084),
	(1755661, 1792340, 302084),
	(1755997, 1634203, 600041),
	(1755997, 1634203, 600212),
	(1755997, 1634203, 642091),
	(1755997, 1634203, 642213),
	(1755997, 1634203, 643129),
	(1755997, 1634203, 1114118),
	(1755997, 1635058, 95587),
	(1755997, 1635058, 144317),
	(1755997, 1635058, 183019),
	(1755997, 1635058, 299611),
	(1755997, 1635058, 299683),
	(1755997, 1635058, 302084),
	(1755997, 1635058, 598359),
	(1755997, 1635058, 1112575),
	(1755997, 1635058, 1118227),
	(1755997, 1636579, 302084),
	(1755997, 1636579, 600041),
	(1755997, 1636579, 600212),
	(1755997, 1636579, 600292),
	(1755997, 1636579, 642091),
	(1755997, 1636579, 642213),
	(1755997, 1636579, 643129),
	(1755997, 1636579, 1114118),
	(1755997, 1700782, 302084),
	(1755997, 1700782, 491990),
	(1755997, 1700782, 584517),
	(1755997, 1700782, 600041),
	(1755997, 1700782, 600212),
	(1755997, 1700782, 600292),
	(1755997, 1700782, 642091),
	(1755997, 1700782, 642213),
	(1755997, 1700782, 643129),
	(1755997, 1700782, 1114118),
	(1755997, 1755661, 302084),
	(1755997, 1756806, 600292),
	(1755997, 1764417, 642213),
	(1755997, 1764417, 643129),
	(1755997, 1764417, 1114118),
	(1755997, 1792339, 600041),
	(1755997, 1792339, 600212),
	(1755997, 1792340, 302084),
	(1755997, 1792340, 491990),
	(1755997, 1792340, 584517),
	(1755997, 1792340, 642091),
	(1755997, 1792340, 642213),
	(1755997, 1792340, 643129),
	(1755997, 1792340, 1114118),
	(1755997, 2034835, 600041),
	(1755997, 2080404, 600041),
	(1755997, 2080448, 600212),
	(1755997, 2080448, 600292),
	(1756460, 1636367, 1120459),
	(1756460, 1636579, 96253),
	(1756460, 1636579, 473571),
	(1756460, 1636579, 499808),
	(1756460, 1636579, 674266),
	(1756460, 1636579, 675547),
	(1756460, 1636579, 720514),
	(1756460, 1636579, 1003505),
	(1756460, 1636579, 1120459),
	(1756460, 1636579, 1212236),
	(1756460, 1636579, 1212882),
	(1756460, 1636579, 1341457),
	(1756460, 1636579, 1531074),
	(1756460, 1673667, 499808),
	(1756460, 1673667, 674266),
	(1756460, 1673667, 1120459),
	(1756460, 1677020, 1120459),
	(1756460, 1691060, 1531074),
	(1756460, 1700782, 675547),
	(1756460, 1700782, 720514),
	(1756460, 1700782, 1341457),
	(1756460, 1700807, 1003505),
	(1756460, 1709042, 1120459),
	(1756460, 1756806, 499808),
	(1756460, 1823882, 1531074),
	(1756460, 2034808, 499808),
	(1756460, 2101523, 1531074),
	(1756460, 2266970, 1003505),
	(1756460, 2371891, 1531074),
	(1756460, 2390072, 1531074),
	(1756460, 2616934, 1531074),
	(1756460, 2616935, 1531074),
	(1756499, 1634203, 674307),
	(1756499, 1636579, 674307),
	(1756499, 1672554, 674307),
	(1756499, 1691060, 630611),
	(1756499, 1700782, 630611),
	(1756499, 1756682, 630611),
	(1756499, 1792339, 674307),
	(1756499, 1792340, 674307),
	(1756682, 1636579, 1578685),
	(1756682, 1691060, 96476),
	(1756682, 1691060, 333035),
	(1756682, 1691060, 333057),
	(1756682, 1691060, 630611),
	(1756682, 1691060, 655601),
	(1756682, 1691060, 675439),
	(1756682, 1691060, 675590),
	(1756682, 1691060, 701648),
	(1756682, 1691060, 1167789),
	(1756682, 1691060, 1167899),
	(1756682, 1691060, 1211160),
	(1756682, 1691060, 1250242),
	(1756682, 1691060, 1531100),
	(1756682, 1691060, 1531252),
	(1756682, 1691060, 1572350),
	(1756682, 1691060, 1578606),
	(1756682, 1691060, 1578685),
	(1756682, 1700782, 333057),
	(1756682, 1700782, 630611),
	(1756682, 1700782, 655601),
	(1756682, 1700782, 701648),
	(1756682, 1700782, 1167899),
	(1756682, 1751579, 96476),
	(1756682, 1751579, 675590),
	(1756682, 1751579, 1211160),
	(1756682, 1751579, 1250188),
	(1756682, 1751579, 1250242),
	(1756682, 1751579, 1531252),
	(1756682, 1751579, 1572350),
	(1756682, 1751579, 1578606),
	(1756682, 1751579, 1578685),
	(1756682, 1756499, 630611),
	(1756682, 1756778, 1531100),
	(1756682, 1756778, 1531252),
	(1756682, 1756778, 1578685),
	(1756682, 1758896, 1578685),
	(1756778, 1636579, 1578685),
	(1756778, 1691060, 96581),
	(1756778, 1691060, 256772),
	(1756778, 1691060, 256790),
	(1756778, 1691060, 539001),
	(1756778, 1691060, 655496),
	(1756778, 1691060, 675489),
	(1756778, 1691060, 1258228),
	(1756778, 1691060, 1531100),
	(1756778, 1691060, 1531252),
	(1756778, 1691060, 1578685),
	(1756778, 1691060, 1590540),
	(1756778, 1751579, 1531252),
	(1756778, 1751579, 1578685),
	(1756778, 1751579, 1590540),
	(1756778, 1756682, 1531100),
	(1756778, 1756682, 1531252),
	(1756778, 1756682, 1578685),
	(1756778, 1758896, 1578685),
	(1756805, 1636579, 96613),
	(1756805, 1636579, 176777),
	(1756805, 1636579, 1138287),
	(1756805, 1636579, 1236702),
	(1756805, 1636579, 1520849),
	(1756805, 1665255, 939956),
	(1756805, 1677020, 96613),
	(1756805, 1677020, 176777),
	(1756805, 1677020, 1138287),
	(1756805, 1677020, 1236702),
	(1756805, 1677020, 1520849),
	(1756805, 1756806, 96613),
	(1756805, 1756806, 176777),
	(1756805, 1756806, 1138287),
	(1756805, 1756806, 1236702),
	(1756805, 1756806, 1520849),
	(1756806, 1636367, 655470),
	(1756806, 1636579, 96613),
	(1756806, 1636579, 98916),
	(1756806, 1636579, 176777),
	(1756806, 1636579, 256190),
	(1756806, 1636579, 499808),
	(1756806, 1636579, 600134),
	(1756806, 1636579, 600145),
	(1756806, 1636579, 600292),
	(1756806, 1636579, 644255),
	(1756806, 1636579, 655470),
	(1756806, 1636579, 1138287),
	(1756806, 1636579, 1236702),
	(1756806, 1636579, 1520849),
	(1756806, 1673667, 499808),
	(1756806, 1677020, 96613),
	(1756806, 1677020, 98916),
	(1756806, 1677020, 176777),
	(1756806, 1677020, 600134),
	(1756806, 1677020, 600145),
	(1756806, 1677020, 644255),
	(1756806, 1677020, 1138287),
	(1756806, 1677020, 1236702),
	(1756806, 1677020, 1520849),
	(1756806, 1700782, 600292),
	(1756806, 1755997, 600292),
	(1756806, 1756460, 499808),
	(1756806, 1756805, 96613),
	(1756806, 1756805, 176777),
	(1756806, 1756805, 1138287),
	(1756806, 1756805, 1236702),
	(1756806, 1756805, 1520849),
	(1756806, 1759443, 98916),
	(1756806, 1759443, 600134),
	(1756806, 2034808, 499808),
	(1756806, 2080448, 600292),
	(1756874, 1636579, 96684),
	(1756874, 1636579, 473795),
	(1756874, 1636579, 1262335),
	(1756874, 1677020, 96684),
	(1756874, 1677020, 473795),
	(1756874, 1677020, 1262335),
	(1756874, 1758891, 1251593),
	(1756874, 1759818, 1262335),
	(1756874, 2044172, 1262335),
	(1756898, 1636579, 96708),
	(1756898, 1636579, 302429),
	(1756898, 1636579, 1305468),
	(1756898, 1691060, 302429),
	(1756898, 1691060, 1305468),
	(1756898, 1913144, 302429),
	(1756898, 1913144, 1305468),
	(1757570, 1634203, 525329),
	(1757570, 1634203, 1316139),
	(1757570, 1636579, 525329),
	(1757570, 1636579, 1316139),
	(1757570, 1700782, 525329),
	(1757570, 1700782, 1316139),
	(1757570, 1876677, 525329),
	(1757570, 1876677, 1316139),
	(1758870, 1636579, 98402),
	(1758870, 1636579, 502772),
	(1758870, 1651350, 502772),
	(1758870, 1677020, 98402),
	(1758870, 1691060, 98306),
	(1758870, 1691060, 98402),
	(1758870, 1691060, 332109),
	(1758870, 1691060, 502772),
	(1758870, 1691060, 503392),
	(1758870, 1691060, 503448),
	(1758870, 1691060, 503471),
	(1758870, 1691060, 504932),
	(1758870, 1691060, 1121005),
	(1758870, 1691060, 1184987),
	(1758870, 1706961, 98402),
	(1758870, 1706961, 502772),
	(1758870, 1758957, 98402),
	(1758870, 1758957, 502772),
	(1758870, 1758958, 98402),
	(1758870, 1758958, 502772),
	(1758891, 1636579, 503806),
	(1758891, 1636579, 1279294),
	(1758891, 1636579, 1543022),
	(1758891, 1638447, 503806),
	(1758891, 1638447, 1279294),
	(1758891, 1638447, 1543022),
	(1758891, 1641409, 503806),
	(1758891, 1641656, 503806),
	(1758891, 1677489, 503806),
	(1758891, 1679303, 1543022),
	(1758891, 1679311, 1279294),
	(1758891, 1679311, 1543022),
	(1758891, 1747591, 502382),
	(1758891, 1747591, 503806),
	(1758891, 1747591, 893920),
	(1758891, 1756874, 1251593),
	(1758891, 2036489, 503806),
	(1758891, 2036525, 503806),
	(1758891, 2089879, 1543022),
	(1758896, 1636579, 1578685),
	(1758896, 1691060, 332687),
	(1758896, 1691060, 468020),
	(1758896, 1691060, 502965),
	(1758896, 1691060, 503678),
	(1758896, 1691060, 1578685),
	(1758896, 1751579, 1578685),
	(1758896, 1756682, 1578685),
	(1758896, 1756778, 1578685),
	(1758957, 1636579, 98402),
	(1758957, 1636579, 300861),
	(1758957, 1636579, 301601),
	(1758957, 1636579, 331904),
	(1758957, 1636579, 332571),
	(1758957, 1636579, 500714),
	(1758957, 1636579, 502770),
	(1758957, 1636579, 502772),
	(1758957, 1636579, 712831),
	(1758957, 1636579, 1017132),
	(1758957, 1636579, 1279177),
	(1758957, 1651350, 500714),
	(1758957, 1651350, 502770),
	(1758957, 1651350, 502772),
	(1758957, 1651350, 1017132),
	(1758957, 1677020, 98402),
	(1758957, 1677020, 331904),
	(1758957, 1691060, 98402),
	(1758957, 1691060, 502770),
	(1758957, 1691060, 502772),
	(1758957, 1693982, 500714),
	(1758957, 1693982, 1017132),
	(1758957, 1706961, 98402),
	(1758957, 1706961, 500714),
	(1758957, 1706961, 502770),
	(1758957, 1706961, 502772),
	(1758957, 1706961, 1017132),
	(1758957, 1758870, 98402),
	(1758957, 1758870, 502772),
	(1758957, 1758958, 98402),
	(1758957, 1758958, 331904),
	(1758957, 1758958, 502772),
	(1758957, 1823882, 1279177),
	(1758957, 2390072, 1279177),
	(1758958, 1636579, 98402),
	(1758958, 1636579, 331904),
	(1758958, 1636579, 502772),
	(1758958, 1636579, 503387),
	(1758958, 1651350, 341276),
	(1758958, 1651350, 502772),
	(1758958, 1651350, 571374),
	(1758958, 1677020, 98402),
	(1758958, 1677020, 331904),
	(1758958, 1691060, 98402),
	(1758958, 1691060, 502772),
	(1758958, 1706961, 98402),
	(1758958, 1706961, 502772),
	(1758958, 1758870, 98402),
	(1758958, 1758870, 502772),
	(1758958, 1758957, 98402),
	(1758958, 1758957, 331904),
	(1758958, 1758957, 502772),
	(1759443, 1636579, 98916),
	(1759443, 1636579, 600134),
	(1759443, 1677020, 98916),
	(1759443, 1677020, 600134),
	(1759443, 1756806, 98916),
	(1759443, 1756806, 600134),
	(1759818, 1636579, 701781),
	(1759818, 1636579, 1262335),
	(1759818, 1677020, 701781),
	(1759818, 1677020, 1262335),
	(1759818, 1756874, 1262335),
	(1759818, 2044172, 701781),
	(1759818, 2044172, 1262335),
	(1764417, 1634203, 140402),
	(1764417, 1634203, 144448),
	(1764417, 1634203, 150612),
	(1764417, 1634203, 617628),
	(1764417, 1634203, 642213),
	(1764417, 1634203, 643129),
	(1764417, 1634203, 674403),
	(1764417, 1634203, 676435),
	(1764417, 1634203, 708902),
	(1764417, 1634203, 846412),
	(1764417, 1634203, 1114118),
	(1764417, 1634204, 140402),
	(1764417, 1634204, 144448),
	(1764417, 1634204, 150612),
	(1764417, 1634204, 617628),
	(1764417, 1634204, 674403),
	(1764417, 1634204, 676435),
	(1764417, 1634204, 708902),
	(1764417, 1634204, 846412),
	(1764417, 1636579, 642213),
	(1764417, 1636579, 643129),
	(1764417, 1636579, 1114118),
	(1764417, 1700782, 642213),
	(1764417, 1700782, 643129),
	(1764417, 1700782, 1114118),
	(1764417, 1755997, 642213),
	(1764417, 1755997, 643129),
	(1764417, 1755997, 1114118),
	(1764417, 1792340, 642213),
	(1764417, 1792340, 643129),
	(1764417, 1792340, 1114118),
	(1767798, 1636579, 300490),
	(1767798, 1649882, 300490),
	(1767798, 1649882, 600062),
	(1767798, 1649882, 643126),
	(1767798, 1649882, 643554),
	(1767798, 1672554, 150356),
	(1767798, 1672554, 300490),
	(1767798, 1672554, 300502),
	(1767798, 1672554, 643126),
	(1767798, 1672554, 644138),
	(1767798, 1672554, 846232),
	(1767798, 1726675, 300490),
	(1767798, 1726675, 302090),
	(1767798, 1726675, 302095),
	(1767798, 1726675, 600062),
	(1767798, 1726675, 643126),
	(1767798, 1726675, 643554),
	(1767798, 1726675, 891777),
	(1767798, 1726675, 1138366),
	(1767798, 1726675, 1302855),
	(1767798, 1743632, 150356),
	(1767798, 1743632, 176590),
	(1767798, 1755528, 300490),
	(1767798, 1755528, 300502),
	(1767798, 1755528, 643126),
	(1767798, 1755528, 846232),
	(1767798, 1800077, 150356),
	(1767798, 1800077, 176590),
	(1768163, 1634203, 643128),
	(1768163, 1634203, 674407),
	(1768163, 1636579, 643128),
	(1768163, 1636579, 674407),
	(1768163, 1649651, 643128),
	(1768163, 1649651, 674407),
	(1768163, 1672554, 643128),
	(1768163, 1672554, 674407),
	(1768163, 1709731, 674407),
	(1768163, 1792339, 643128),
	(1768163, 1792340, 643128),
	(1768163, 1792340, 674407),
	(1768163, 2097005, 643128),
	(1768163, 2097006, 643128),
	(1768163, 2097006, 674407),
	(1770995, 1636579, 1013028),
	(1770995, 1679303, 1013028),
	(1770995, 1711747, 1013028),
	(1770995, 1895113, 1013028),
	(1772259, 1635490, 212629),
	(1772259, 1635490, 500664),
	(1772259, 1635490, 597963),
	(1772259, 1635490, 597965),
	(1772259, 1635490, 597967),
	(1772259, 1635490, 905980),
	(1772259, 1635490, 984186),
	(1772259, 1635490, 1010999),
	(1772259, 1635490, 1011001),
	(1772259, 1636579, 597965),
	(1772259, 1636579, 1010999),
	(1772259, 1654062, 1010999),
	(1772259, 1677020, 212629),
	(1772259, 1677020, 299311),
	(1772259, 1677020, 500662),
	(1772259, 1677020, 500664),
	(1772259, 1677020, 597963),
	(1772259, 1677020, 597967),
	(1772259, 1677020, 628228),
	(1772259, 1677020, 1011001),
	(1772259, 1677020, 1016627),
	(1772259, 1711120, 1010999),
	(1772259, 1717396, 597965),
	(1783310, 1636367, 1250266),
	(1783310, 1636579, 1250266),
	(1783310, 1638910, 1250266),
	(1783310, 1653321, 1250266),
	(1783310, 1672500, 1250266),
	(1783310, 1679303, 1250266),
	(1783310, 1904891, 1250266),
	(1792289, 1634203, 643132),
	(1792289, 1636579, 643132),
	(1792289, 1672554, 643132),
	(1792289, 1743632, 643132),
	(1792289, 1792339, 643132),
	(1792289, 1792340, 643132),
	(1792339, 1634203, 140737),
	(1792339, 1634203, 175863),
	(1792339, 1634203, 499885),
	(1792339, 1634203, 599788),
	(1792339, 1634203, 600041),
	(1792339, 1634203, 600212),
	(1792339, 1634203, 642089),
	(1792339, 1634203, 643128),
	(1792339, 1634203, 643132),
	(1792339, 1634203, 643133),
	(1792339, 1634203, 643654),
	(1792339, 1634203, 674307),
	(1792339, 1634203, 674327),
	(1792339, 1634203, 845903),
	(1792339, 1634203, 845905),
	(1792339, 1634203, 845906),
	(1792339, 1634203, 1253300),
	(1792339, 1634204, 643654),
	(1792339, 1634204, 1253300),
	(1792339, 1636579, 140737),
	(1792339, 1636579, 175863),
	(1792339, 1636579, 499885),
	(1792339, 1636579, 599788),
	(1792339, 1636579, 600041),
	(1792339, 1636579, 600212),
	(1792339, 1636579, 642089),
	(1792339, 1636579, 643128),
	(1792339, 1636579, 643132),
	(1792339, 1636579, 643133),
	(1792339, 1636579, 643654),
	(1792339, 1636579, 674307),
	(1792339, 1636579, 674327),
	(1792339, 1636579, 845903),
	(1792339, 1636579, 845905),
	(1792339, 1636579, 845906),
	(1792339, 1649651, 643128),
	(1792339, 1672554, 140737),
	(1792339, 1672554, 175863),
	(1792339, 1672554, 642089),
	(1792339, 1672554, 643128),
	(1792339, 1672554, 643132),
	(1792339, 1672554, 643133),
	(1792339, 1672554, 674307),
	(1792339, 1672554, 674327),
	(1792339, 1672554, 845903),
	(1792339, 1672554, 845905),
	(1792339, 1672554, 845906),
	(1792339, 1700782, 499885),
	(1792339, 1700782, 599788),
	(1792339, 1700782, 600041),
	(1792339, 1700782, 600212),
	(1792339, 1700782, 643654),
	(1792339, 1700782, 1253300),
	(1792339, 1700782, 1571222),
	(1792339, 1743632, 643132),
	(1792339, 1755997, 600041),
	(1792339, 1755997, 600212),
	(1792339, 1756499, 674307),
	(1792339, 1768163, 643128),
	(1792339, 1792289, 643132),
	(1792339, 1792340, 140737),
	(1792339, 1792340, 175863),
	(1792339, 1792340, 642089),
	(1792339, 1792340, 643128),
	(1792339, 1792340, 643132),
	(1792339, 1792340, 643133),
	(1792339, 1792340, 674307),
	(1792339, 1792340, 674327),
	(1792339, 1792340, 845903),
	(1792339, 1792340, 845905),
	(1792339, 1792340, 845906),
	(1792339, 1792340, 1571222),
	(1792339, 1832334, 643133),
	(1792339, 2034835, 499885),
	(1792339, 2034835, 599788),
	(1792339, 2034835, 600041),
	(1792339, 2034835, 643654),
	(1792339, 2034835, 1253300),
	(1792339, 2034835, 1571222),
	(1792339, 2080404, 600041),
	(1792339, 2080448, 600212),
	(1792339, 2097005, 643128),
	(1792339, 2097006, 643128),
	(1792339, 2097006, 643133),
	(1792340, 1634203, 140737),
	(1792340, 1634203, 175863),
	(1792340, 1634203, 598248),
	(1792340, 1634203, 642089),
	(1792340, 1634203, 642091),
	(1792340, 1634203, 642213),
	(1792340, 1634203, 643128),
	(1792340, 1634203, 643129),
	(1792340, 1634203, 643132),
	(1792340, 1634203, 643133),
	(1792340, 1634203, 674307),
	(1792340, 1634203, 674327),
	(1792340, 1634203, 674407),
	(1792340, 1634203, 845903),
	(1792340, 1634203, 845905),
	(1792340, 1634203, 845906),
	(1792340, 1634203, 1114118),
	(1792340, 1635058, 302084),
	(1792340, 1636579, 140737),
	(1792340, 1636579, 175863),
	(1792340, 1636579, 302084),
	(1792340, 1636579, 598248),
	(1792340, 1636579, 642089),
	(1792340, 1636579, 642091),
	(1792340, 1636579, 642213),
	(1792340, 1636579, 643128),
	(1792340, 1636579, 643129),
	(1792340, 1636579, 643132),
	(1792340, 1636579, 643133),
	(1792340, 1636579, 674307),
	(1792340, 1636579, 674327),
	(1792340, 1636579, 674407),
	(1792340, 1636579, 845903),
	(1792340, 1636579, 845905),
	(1792340, 1636579, 845906),
	(1792340, 1636579, 1114118),
	(1792340, 1636579, 1230512),
	(1792340, 1649651, 598248),
	(1792340, 1649651, 643128),
	(1792340, 1649651, 674407),
	(1792340, 1672554, 140737),
	(1792340, 1672554, 175863),
	(1792340, 1672554, 598248),
	(1792340, 1672554, 642089),
	(1792340, 1672554, 643128),
	(1792340, 1672554, 643132),
	(1792340, 1672554, 643133),
	(1792340, 1672554, 674307),
	(1792340, 1672554, 674327),
	(1792340, 1672554, 674407),
	(1792340, 1672554, 674709),
	(1792340, 1672554, 845903),
	(1792340, 1672554, 845905),
	(1792340, 1672554, 845906),
	(1792340, 1672554, 1230512),
	(1792340, 1700782, 302084),
	(1792340, 1700782, 491990),
	(1792340, 1700782, 584517),
	(1792340, 1700782, 642091),
	(1792340, 1700782, 642213),
	(1792340, 1700782, 643129),
	(1792340, 1700782, 674709),
	(1792340, 1700782, 675677),
	(1792340, 1700782, 862645),
	(1792340, 1700782, 1114118),
	(1792340, 1700782, 1571222),
	(1792340, 1709731, 674407),
	(1792340, 1743632, 643132),
	(1792340, 1755661, 302084),
	(1792340, 1755997, 302084),
	(1792340, 1755997, 491990),
	(1792340, 1755997, 584517),
	(1792340, 1755997, 642091),
	(1792340, 1755997, 642213),
	(1792340, 1755997, 643129),
	(1792340, 1755997, 1114118),
	(1792340, 1756499, 674307),
	(1792340, 1764417, 642213),
	(1792340, 1764417, 643129),
	(1792340, 1764417, 1114118),
	(1792340, 1768163, 643128),
	(1792340, 1768163, 674407),
	(1792340, 1792289, 643132),
	(1792340, 1792339, 140737),
	(1792340, 1792339, 175863),
	(1792340, 1792339, 642089),
	(1792340, 1792339, 643128),
	(1792340, 1792339, 643132),
	(1792340, 1792339, 643133),
	(1792340, 1792339, 674307),
	(1792340, 1792339, 674327),
	(1792340, 1792339, 845903),
	(1792340, 1792339, 845905),
	(1792340, 1792339, 845906),
	(1792340, 1792339, 1571222),
	(1792340, 1832334, 643133),
	(1792340, 2034835, 675677),
	(1792340, 2034835, 1571222),
	(1792340, 2097005, 643128),
	(1792340, 2097006, 643128),
	(1792340, 2097006, 643133),
	(1792340, 2097006, 674407),
	(1792577, 1636579, 302442),
	(1792577, 1672554, 302442),
	(1792577, 1800077, 302442),
	(1792688, 1634203, 986755),
	(1792688, 1636579, 986755),
	(1792688, 1672554, 845901),
	(1792688, 1672554, 986755),
	(1792688, 2097006, 986755),
	(1800077, 1636579, 302442),
	(1800077, 1672554, 150356),
	(1800077, 1672554, 176696),
	(1800077, 1672554, 301926),
	(1800077, 1672554, 302442),
	(1800077, 1672554, 500137),
	(1800077, 1672554, 1185942),
	(1800077, 1743632, 150356),
	(1800077, 1743632, 176590),
	(1800077, 1743632, 471056),
	(1800077, 1743632, 877191),
	(1800077, 1767798, 150356),
	(1800077, 1767798, 176590),
	(1800077, 1792577, 302442),
	(1823882, 1636579, 1279177),
	(1823882, 1636579, 1515593),
	(1823882, 1636579, 1531074),
	(1823882, 1691060, 1531074),
	(1823882, 1756460, 1531074),
	(1823882, 1758957, 1279177),
	(1823882, 2101523, 1531074),
	(1823882, 2371891, 1531074),
	(1823882, 2390072, 1279177),
	(1823882, 2390072, 1531074),
	(1823882, 2616934, 1531074),
	(1823882, 2616935, 1531074),
	(1832334, 1634203, 643133),
	(1832334, 1636579, 643133),
	(1832334, 1672554, 643133),
	(1832334, 1792339, 643133),
	(1832334, 1792340, 643133),
	(1832334, 2097006, 643133),
	(1849119, 1636579, 435696),
	(1849119, 1743291, 435696),
	(1849119, 2000872, 435696),
	(1875664, 1635490, 500712),
	(1875664, 1635490, 1137958),
	(1875664, 1636579, 500712),
	(1875664, 1636579, 1137958),
	(1876677, 1634203, 525329),
	(1876677, 1634203, 1316139),
	(1876677, 1636579, 301711),
	(1876677, 1636579, 525329),
	(1876677, 1636579, 990383),
	(1876677, 1636579, 1316139),
	(1876677, 1700782, 525329),
	(1876677, 1700782, 1316139),
	(1876677, 1757570, 525329),
	(1876677, 1757570, 1316139),
	(1879077, 1634203, 599191),
	(1879077, 1634203, 674283),
	(1879077, 1634203, 794692),
	(1879077, 1634203, 1113100),
	(1879077, 1636579, 674283),
	(1879077, 1636579, 1113100),
	(1879077, 1672554, 256463),
	(1879077, 1672554, 599191),
	(1879077, 1672554, 674283),
	(1879077, 1672554, 674405),
	(1879077, 1672554, 794692),
	(1879077, 1672554, 1113100),
	(1879077, 1672555, 599191),
	(1879077, 1672555, 794692),
	(1879077, 1749147, 599191),
	(1879077, 1749524, 599191),
	(1895113, 1636579, 1013028),
	(1895113, 1679303, 1013028),
	(1895113, 1711747, 1013028),
	(1895113, 1770995, 1013028),
	(1904891, 1636367, 1250266),
	(1904891, 1636367, 1534428),
	(1904891, 1636579, 1250266),
	(1904891, 1638910, 1250266),
	(1904891, 1653321, 1250266),
	(1904891, 1672500, 369558),
	(1904891, 1672500, 1250266),
	(1904891, 1672500, 1534428),
	(1904891, 1679303, 1250266),
	(1904891, 1783310, 1250266),
	(1911080, 1636579, 297941),
	(1911080, 1636579, 338360),
	(1911080, 1636579, 742863),
	(1911080, 1636579, 802786),
	(1913144, 1636579, 302429),
	(1913144, 1636579, 1305468),
	(1913144, 1691060, 302429),
	(1913144, 1691060, 1305468),
	(1913144, 1756898, 302429),
	(1913144, 1756898, 1305468),
	(1931101, 1636579, 329850),
	(2000872, 1636579, 435696),
	(2000872, 1743291, 435696),
	(2000872, 1849119, 435696),
	(2034808, 1636579, 499808),
	(2034808, 1673667, 499808),
	(2034808, 1756460, 499808),
	(2034808, 1756806, 499808),
	(2034835, 1634203, 499885),
	(2034835, 1634203, 599788),
	(2034835, 1634203, 600041),
	(2034835, 1634203, 643654),
	(2034835, 1634203, 1253300),
	(2034835, 1634204, 643654),
	(2034835, 1634204, 1253300),
	(2034835, 1636579, 499885),
	(2034835, 1636579, 599788),
	(2034835, 1636579, 600041),
	(2034835, 1636579, 643654),
	(2034835, 1700782, 499885),
	(2034835, 1700782, 599788),
	(2034835, 1700782, 600041),
	(2034835, 1700782, 643654),
	(2034835, 1700782, 675677),
	(2034835, 1700782, 1253300),
	(2034835, 1700782, 1571222),
	(2034835, 1755997, 600041),
	(2034835, 1792339, 499885),
	(2034835, 1792339, 599788),
	(2034835, 1792339, 600041),
	(2034835, 1792339, 643654),
	(2034835, 1792339, 1253300),
	(2034835, 1792339, 1571222),
	(2034835, 1792340, 675677),
	(2034835, 1792340, 1571222),
	(2034835, 2080404, 600041),
	(2035130, 1636579, 500667),
	(2035130, 1636579, 1016805),
	(2035134, 1636579, 500675),
	(2035134, 1636579, 524253),
	(2035134, 1636579, 1016842),
	(2035134, 1693982, 500675),
	(2035134, 1693982, 524253),
	(2035134, 1693982, 1016842),
	(2035146, 1636579, 500710),
	(2036284, 1636579, 503138),
	(2036284, 1636579, 1016745),
	(2036489, 1636579, 503806),
	(2036489, 1638447, 503806),
	(2036489, 1641409, 503806),
	(2036489, 1641656, 503806),
	(2036489, 1677489, 503806),
	(2036489, 1747591, 503806),
	(2036489, 1758891, 503806),
	(2036489, 2036525, 503806),
	(2036525, 1636579, 503806),
	(2036525, 1638447, 503806),
	(2036525, 1641409, 503806),
	(2036525, 1641656, 503806),
	(2036525, 1677489, 503806),
	(2036525, 1747591, 503806),
	(2036525, 1758891, 503806),
	(2036525, 2036489, 503806),
	(2041988, 1636579, 513412),
	(2041988, 1672037, 513412),
	(2041988, 1672037, 614033),
	(2041988, 1672037, 836055),
	(2041988, 1672037, 986586),
	(2041988, 1672067, 513412),
	(2041988, 1707228, 513412),
	(2044172, 1636579, 701781),
	(2044172, 1636579, 1262335),
	(2044172, 1636579, 1520818),
	(2044172, 1677020, 518647),
	(2044172, 1677020, 701781),
	(2044172, 1677020, 1262335),
	(2044172, 1677020, 1520818),
	(2044172, 1756874, 1262335),
	(2044172, 1759818, 701781),
	(2044172, 1759818, 1262335),
	(2062158, 1636579, 559883),
	(2062158, 1672554, 559883),
	(2062158, 1672555, 559883),
	(2062158, 1749147, 559883),
	(2062158, 1749524, 559883),
	(2080404, 1634203, 600041),
	(2080404, 1636579, 600041),
	(2080404, 1700782, 600041),
	(2080404, 1755997, 600041),
	(2080404, 1792339, 600041),
	(2080404, 2034835, 600041),
	(2080448, 1634203, 600212),
	(2080448, 1636579, 600212),
	(2080448, 1636579, 600292),
	(2080448, 1700782, 600212),
	(2080448, 1700782, 600292),
	(2080448, 1755997, 600212),
	(2080448, 1755997, 600292),
	(2080448, 1756806, 600292),
	(2080448, 1792339, 600212),
	(2089879, 1636579, 1543022),
	(2089879, 1638447, 1543022),
	(2089879, 1679303, 1543022),
	(2089879, 1679311, 1543022),
	(2089879, 1758891, 1543022),
	(2097005, 1634203, 643128),
	(2097005, 1636579, 643128),
	(2097005, 1636579, 1230513),
	(2097005, 1649651, 643128),
	(2097005, 1672554, 643128),
	(2097005, 1672554, 1230513),
	(2097005, 1768163, 643128),
	(2097005, 1792339, 643128),
	(2097005, 1792340, 643128),
	(2097005, 2097006, 643128),
	(2097006, 1634203, 643128),
	(2097006, 1634203, 643133),
	(2097006, 1634203, 674407),
	(2097006, 1634203, 986755),
	(2097006, 1636579, 643128),
	(2097006, 1636579, 643133),
	(2097006, 1636579, 674407),
	(2097006, 1636579, 986755),
	(2097006, 1649651, 643128),
	(2097006, 1649651, 674407),
	(2097006, 1672554, 643128),
	(2097006, 1672554, 643133),
	(2097006, 1672554, 674407),
	(2097006, 1672554, 986755),
	(2097006, 1709731, 674407),
	(2097006, 1768163, 643128),
	(2097006, 1768163, 674407),
	(2097006, 1792339, 643128),
	(2097006, 1792339, 643133),
	(2097006, 1792340, 643128),
	(2097006, 1792340, 643133),
	(2097006, 1792340, 674407),
	(2097006, 1792688, 986755),
	(2097006, 1832334, 643133),
	(2097006, 2097005, 643128),
	(2101523, 1636579, 1531074),
	(2101523, 1691060, 1531074),
	(2101523, 1756460, 1531074),
	(2101523, 1823882, 1531074),
	(2101523, 2371891, 1531074),
	(2101523, 2390072, 1531074),
	(2101523, 2616934, 1531074),
	(2101523, 2616935, 1531074),
	(2205873, 1636579, 845569),
	(2205873, 1672554, 845569),
	(2266970, 1636579, 1003505),
	(2266970, 1636579, 1063485),
	(2266970, 1700807, 1003505),
	(2266970, 1700807, 1063485),
	(2266970, 1756460, 1003505),
	(2371891, 1636579, 1531074),
	(2371891, 1691060, 1531074),
	(2371891, 1756460, 1531074),
	(2371891, 1823882, 1531074),
	(2371891, 2101523, 1531074),
	(2371891, 2390072, 1531074),
	(2371891, 2616934, 1531074),
	(2371891, 2616935, 1531074),
	(2390072, 1636579, 1279177),
	(2390072, 1636579, 1531074),
	(2390072, 1691060, 1531074),
	(2390072, 1756460, 1531074),
	(2390072, 1758957, 1279177),
	(2390072, 1823882, 1279177),
	(2390072, 1823882, 1531074),
	(2390072, 2101523, 1531074),
	(2390072, 2371891, 1531074),
	(2390072, 2616934, 1531074),
	(2390072, 2616935, 1531074);
/*!40000 ALTER TABLE `coauthorswpaper` ENABLE KEYS */;


-- Dumping structure for table dblp.papers
CREATE TABLE IF NOT EXISTS `papers` (
  `paperid` int(20) NOT NULL,
  `title` text NOT NULL,
  `year` varchar(10) DEFAULT NULL,
  `publisher` varchar(100) DEFAULT NULL,
  `abstract` text
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table dblp.papers: ~524 rows (approximately)
DELETE FROM `papers`;
/*!40000 ALTER TABLE `papers` DISABLE KEYS */;
INSERT INTO `papers` (`paperid`, `title`, `year`, `publisher`, `abstract`) VALUES
	(68194, 'Beyond Workflow Mining.', '2006', 'Business Process Management', ''),
	(105899, 'Actor-Oriented Workflow Model.', '1999', 'CODAS', ''),
	(237222, 'Workflow performance and scalability analysis using the layered queuing modeling methodology.', '2001', 'GROUP', 'The design and implementation of a workflow management system is typically a large and complex task. Decisions need to be made about the hardware and software platforms, the data structures, the algorithms, and network interconnection of various modules utilized by various users and administrators. These decisions are further complicated by requirements such as flexibility, robustness, modifiability, availability, performance, and usability. As the size of workflow systems increases, organizations are finding that the standard server/client architectures, and off-the-shelf solutions are not adequate. We can further see that in the farther future, very large-scale workflow systems (VLSW) will become more complex, and more prevalent. Thus, one further requirement is an emphasis of this document: scalability. For the purposes of our scalable workflow investigations, we describe a framework, a taxonomy, a model, and a methodology to investigate the performance of various workflow architectures as the size of the system (number of workcases) grows very large.First, this paper presents a novel workflow architectural framework and taxonomy. In fact, most current workflow architectures fall into only one of the many categories of this taxonomy: the centralized server/client category. The paper next explains a performance analysis methodology useful for exploring this taxonomy. The methodology deploys a layered queuing model, and performs mathematical analysis on this model using a modified MOL (method of layers) combined with a linearization algorithm. Finally, the paper utilizes this methodology to compare and contrast the various architectural categories, providing interesting results about performance as the number of workcases increases. Our analytic results suggest that (a) for VLSW performance determination, software architecture is as important as hardware architecture, and (b) alternatives to the client server architecture provide significantly better scalability.'),
	(943390, 'Performance Analytic Models and Analyses for Workflow Architectures.', '2001', 'Information Systems Frontiers', 'The design and implementation of a workflow management system is typically a large and complex task. Decisions need to be made about the hardware and software platforms, the data structures, the algorithms, and network interconnection of various modules utilized by various users and administrators. These decisions are further complicated by requirements such as flexibility, robustness, modifiability, availability, performance, and usability. As the size of workflow systems increases, organizations are finding that the standard server/client architectures, and off-the-shelf solutions are not adequate. We can further see that in the future, very large-scale workflow systems (VLSW) will become more complex, and more prevalent. Thus, one further requirement is an emphasis of this document: scalability. For the purposes of our scalable workflow investigations, we describe a framework, a taxonomy, a model, and a methodology to investigate the performance of various workflow architectures as the size of the system (number of workcases) grows very large.First, this paper presents a novel workflow architectural framework and taxonomy. We survey some example current workflow products and research prototype systems, illustrating some of the taxonomical categories. In fact, most current workflow architectures fall into only one of the many categories of this taxonomy: the centralized server/client category. The paper next explains a performance analysis methodology useful for exploring this taxonomy. The methodology deploys a layered queuing model, and performs mathematical analysis on this model using a modified MOL (method of layers) combined with a linearization algorithm. Finally, the paper utilizes this methodology to compare and contrast the various architectural categories, providing interesting results about performance as the number of workcases increases. Our analytic results suggest that (a) for VLSW performance determination, software architecture is as important as hardware architecture, and (b) alternatives to the client server architecture provide significantly better scalability.'),
	(1201666, 'Workflow Reduction for Reachable-path Rediscovery in Workflow Mining.', '2006', 'Foundations and Novel Approaches in Data Mining', ''),
	(1511960, 'Advances in Web and Network Technologies, and Information Management, APWeb/WAIM 2007 International Workshops: DBMAN 2007, WebETrends 2007, PAIS 2007 and ASWAN 2007, Huang Shan, China, June 16-18, 2007, Proceedings', '2007', 'APWeb/WAIM Workshops', ''),
	(1511977, 'Advances in Web and Network Technologies, and Information Management, APWeb/WAIM 2009 International Workshops: WCMT 2009, RTBI 2009, DBIR-ENQOIR 2009, PAIS 2009, Suzhou, China, April 2-4, 2009, Revised Selected Papers', '2009', 'APWeb/WAIM Workshops', ''),
	(3562, 'Multimedia Database System: Issues and Research Direction', '1996', '', ''),
	(299606, 'Secure Mediated Databases.', '1996', 'ICDE', 'With the evolution of the information superhighway, there is now an immense amount of information available in a wide variety of databases. Furthermore, users often have the ability to access legacy software packages developed by external sources. However, sometimes both the information provided by a data source, as well as one or more of the functions available through a software package may be sensitive-in such cases, organizations require that access by users be controlled. HERMES (HEterogeneous Reasoning and MEdiator System) is a platform that has been developed at the University of Maryland within which mediators may be designed and implemented. HERMES has already been used for a number of applications. In this paper, we provide a formal model of security in mediated systems. We then develop techniques that are sound and complete and respect security constraints of packages/databases participating in the mediated system. The security constraints described an this paper have been implemented, and we describe the existing implementation.'),
	(598954, 'A Unified Framework for Enforcing Multiple Access Control Policies.', '1997', 'SIGMOD Conference', 'Although several access control policies can be devised for controlling access to information, all existing authorization models, and the corresponding enforcement mechanisms, are based on a specific policy (usually the closed policy). As a consequence, although different policy choices are possible in theory, in practice only a specific policy can be actually applied within a given system. However, protection requirements within a system can vary dramatically, and no single policy may simultaneously satisfy them all. In this paper we present a flexible authorization manager (FAM) that can enforce multiple access control policies within a single, unified system. FAM is based on a language through which users can specify authorizations and access control policies to be applied in controlling execution of specific actions on given objects. We formally define the language and properties required to hold on the security specifications and prove that this language can express all security specifications. Furthermore, we show that all programs expressed in this language (called FAM/CAM-programs) are also guaranteed to be consistent (i.e., no conflicting access decisions occur) and CAM-programs are complete (i.e., every access is either authorized or denied). We then illustrate how several well-known protection policies proposed in the literature can be expressed in the FAM/CAM language and how users can customize the access control by specifying their own policies. The result is an access control mechanism which is flexible, since different access control policies can all coexist in the same data system, and extensible, since it can be augmented with any new policy a specific application or user may require.'),
	(599903, 'Temporal Modules: An Approach Toward Federated Temporal Databases.', '1993', 'SIGMOD Conference', 'In a federated database environment, different constituents of the federation may use different temporal models or physical representations for temporal information. This paper introduces a new concept, called a temporal module, to resolve these differences, or mismatches, among the constituents. Intuitively, a temporal module hides the implementation details of a temporal relation by exposing its information only through two windowing functions: The first function associates each time point with a set of tuples and the second function links each tuple to a set of time points. A calculus-style language is given to form queries on temporal modules. Temporal modules are then extended to resolve another type of mismatch among the constituents of a federation, namely, the mismatch involving different time units (e.g., month, week and day) used to record temporal information. Our solution relies on &ldquo;information conversions&rdquo; provided by each constituent. Specifically, each temporal module is extended to provide several &ldquo;windows&rdquo; to its information, each in terms of a different time unit. The first step to process a query addressed to the federation is to select suitable windows to the underlying temporal modules. In order to facilitate such a process, time units are formally defined and studied. A federated temporal database model and its query language are proposed. The query language is an extension of the above calculus-style language.'),
	(613631, 'A Logical Language for Expressing Authorizations.', '1997', 'IEEE Symposium on Security and Privacy', 'A major drawback of existing access control systems is that they have all been developed with a specific access control policy in mind. This means that all protection requirements (i.e., accesses to be allowed or denied) must be specified in terms of the policy enforced by the system. While this may be trivial for some requirements, specification of other requirements may become quite complex or even impossible. The reason for this is that a single policy simply cannot capture different protection requirements users may need to enforce on different data.In this paper we take a first step towards a model able to support different access control policies.We propose a logical language for the specification of authorizations on which such a model can be based.The language allows users to specify, together with the authorizations, the policy according to which access control decisions are to be made.Policies are expressed by means of rules which enforce derivation of authorizations, conflict resolution, access control, and integrity constraint checking.'),
	(942049, 'Temporal Modules: An Approach Toward Federated Temporal Databases.', '1995', 'Inf. Sci.', ''),
	(1118430, 'Flexible support for multiple access control policies.', '2001', 'ACM Trans. Database Syst.', 'Although several access control policies can be devised for controlling access to information, all existing authorization models, and the corresponding enforcement mechanisms, are based on a specific policy (usually the closed policy). As a consequence, although different policy choices are possible in theory, in practice only a specific policy can actually be applied within a given system. In this paper, we present a unified framework that can enforce multiple access control policies within a single system. The framework is based on a language through which users can specify security policies to be enforced on specific accesses. The language allows the specification of both positive and negative authorizations and incorporates notions of authorization derivation, conflict resolution, and decision strategies. Different strategies may be applied to different users, groups, objects, or roles, based on the needs of the security policy. The overall result is a flexible and powerful, yet simple, framework that can easily capture many of the traditional access control policies as well as protection requirements that exist in real-world applications, but are seldom supported by existing systems. The major advantage of our approach is that it can be used to specify different access control policies that can all coexist in the same system and be enforced by the same security server.'),
	(1230, 'Dynamic Multidimensional Data Cubes for Interactive Analysis of Massive Datasets.', '2005', 'Encyclopedia of Information Science and Technology (II)', ''),
	(1533, 'Dynamic Multidimensional Data Cubes.', '2003', 'Multidimensional Databases', 'Data cubes are ubiquitous tools in data warehousing, online analytical processing, and decision support applications. Based on a selection of pre-computed and materialized aggregate values, they can dramatically speed up aggregation and summarization over large data collections. Traditionally, the emphasis has been on lowering query costs with little regard to maintenance, i.e., update cost issues. We argue that current trends require data cubes to be not only query-efficient, but also dynamic at the same time, and we also show how this can be achieved. Several array-based techniques with different tradeoffs between query and update cost are discussed in detail. We also survey selected approaches for sparse data and the popular data cube operator, CUBE. Moreover, this work includes an overview of future trends and their impact on data cubes.'),
	(2192, 'Transaction Management in Database Systems', '1992', 'Database Transaction Models for Advanced Applications', ''),
	(27167, 'Scalable Access Within the Context of Digital Libraries.', '1997', 'ADL', 'This paper presents a summary of some of the work-in-progress within the Alexandria Digital Library Project. In particular, we present scalable methods of locating information at different levels within a distributed digital library environment. Starting at the high level, we show how queries can be routed to appropriate information sources. At a given source, efficient query processing is supported by using materialized views and multidimensional index structures. Finally, we propose solutions to the problem of storage and retrieval of large objects on secondary and tertiary storage.'),
	(27228, 'Smart Indexes for Efficient Browsing of Library Collections.', '1998', 'ADL', 'To enable efficient browsing and interactive querying of very large collections, such as those found in digital libraries, it is essential to provide users with summaries of query result sets. Smart indexes can be used to generate summary statistics, aggregated classification information, and/or aggregated content-based information for the result sets of arbitrary queries. We present the basic model of a smart index, as well as variations of smart indexes that are suitable when the size of summaries is large. An algorithm for generating summaries of the results of arbitrary queries is given, and algorithms for updating various summaries are discussed. Experimental results show that smart indexes generate summaries much more efficiently than traditional trees for all query areas greater than 1%-2% of the data space, with a relatively small additional storage overhead. Contrary to traditional trees, smart indexes in general perform better as the query area grows larger.'),
	(63163, 'Filtration of String Proximity Search via Transformation.', '2003', 'BIBE', 'The problem of proximity search in biological databases is addressed. We study vector transformations and conduct the application of DFT(Discrete Fourier Transformation) and DWT(Discrete Wavelet Transformation, Haar) dimensionality reduction techniques for DNA sequence proximity search to reduce the search time of range queries. Our empirical results on a number of Prokaryote and Eukaryote DNA contig databases demonstrate up to 50-fold filtration ratio of the search space, up to 13 times faster filtration. The proposed transformation techniques may easily be integrated as a preprocessing phase on top of the current existing similarity search heuristics such as BLAST [1], PattenHunter [11], FastA [17], QUASAR [4] and to efficiently prune non-relevant sequences. We study the precision of applying dimensionality reduction techniques for faster and more efficient range query searches, and discuss the imposed trade-offs.'),
	(63165, 'Efficient Filtration of Sequence Similarity Search Through Singular Value Decomposition.', '2004', 'BIBE', ''),
	(94642, 'Approximate Range Selection Queries in Peer-to-Peer Systems.', '2003', 'CIDR', ''),
	(95095, 'Protein structure alignment using geometrical features.', '2004', 'CIKM', 'A novel approach for similarity search on protein structure databases is proposed which incorporates the three dimensional coordinates of the main atoms of each amino acid and extracts a geometrical signature along with the direction of the given amino acid. As a result, each protein is presented by a series of feature vectors representing local geometry, shape, direction, and secondary structure assignment of its amino acid constituents. Furthermore, a residue-to-residue distance matrix is calculated and is incorporated into a local alignment dynamic programming algorithm to find the similar portions of two given proteins and finally a sequence alignment step is used as the last filtration step. The optimal superimposition of the detected similar regions is used to assess the quality of the results. The proposed algorithm is fast and accurate and hence could be used for the analysis of large protein structure similarity.'),
	(95227, 'Pharos: A Scalable Distributed Architecture for Locating Heterogeneous Information Sources.', '1997', 'CIKM', ''),
	(95302, 'Scalable ranking for preference queries.', '2005', 'CIKM', 'Top-k preference queries with multiple attributes are critical for decision-making applications. Previous research has concentrated on improving the computational efficiency mainly by using novel index structures and search strategies. Since current applications need to scale to terabytes of data and thousands of users, performance of such systems is strongly impacted by the amount of available memory. This paper proposes a scalable approach for memory-bounded top-k query processing.'),
	(95306, 'Efficient Processing of Conical Queries.', '2001', 'CIKM', 'Conical queries are a novel type of query with an increasing number of applications. Traditional index structures and retrieval mechanisms, in general, have been optimized for rectangular and circular queries, rather than conical queries. In this paper, we focus on conical queries which can be defined as a multi-dimensional cone in a multi-dimensional data space. We develop a model for expressing such queries and suggest efficient techniques for evaluating them. In particular, we explore the retrieval problem in the context of conical query processing and develop multi-disk allocation methods specifically for processing conical queries.'),
	(95308, 'Clustering Declustered Data for Efficient Retrieval.', '1999', 'CIKM', 'As databases increasingly integrate multimedia information in the form of image, video, and audio data, both the dimensionality and the amount of data that need to be processed is increasing rapidly. It becomes necessary to support the efficient retrieval of large amounts of multimedia data. Declustering techniques for multi-disk architectures have been effectively used for storage in relational databases. In this paper, we first establish that besides exploiting the parallelism, a careful organization of each disk must be considered for fast searching. We introduce the notion of page allocation and data space mapping which can be used to organize and retrieve multidimensional data. We work on these notions based on three different partitioning strategies: regular grid partitioning, concentric hypercubes and hyperpyramids. We develop techniques that satisfy efficient retrieval by optimizing the number of buckets retrieved by the query, disk arm movement and I/O parallelism. We prove that concentric hypercube based mapping satisfies the optimal clustering and optimal parallelism. We develop techniques based on hyperpyramid partitioning which reduces the number of buckets retrieved by the query and has very efficient inter and intra disk organizations. We evaluate the performance of proposed techniques by comparing it with the current best approaches. The new techniques lead to very significant improvement, up to 43 times, over the existing techniques, therefore resulting in fast retrieval of multimedia data.'),
	(95310, 'Vector Approximation based Indexing for Non-uniform High Dimensional Data Sets.', '2000', 'CIKM', ''),
	(95355, 'Browsing Large Digital Library Collections Using Classification Hierarchies.', '1999', 'CIKM', 'Summarization of intermediary query result sets plays an important role when users browse through digital library collections. Summarization enables users to quickly digest the results of their queries, and provides users with important information they can use to narrow their search interactively. Techniques from the field of data analysis may be applied to the problem of generating summaries of query results efficiently. Such techniques should permit the incorporation of classification hierarchies in order to provide powerful browsing environments for digital library users.'),
	(95817, 'RHist: adaptive summarization over continuous data streams.', '2002', 'CIKM', 'Maintaining approximate aggregates and summaries over data streams is crucial to handle the OLAP query workload that arises in applications, such as network monitoring and telecommunications. Furthermore, since the entire data is not available at all times the maintenance task must be done incrementally. We show that R(elaxed)Hist(ogram) is an appropriate summarization under data stream scenario. In order to reduce query estimation errors, we propose adaptive approaches which not only capture the data distribution, but also integrate independent query patterns. We introduce a workload decay model to efficiently capture global workload information and ensure that the query patterns from the recent past are weighted more than queries that are further in the past. We verify experimentally that our approach successfully adapts to continuously changing workload as well as data streams.'),
	(96053, 'Using Wavelet Decomposition to Support Progressive and Approximate Range-Sum Queries over Data Cubes.', '2000', 'CIKM', ''),
	(96055, 'A Comparison of DFT and DWT based Similarity Search in Time-Series Databases.', '2000', 'CIKM', ''),
	(96057, 'Efficient Retrieval for Browsing Large Image Databases.', '1996', 'CIKM', 'The management of large image databases poses several interesting and challenging problems. These problems range from ingesting the data and extracting meta-data to the efficient storage and retrieval of the data. Of particular interest are the retrieval methods and user interactions with an image database during browsing. In image databases, the response to a given query is not an exact well-defined set, rather, the user poses a query and expects a set of responses that should contain many possible candidates from which the user chooses the answer set. We first present the browsing model in Alexandria, a digital library for maps and satellite images. Designed for content-based retrieval, the relevant information in an image is encoded in the form of a multi-% dimensional feature vector. Various techniques have been previously proposed for the efficient retrieval of such vectors by reducing the dimensionality of such vectors. We show that for even moderately large databases (in fact, only 1856 texture images), these approaches do not scale well for exact retrieval. However, as a browsing tool, these dimensionality reduction techniques hold much promise.'),
	(104979, 'Analysis of Quorum-Based Protocols for Distributed (k+1)-Exclusion.', '1995', 'COCOON', 'A generalization of the majority quorum for the solution of the distributed (k+1)-exclusion problem is proposed. This scheme produces a family of quorums of varying sizes and availabilities indexed by integral divisors r of k. The cases r=1 and r=k correspond to known majority based quorum generation algorithms MAJ and DIV, whereas intermediate values of r interpolate between these two extremes. A cost and availability analysis of the proposed methods is also presented. An interesting result of this analysis is that in a reasonably reliable environment with a large number of sites, even protocols with low communication costs attain high availability.'),
	(109525, 'Experiences in the Design of a Kernel for Computational Modeling Systems.', '1994', 'COMAD', ''),
	(115690, 'Managing Concurrent Activities in Collaborative Environments.', '1995', 'CoopIS', 'An approach to support activities in collaborative databases is proposed. This approach merges flexible transaction models from collaborative environments and semantics based correctness criteria. A model is first presented which incorporates the notion of collaboration in the context of transactions. A protocol is then developed based on this model for effcient management of collaborative activities. This is the first attempt to formally incorporate the notion of collaboration in the database management system. Most earlier approaches provide tools and mechanisms to circumvent the isolation requirement of transactions. The protocol is a generalization of strict two-phase locking since in the absence of collab oration, it reduces to strict two-phase locking.'),
	(115704, 'Exotica/FMDC: Handling Disconnected Clients in a Workflow Management System.', '1995', 'CoopIS', ''),
	(139927, 'Hardware Acceleration of Database Operations Using Content-Addressable Memories.', '2005', 'DaMoN', ''),
	(139950, 'CAM conscious integrated answering of frequent elements and top-k queries over data streams.', '2008', 'DaMoN', 'Frequent elements and top-k queries constitute an important class of queries for data stream analysis applications. Certain applications require answers for both frequent elements and top-k queries on the same stream. In addition, the ever increasing data rates call for providing fast answers to the queries, and researchers have been looking towards exploiting specialized hardware for this purpose. Content Addressable Memory(CAM) provides an efficient way of looking up elements and hence are well suited for the class of algorithms that involve lookups. In this paper, we present a fast and efficient CAM conscious integrated solution for answering both frequent elements and top-k queries on the same stream. We call our scheme CAM conscious Space Saving with Stream Summary (CSSwSS), and it can efficiently answer continuous queries. We provide an implementation of the proposed scheme using commodity CAM chips, and the experimental evaluation demonstrates that not only does the proposed scheme outperforms existing CAM conscious techniques by an order of magnitude at query loads of about 10%, but the proposed scheme can also efficiently answer continuous queries.'),
	(140402, 'Exploiting Temporal Correlation in Temporal Data Warehouses.', '2005', 'DASFAA', ''),
	(140422, 'PADS: Protein Structure Alignment Using Directional Shape Signatures.', '2005', 'DASFAA', ''),
	(140513, 'Classifying Network Architectures for Locating Information Sources.', '1997', 'DASFAA', 'This paper presents three broad classes of network architecture that support discovery of information sources. Relevant concepts such as query routing and the extraction, propagation, and retrieval of metadata are defined. Based on these concepts, different models of locating and querying relevant information sources are presented. Finally, we estimate several important characteristics of these models and classes as well as their expected scalability.'),
	(140737, 'Freshness-driven Adaptive Caching for Dynamic Content.', '2003', 'DASFAA', 'With the wide availability of content delivery networks,many e-commerce Web applications utilize edge cacheservers to cache and deliver dynamic contents at locationsmuch closer to users, avoiding network latency. Bycaching a large number of dynamic content pages in theedge cache servers, response time can be reduced, benefitingfrom higher cache hit rates. However, this is achievedat the expense of higher invalidation cost. On the otherhand, a higher invalidation cost leads to a longer invalidationcycle (time to perform the invalidation check on thepages in caches) at the expense of freshness of cached dynamiccontent. In this paper, we propose a freshness-drivenadaptive dynamic content caching technique, which monitorsresponse time and invalidation cycle length and dynamicallyadjusts caching policies. We have implementedthe proposed technique within NEC\'s CachePortal Web accelerationsolution. The experimental results show that theproposed technique consistently maintains the best contentfreshness to users. The experimental results also show thateven a Web site with dynamic content caching enabled canfurther benefit from deployment of our solution with improvementof its content freshness up to 10 times especiallyduring heavy traffic.'),
	(144383, 'On the Importance of Tuning in Incremental View Maintenance: An Experience Case Study.', '2000', 'DaWaK', 'We originally set out to explore the performance of a particular algorithm for incremental maintenance of a materialized view in a data warehouse. We chose to use a substantial database schema and population, derived from the TPC-D family of benchmarks, with a population size of around one gigabyte. In the process, we discovered that at this size, unexpected issues with the query and update processing had to be understood and dealt with before the results would be meaningful. We discover that incremental maintenance is feasible over a wide range of update sizes (granularities), and that in all cases a cursor-based version of the algorithm performs the best. This is a report of both the results of the original inquiry and of some of the events encountered.'),
	(144385, 'Posse: A Framework for Optimizing Incremental View Maintenance at Data Warehouse.', '1999', 'DaWaK', ''),
	(144425, 'Space-Efficient Data Cubes for Dynamic Environments.', '2000', 'DaWaK', 'Data cubes provide aggregate information to support the analysis of the contents of data warehouses and databases. An important tool to analyze data in data cubes is the range query. For range queries that summarize large regions of massive data cubes, computing the query result on the fly can result in non-interactive response times (e.g. in the order of minutes). To speed up range queries, values that summarize regions of the data cube are pre-computed and stored. This faster response time results in more expensive updates and/or space overhead. While the emphasis is typically on low query and update costs, growing data collections increase the demand for space-efficient approaches. In this paper two techniques are presented that have the same update and query costs as earlier approaches, without introducing any space overhead.'),
	(144448, 'Progressive Ranking of Range Aggregates.', '2005', 'DaWaK', 'Ranking-aware queries have been gaining much attention recently in many applications such as multimedia databases, search engines and data streams. They are, however, not only restricted to such applications but are also very useful in On-Line Analytical Processing (OLAP) applications. In this paper, we introduce aggregation ranking queries in OLAP data cubes motivated by an online advertisement tracking data warehouse application. These queries aggregate information over a specified range and then return the ranked order of the aggregated values. For instance, an advertiser might be interested in the top-k publishers over the last three months in terms of sales obtained through the online advertisements placed on the publishers. They differ from range aggregate queries in that range aggregate queries are mainly concerned with an aggregate operator such as SUM and MIN/MAX over the selected ranges of all dimensions in the data cubes. Existing techniques for range aggregate queries are not able to process aggregation ranking queries efficiently. Hence, in this paper we propose new algorithms to handle this problem. The essence of the proposed algorithms is based on both ranking and cumulative information to progressively rank aggregation results. Furthermore we empirically evaluate our techniques and the experimental results show that the query cost is improved significantly.'),
	(144454, 'View Derivation Graph with Edge Fitting for Adaptive Data Warehousing.', '2000', 'DaWaK', ''),
	(144942, 'Content-Based Similarity Search over Peer-to-Peer Systems.', '2004', 'DBISP2P', ''),
	(144961, 'Guaranteeing Correctness of Lock-Free Range Queries over P2P Data.', '2005', 'DBISP2P', 'As P2P systems evolve into a platform for full-fledged distributed database management systems, the need arises for sophisticated query support and guarantees on query correctness.While there has been recent work addressing range queries in P2P systems, the work on query correctness is just beginning. Linga et al.[1] provided the first formal definition of correctness for range queries in P2P systems and described a lock-based range query technique that is provably correct. A natural question that arises is whether it is possible to develop a lock-free protocol that can meet the same guarantee of correctness. In this paper, we demonstrate the feasibility of lock-free correct protocols by first developing a simple, proof-of-concept query protocol and verifying that this protocol meets the correctness conditions. We then describe a more robust extended protocol and prove that for stable systems with only item insertions, item deletions, and item redistributions, this extension insures that every range query can be satisfied correctly.'),
	(149206, 'Fast Computation of Database Operations Using Content-Addressable Memories.', '2006', 'DEXA', ''),
	(150612, 'Efficient Processing of Distributed Top- Queries.', '2005', 'DEXA', ''),
	(151519, 'Planned Disconnections for Mobile Databases.', '2000', 'DEXA Workshop', 'As mobility permeates todays computing environment, we envision application infrastructures that will increasingly use mobile technologies. Traditional database applications will need to integrate mobile entities: people and computers. In this paper, we develop a distributed database framework for mobile environments. A key requirement in such an environment is to support frequent connection and disconnection of database sites.'),
	(152064, 'Scheduling Tertiary I/O in Database Applications.', '1997', 'DEXA Workshop', 'We study the problem of scheduling I/O requests for tertiary storage libraries to improve performance. The focus is on scheduling policies that process all requests on a loaded medium before unloading it. For single drive settings an efficient algorithm that produces optimal schedules is developed. For multiple drives the problem is shown to be NP-Complete. Efficient and effective heuristics are presented for the multiple drives case. The scheduling policies developed achieve significant performance gains over more naive first come first server policies. The study is general enough to be applicable to any storage library handling removable media, such as tapes or optical disks.'),
	(157344, 'Scalable Sollection Summarization and Selection.', '1999', 'ACM DL', ''),
	(159034, 'Reverse Nearest Neighbor Queries for Dynamic Databases.', '2000', 'ACM SIGMOD Workshop on Research Issues in Data Mining and Knowledge Discovery', ''),
	(159364, 'View Maintenance and Analytical Processing at Data Warehouses.', '2000', 'DNIS', ''),
	(159366, 'Attribute-Based Access to Distributed Data over P2P Networks.', '2005', 'DNIS', 'Peer-to-Peer (P2P) networks are distributed data sharing systems with no dedicated and centralised infrastructure. While P2P systems have been used so far mainly for file sharing, their true potential lies as a vast, loosely connected worldwide infrastructure for sharing resources, data and information. This paper addresses a natural step in the evolution of P2P: data and information sharing where data is accessed based on its attributes or properties. We have identified diverse applications that can benefit directly from attribute-based access to distributed data over P2P systems. Based on the application requirements, we propose three new models for both data distribution and data accesses.'),
	(159536, 'StratOSphere: Unification of Code, Data, Location, Scope, and Mobility.', '1999', 'DOA', 'The StratOSphere system provides a framework for distributed objects written in Java, unifying mobile code and distributed programming systems by providing the basic entities: relocatable instances and methods, persistent repositories, and mobile execution state. Each StratOSphere host provides a repository to store object instances and methods in a persistent manner. The repository is partitioned among different hosts, to distribute the storage of objects, and to provide different implementations of an object specification among particular hosts. Client applications visit relevant repositories to acquire specialized behavior from methods stored within the repository. At run-time these entities can be accessed and dispatched, providing a means of invoking an operation in a dynamic fashion, while still ensuring type safety and correctness. In addition to unifying externally-defined methods with compiled objects, and providing location transparency through mobility, StratOSphere further unifies different versions of an object, permitting successive implementations to coexist within the system. We discuss the architecture and implementation of StratOSphere, describing how the goals of unifying different aspects of distributed computing have influenced its design.'),
	(175863, 'Engineering High Performance Database-Driven E-commerce Web Sites through Dynamic Content Caching.', '2001', 'EC-Web', ''),
	(176187, 'A Non-Restrictive Concurrency Control for Object Oriented Databases.', '1992', 'EDBT', ''),
	(176216, 'A Unified Approach to Concurrency Control and Transaction Recovery (Extended Abstract).', '1994', 'EDBT', ''),
	(176431, 'The Dynamic Data Cube.', '2000', 'EDBT', ''),
	(176605, 'Selectivity Estimation for Spatial Joins with Geometric Selections.', '2002', 'EDBT', ''),
	(176654, 'Parallelizing Skyline Queries for Scalable Distribution.', '2006', 'EDBT', ''),
	(176663, 'Declustering Two-Dimensional Datasets over MEMS-Based Storage.', '2004', 'EDBT', ''),
	(176687, 'P2P systems with transactional semantics.', '2008', 'EDBT', 'Structured P2P systems have been developed for constructing applications at internet scale in cooperative environments and exhibit a number of desirable features such as scalability and self-maintenance. We argue that such systems when augmented with well defined consistency semantics provide an attractive building block for many large scale data processing applications in cluster environments. Towards this end, we study the problem of providing transactional semantics to P-Ring a P2P system which supports efficient range queries. We first extend a commonly used replication protocol in P2P systems to provide well defined guarantees in the presence of concurrent updates and under well defined failure assumptions. A multi-version concurrency control protocol called LSTP which leverages the guarantees of the replication protocol to provide transactional semantics is proposed. LSTP is designed to provide useful consistency semantics over P-Ring for read intensive workloads without sacrificing the scalability and other desirable properties inherent to the system. Under LSTP, read-only transactions are abort-free and non-blocking and the index stores no state for such transactions. We show that LSTP ensures no missed dependencies between transactions and guarantees basic consistency for read-only transactions when update transactions are serializable. The design of LSTP and its provable properties is a proof of concept that P2P systems can be augmented with transactional semantics. Results from a preliminary simulation study are also presented.'),
	(176720, 'Why go logarithmic if we can go linear?: Towards effective distinct counting of search traffic.', '2008', 'EDBT', 'Estimating the number of distinct elements in a large multiset has several applications, and hence has attracted active research in the past two decades. Several sampling and sketching algorithms have been proposed to accurately solve this problem. The goal of the literature has always been to estimate the number of distinct elements while using minimal resources. However, in some modern applications, the accuracy of the estimate is of primal importance, and businesses are willing to trade more resources for better accuracy. Throughout our experience with building a distinct count system at a major search engine, Ask.com, we reviewed the literature of approximating distinct counts, and compared most algorithms in the literature. We deduced that Linear Counting, one of the least used algorithms, has unique and impressive advantages when the accuracy of the distinct count is critical to the business. For other estimators to attain comparable accuracy, they need more space than Linear Counting. We have supported our analytical results through comprehensive experiments. The experimental results highly favor Linear Counting when the number of distinct elements is large and the error tolerance is low.'),
	(183990, 'Modeling and Maintaining Multi-View Data Warehouses.', '1999', 'ER', 'Data warehouses are designed mostly as centralized systems, and the majority of updating maintenance algorithms are tailored for this specific model. Maintenance methods have been proposed either under the assumption of a single view data warehouse, a multi-view centralized model, or a multi-view distributed system with strict synchronization restrictions. We argue that extending this model to a multi-view distributed one, is a practical generalization of the data warehouse system, but also the base of a growing number of applications based on the idea of cooperative views. In this context, existing maintenance protocols either solve the multi-view synchronization and consistency problem by grouping out of order updates in batches, or by creating multiple versions of the data. In this paper we develop a general framework for modeling the maintenance of multi-views in a distributed, decentralized data warehouse, together with an efficient incremental algorithm. To our knowledge, there is no other proposal for a method that incorporates individually and asynchronously updates to different views that are related through derivation dependencies.'),
	(184151, 'A Java-Based Framework for Processing Distributed Objects.', '1997', 'ER', ''),
	(195840, 'Exploiting Atomic Broadcast in Replicated Databases (Extended Abstract).', '1997', 'Euro-Par', ''),
	(196408, 'Optimal Partitioning for Efficient I/O in Spatial Databases.', '2001', 'Euro-Par', ''),
	(196639, 'Database Replication Using Epidemic Communication.', '2000', 'Euro-Par', ''),
	(212288, 'PowerBookmarks: An Advanced Web Bookmark Database System and its Information Sharing and Management.', '1998', 'FODO', 'Bookmarks in existing Internet browsers only provide limited functionalities: storing URLs, titles, and organizing folders for manual categorization of URLs. We extend the notion of bookmarks by introducing the concepts and functionalities of databases, such as query, re-organization, information sharing, view, and access control. We have developed an advanced Web bookmark system, PowerBookmarks, which allows users to select URLs of their interests to construct their bookmark databases for subsequent querying. PowerBookmarks supports organization of bookmark URLs as an hierarchical structure. Users can also set the access control for sharing their bookmark databases with other users.'),
	(212395, 'Weak Consistency in Distributed Data Warehouses.', '1998', 'FODO', ''),
	(220333, 'The Performance of Database Replication with Group Multicast.', '1999', 'FTCS', 'Database replication with update-anywhere capability while maintaining global synchronization and isolation has long been thought impractical. Protocols have been proposed for distributed replicated databases that take advantage of atomic broadcast systems to simplify message passing and conflict resolution with the hope of making replication efficient. This paper presents performance measurements on a simulation of a distributed replicated database using those protocols. The results show that with the proper group broadcast mechanism, replication with update-anywhere capability is indeed practical.'),
	(220352, 'The Performance of Two-phase Commit Protocols in the Presence of Site Failures.', '1994', 'FTCS', 'Although the two-phase commit (2PC) protocol has been studied extensively for a long time, the topic is of sufficient significance that several refinements of the protocol have continued to emerge. However, much of the existing literature on 2PC is restricted to discussing and analyzing the protocol (and its variants) in the absence of failure. Very little, especially in quantitative terms, has been written about its performance in the presence of site failures. In this study, we use a simulation testbed of a distributed database system to quantify the differences in the performances of four 2PC protocols. Our study covers both the no-failure case and the case of site failures. We present a number of interesting experiment results. One is that the performance of these protocols is highly dependent on the message-processing latency at the transaction coordinator site. Another is that the presumed abort protocol does not necessarily yield better performance in the presence of site failures.'),
	(232931, 'Scientific Modeling Using Distributed Resources.', '1996', 'ACM-GIS', ''),
	(243231, 'On the Power of Reconfiguration in Fault-Tolerant Distributed Databases.', '1994', 'HICSS (2)', ''),
	(264270, 'PULSTORE.: Automated Storage Management with QoS Guarantee in.', '2005', 'ICAC', ''),
	(296941, 'Partial Database Replication using Epidemic Communication.', '2002', 'ICDCS', 'Data replication in distributed databases has been investigated extensively with the hope that it will improve performance, reliability, and availability. However, the growth of the Internet has shown us that current replica management do not work well when the replicas are connected by an unreliable network, subject to congestion and dynamic topology changes. In this paper, we present a replica update protocol that handles an adaptive partial replication scheme on such a network.'),
	(297695, 'Using Broadcast Primitives in Replicated Databases.', '1998', 'ICDCS', ''),
	(298017, 'On Hit Inflation Techniques and Detection in Streams of Web Advertising Networks.', '2007', 'ICDCS', 'Click fraud is jeopardizing the industry of Internet advertising. Internet advertising is crucial for the thriving of the entire Internet, since it allows producers to advertise their products, and hence contributes to the well being of ecommerce. Moreover, advertising supports the intellectual value of the Internet by covering the running expenses of the content publishers\' sites. Some publishers are dishonest, and use automation to generate traffic to defraud the advertisers. Similarly, some advertisers automate clicks on the advertisements of their competitors to deplete their competitors\' advertising budgets. In this paper, we describe the advertising network model, and discuss the issue of fraud that is an integral problem in such setting. We propose using online algorithms on aggregate data to accurately and proactively detect automated traffic, preserve surfers\' privacy, while not altering the industry model. We provide a complete classification of the hit inflation techniques; and devise stream analysis techniques that detect a variety of fraud attacks. We abstract detecting the fraud attacks of some classes as theoretical stream analysis problems that we bring to the data management research community as open problems. A framework is outlined for deploying the proposed detection algorithms on a generic architecture. We conclude by some successful preliminary findings of our attempt to detect fraud on a real network.'),
	(298088, 'Fast Algorithms for Heavy Distinct Hitters using Associative Memories.', '2007', 'ICDCS', 'Real-time detection of worm attacks, port scans and Distributed Denial of Service (DDoS) attacks, as network packets belonging to these security attacks flow through a network router, is of paramount importance. In a typical worm attack, a worm infected host tries to spread the worm by scanning a number of other hosts thus resulting in significant number of network connections at an intermediate router. Detecting such attacks amounts to finding all hosts that are associated with unusually high number of other hosts, which is equivalent to solving the classic heavy distinct hitter problem over data streams. While several heavy distinct hitter solutions have been proposed and evaluated in a standard CPU setting, most of the above applications typically execute on special networking architectures called Network Processing Units (NPUs). These NPUs interface with special associative memories known as the Ternary Content Addressable Memories (TCAMs) to provide gigabit rate forwarding at network routers. In this paper, we describe how the integrated architecture of NPU and TCAMs can be exploited to develop high-speed solutions for heavy distinct hitters.'),
	(299295, 'Advanced Transaction Models in Workflow Contexts.', '1996', 'ICDE', 'In recent years, numerous transaction models have been proposed to address the problems posed by advanced database applications, but only a few of these models are being used in commercial products. In this paper, we make the case that such models may be too centered around databases to be useful in real environments. Advanced applications raise a variety of issues that are not addressed at all by transaction models. These same issues, however, are the basis for existing workflow systems, which are having considerable success as commercial products in spite of not having a solid theoretical foundation. We explore some of these issues and show that, in many aspects, workflow models are a superset of transaction models and have the added advantage of incorporating a variety of ideas that to this date have remained outside the scope of traditional transaction processing.'),
	(299343, 'Performance Characteristics of Protocols With Ordered Shared Locks.', '1991', 'ICDE', 'A family of locking-based protocols is analyzed that use a novel mode of locks called ordered sharing. Using a centralized database simulation model, it is demonstrated that these protocols exhibit comparable performance to that of traditional locking-based protocols when data contention is low and exhibit superior performance when data contention is high. It is shown that the performance of these protocols improves as physical resources become more plentiful. This is particularly significant since two-phase locking degrades due to data and not resource contention. Thus, introducing additional resources improves the performance of the proposed protocols while it does not benefit two-phase locking significantly'),
	(299728, 'NAPA: Nearest Available Parking Lot Application.', '2002', 'ICDE', ''),
	(299874, 'Privacy Preserving Query Processing Using Third Parties.', '2006', 'ICDE', 'Data integration from multiple autonomous data sources has emerged as an important practical problem. The key requirement for such data integration is that owners of such data need to cooperate in a competitive landscape in most of the cases. The research challenge in developing a query processing solution is that the answers to the queries need to be provided while preserving the privacy of the data sources. In general, allowing unrestricted read access to the whole data may give rise to potential vulnerabilities as well as may have legal implications. Therefore, there is a need for privacy preserving database operations for querying data residing at different parties. In this paper, we propose a new query processing technique using third parties in a peer-to-peer system. We propose and evaluate two different protocols for various database operations. Our scheme is able to answer queries without revealing any useful information to the data sources or to the third parties. Analytical comparison of the proposed approach with other recent proposals for privacy-preserving data integration establishes the superiority of the proposed approach in terms of query response time'),
	(299889, 'Range CUBE: Efficient Cube Computation by Exploiting Data Correlation.', '2004', 'ICDE', 'Data cube computation and representation are prohibitivelyexpensive in terms of time and space. Prior workhas focused on either reducing the computation time or condensingthe representation of a data cube. In this paper,we introduce Range Cubing as an efficient way to computeand compress the data cube without any loss of precision.A new data structure, range trie, is used to compress andidentify correlation in attribute values, and compress theinput dataset to effectively reduce the computational cost.The range cubing algorithm generates a compressed cube,called range cube, which partitions all cells into disjointranges. Each range represents a subset of cells with thesame aggregation value, as a tuple which has the same numberof dimensions as the input data tuples. The range cubepreserves the roll-up/drill-down semantics of a data cube.Compared to H-Cubing, experiments on real dataset showa running time of less than one thirtieth, still generating arange cube of less than one ninth of the space of the fullcube, when both algorithms run in their preferred dimensionorders. On synthetic data, range cubing demonstratesmuch better scalability, as well as higher adaptiveness toboth data sparsity and skew.'),
	(299891, 'Concentric Hyperspaces and Disk Allocation for Fast Parallel Range Searching.', '1999', 'ICDE', ''),
	(299892, 'Approximate Nearest Neighbor Searching in Multimedia Databases.', '2001', 'ICDE', ''),
	(299963, 'Relative Prefix Sums: An Efficient Approach for Querying Dynamic OLAP Data Cubes.', '1999', 'ICDE', 'Range sum queries on data cubes are a powerful tool for analysis. A range sum query applies an aggregation operation (e.g., SUM) over all selected cells in a data cube, where the selection is specified by providing ranges of values for numeric dimensions. Many application domains require that information provided by analysis tools be current or near-current. Existing techniques for range sum queries on data cubes, however, can incur update costs on the order of the size of the data cube. Since the size of a data cube is exponential in the number of its dimensions, rebuilding the entire data cube can be very costly. We present an approach that achieves constant time range sum queries while constraining update costs. Our method reduces the overall complexity of the range sum problem.'),
	(300705, 'Multiple Query Optimization by Cache-Aware Middleware Using Query Teamwork.', '2002', 'ICDE', ''),
	(300888, 'Cyclic Allocation of Two-Dimensional Data.', '1998', 'ICDE', 'Various proposals have been made for declustering two-dimensionally tiled data on multiple I/O devices. Recently, it was shown that strictly optimal solutions only exist under very restrictive conditions on the tiling of the two-dimensional space or for very few I/O devices. In this paper we explore allocation methods where no strictly optimal solution exists. We propose a general class of allocation methods, referred to as cyclic declustering methods, and show that many existing methods are instances of this class. As a result, various seemingly ad hoc and unrelated methods are presented in a single framework. Furthermore, the framework is used to develop new allocation methods that give better performance than any previous method and that approach the best feasible performance.'),
	(300904, 'PULSATINGSTORE: An Analytic Framework for Automated Storage Management.', '2005', 'ICDE Workshops', 'Self-management of large information technology components, such as DBMSs, has emerged as one important problem in the area of autonomic computing. In particular, automated storage management is critical for most data-intensive applications. The reason is that the storage maintenance cost manifests one of the biggest factors in the overall operational cost. At the same time, due to the interactive nature of most applications, users typically pose the QoS constraints on IO access performance. Hence it is crucial to ensure that the applications are not underprovisioned (giving rise to the risk of QoS violation) or over-provisioned (resulting in high operational costs). Such issue gets further complicated when the application workload keeps changing. In this paper, we present a novel analytic framework, PULSATINGSTORE, for autonomically managing the storage to balance the cost and performance in an online manner. In particular, given the workload characteristics of an application and storage QoS requirement, our PULSATINGSTORE framework is capable of scheduling the up-migration (in the case of under-provisioning) or down-migration (in the case of over-provisioning) with the optimal or near-optimal cost while still maintaining the QoS constraint.'),
	(300905, 'SVL: Storage Virtualization Engine Leveraging DBMS Technology.', '2005', 'ICDE', 'The demands on storage systems are increasingly requiring expressiveness, fault-tolerance, security, distribution, etc. Such functionalities have been traditionally provided by DBMS. We propose a storage management system, SVL, that leverages DBMS technology. The primary problem in block storage management is block virtualization which is essentially an abstraction layer that separates the user view of storage from the implementation of storage. Storage virtualization standardizes storage management in a heterogeneous storage and/or host environment, and plays a crucial role in enhancing storage functionality and utilization. Currently specialized hardware or microcode based solutions are popular for implementing block storage management systems, commonly referred to as disk controllers. We demonstrate how to take a general purpose commercial RDBMS, rather than a specialized solution, to support block storage management. We exploit the simple semantics of storage management systems to streamline database performance and thus attain acceptability from a storage point of view. This work promises to pave the way for diverse and innovative industrial applications of database management systems.'),
	(300906, 'Automated Storage Management with QoS Guarantees.', '2006', 'ICDE', 'Automated storage management is critical for most dataintensive applications running on DBMSs. In large-scale storage subsystems, the workload is expected to vary with time. In order to ensure both QoS and efficient usage of storage resources, variation in the actual physical disks is allowed to support a single virtual disk. Such data migration generates extra IOs and consumes storage resources. Not only does data migration need to be scheduled ahead but it must also be scheduled in such a way that QoS violations do not occur because of the extra migration IOs. In this paper, we present a novel analytic framework, PULSTORE, for autonomically managing the storage to provide performance guarantee during migration.'),
	(300992, 'A Peer-to-peer Framework for Caching Range Queries.', '2004', 'ICDE', 'Peer-to-peer systems are mainly used for object sharingalthough they can provide the infrastructure for manyother applications. In this paper, we extend the idea of objectsharing to data sharing on a peer-to-peer system. Wepropose a method, which is based on the multidimensionalCAN system, for efficiently evaluating range queries. Theanswers of the range queries are cached at the peers andare used to answer future range queries. The scalabilityand efficiency of our design is shown through simulation.'),
	(301189, 'Exploring Spatial Datasets with Histograms.', '2002', 'ICDE', ''),
	(301357, 'Query Estimation by Adaptive Sampling.', '2002', 'ICDE', ''),
	(301652, 'TCAM-conscious Algorithms for Data Streams.', '2007', 'ICDE', ''),
	(301678, 'DeltaSky: Optimal Maintenance of Skyline Deletions without Exclusive Dominance Region Generation.', '2007', 'ICDE', ''),
	(301952, 'MOOLAP: Towards Multi-Objective OLAP.', '2008', 'ICDE', 'Aggregation is among the core functionalities of OLAP systems. Frequently, such queries are issued in decision support systems to identify interesting groups of data. When more than one aggregation function is involved and the notion of interest is not clearly defined, skyline queries provide a robust mechanism to capture the potentially interesting points where (i) users do not need to specify a ranking function and (ii) the result is independent of the dimension scales. To provide better exploration functionalities in OLAP systems, we propose to use skyline queries over aggregated data to identify the most interesting groups. Since aggregation functions have to be ad-hoc to cover a wide variety of user interests, the skyline over the aggregates has to be computed on the fly. Hence any algorithm to compute such a skyline must be fast and be able to progressively produce the result set with potential skyline groups being produced as early as possible. We explore a family of algorithms which try to consume only as many data records as are necessary to compute the skyline and design an optimal algorithm. We further refine the algorithm by taking into account systems issues such as disk behavior which are often ignored but have strong impact on real system performance. Experimental results validate the performance and progressive benefits of our algorithm.'),
	(302255, 'Database Management as a Service: Challenges and Opportunities.', '2009', 'ICDE', 'Data outsourcing or database as a service is a new paradigm for data management in which a third party service provider hosts a database as a service. The service provides data management for its customers and thus obviates the need for the service user to purchase expensive hardware and software, deal with software upgrades and hire professionals for administrative and maintenance tasks. Since using an external database service promises reliable data storage at a low cost it is very attractive for companies. Such a service would also provide universal access, through the Internet to private data storedat reliable and secure sites. A client would store their data, and not need to carry their data with them as they travel. They would also not need to log remotely to their home machines, which may suffer from crashes and be unavailable. However, recent governmental legislations, competition among companies, and database thefts mandate companies to use secure and privacy preserving data management techniques. The data provider, therefore, needs to guarantee that the data is secure, be able to execute queries on the data, and the results of the queries must also be secure and not visible to the data provider. Current research has been focused only on how to index and query encrypted data. However, querying encrypted data is computationally very expensive. emph{Providing an efficient trust mechanism} to push both database service providers and clients to behave honestly has emerged as one of the most important problem before data outsourcing to become a viable paradigm. In this paper, we describe scalable privacy preserving algorithms for data outsourcing. Instead of encryption, which is computationally expensive, we use distribution on multiple data provider sites and information theoretically proven secret sharing algorithms as the basis for privacy preserving outsourcing. The technical contributions of this paper is the establishment and development of a framework for efficient fault-tolerant scalable and theoretically secure privacy preserving data outsourcing that supports a diversity of database operations executed on different types of data, which can even leverage publicly available data sets.'),
	(302434, 'CoTS: A Scalable Framework for Parallelizing Frequency Counting over Data Streams.', '2009', 'ICDE', 'Frequency counting, frequent elements and top-k queries form a class of operators that are used for a wide range of stream analysis applications. In spite of the abundance of these algorithms, all known techniques for answering data stream queries are sequential in nature. The imminent ubiquity of Chip Multi-Processor (CMP) architectures requires algorithms that can exploit the parallelism of such architectures. In this paper, we first evaluate different naive techniques for intra-operator parallelism, and summarize the insights obtained from the naive techniques. Our experimental analysis of the naive designs shows that intra-operator parallelism is not straightforward and requires a complete redesign of the system. We then propose an efficient and scalable framework for parallelizing frequency counting, frequent elements and top-k queries over data streams. The proposed CoTS (Co-operative Thread Scheduling) framework is based on the principle of threads co-operating rather than contending. Our experiments on a state-of-the-art quad-core chip multiprocessor architecture and synthetic data sets demonstrate the scalability of the proposed framework, and the efficiency is demonstrated by peak processing throughput of more than 60 million elements per second.'),
	(304093, 'Flexible Data Cubes for Online Aggregation.', '2001', 'ICDT', ''),
	(304154, 'Efficient Computation of Frequent and Top-k Elements in Data Streams.', '2005', 'ICDT', ''),
	(330975, 'Browsing and Placement of Multi-Resolution Images on Secondary Storage.', '1997', 'ICMCS', ''),
	(365256, 'SPiDeR: P2P-Based Web Service Discovery.', '2005', 'ICSOC', ''),
	(370546, 'A Peer-to-Peer Framework for Web Service Discovery with Ranking.', '2004', 'ICWS', 'Current Web service discovery methods are based oncentralized approaches where Web services are identifiedbased on service functionality. Examples of service functionalityinclude car rental, hotel booking and book selling.Since higher level Web services are increasingly composedin terms of lower level Web services, it is importantthat service discovery not only be based on service functionalitybut also be based on process behavior, i.e., how aservice functionality is served. Furthermore, centralized approachesto service discovery suffer from problems such ashigh operational and maintenance cost, single point of failure,and scalability. Another issue that has not been consideredin current Web service discovery paradigms is the issueof trust and quality of service of the service provider.We, therefore, propose a structured peer-to-peer frameworkfor Web service discovery in which Web services are locatedbased on both service functionality and process behavior. Inaddition, we integrate a scalable reputation model in thisdistributed peer-to-peer framework to rank Web servicesbased on both trust and service quality.'),
	(372795, 'Indexing Non-Uniform Spatial Data.', '1997', 'IDEAS', ''),
	(406553, 'Browsing and Placement of Multiresolution Images on Parallel Disks.', '1997', 'IOPADS', ''),
	(491645, 'Storage and Retrieval of Moving Objects.', '2001', 'Mobile Data Management', ''),
	(491647, 'Query Processing for Moving Objects with Space-Time Grid Storage Model.', '2002', 'Mobile Data Management', 'With the growing popularity of mobile computing devices and wireless communications, managing dynamically changing information about moving objects is becoming feasible. In this paper, we implement a system that manages such information and propose two new algorithms. One is an efficient range query algorithm propose an efficient range query algorithm with a filtering step which efficiently determines if a polyline corresponding to the trajectory of a moving object intersects with a given range. We study the performance of the system, which shows that despite the filtering step, for moderately large ranges, the range query algorithm we propose outperforms the algorithm without filtering.'),
	(491649, 'FATES: Finding A Time dEpendent Shortest path.', '2003', 'Mobile Data Management', ''),
	(499787, 'Meghdoot: Content-Based Publish/Subscribe over P2P Networks.', '2004', 'Middleware', 'Publish/Subscribe systems have become a prevalent model for delivering data from producers (publishers) to consumers (subscribers) distributed across wide-area networks while decoupling the publishers and the subscribers from each other. In this paper we present Meghdoot, which adapts content-based publish/subscribe systems to Distributed Hash Table based P2P networks in order to provide scalable content delivery mechanisms while maintaining the decoupling between the publishers and the subscribers. Meghdoot is designed to adapt to highly skewed data sets, which is typical of real applications. The experimental results demonstrate that Meghdoot balances the load among the peers and the design scales well with increasing number of peers, subscriptions and events.'),
	(499859, 'ABACUS: A Distributed Middleware for Privacy Preserving Data Sharing Across Private Data Warehouses.', '2005', 'Middleware', 'Recent trends in the global economy force competitive enterprises to collaborate with each other to analyze markets in a better way and make decisions based on that. Therefore, they might want to share their data with each other to run data mining algorithms over the union of their data to get more accurate and representative results. During this process they do not want to reveal their data to each other due to the legal issues and competition. However, current systems do not consider privacy preservation in data sharing across private data sources. To satisfy this requirement, we propose a distributed middleware, ABACUS, to perform intersection, join, and aggregation queries over multiple private data warehouses in a privacy preserving manner. Our analytical evaluations show that ABACUS is efficient and scalable.'),
	(499885, 'WreC: A Scalable Middleware Architecture to Enable XML Caching for Web-Services.', '2005', 'Middleware', 'Web service caching, i.e., caching the responses of XML web service requests, is needed for designing scalable web service architectures. Such caching of dynamic content requires maintaining the caches appropriately to reflect dynamic updates to the back-end data source. In the database, especially relational, context, extensive research has addressed the problem of incremental view maintenance. However, only a few attempts have been made to address the cache maintenance problem for XML web service messages. We propose a middleware solution that bridges the gap between the cached web service responses and the backend dynamic data source. We assume, for generality, that the back-end source has a general XML logical data model. Since the RDBMS technology is widely used for storing and querying XML data, we show how our solution can be implemented when the XML data source is implemented on top of an RDBMS. Such implementation exploits the well-known maturity of the RDBMS technology. The middleware solution described in this paper has the following features that distinguish it from the existing technology in this area: (1) It provides declarative description of Web Services based on rich and standards-based view specification language (XQuery/XPath); (2) No knowledge of the source XML schema is assumed, instead the source can be any general well-formed XML data; (3) The solution can be easily deployed on RDBMS, and (4) The size of the auxiliary data needed for the cache maintenance does not depend on the source data size, therefore, the solution is highly scalable. Experimental evaluation is conducted to assess the performance benefits of the proposed approach.'),
	(502779, 'PRISM: indexing multi-dimensional data in P2P networks using reference vectors.', '2005', 'ACM Multimedia', 'Peer-to-peer (P2P) systems research has gained considerable attention recently with the increasing popularity of file sharing applications. Since these applications are used for sharing huge amounts of data, it is very important to efficiently locate the data of interest in such systems. However, these systems usually do not provide efficient search techniques. Existing systems offer only keyword search functionality through a centralized index or by query flooding. In this paper, we propose a scheme based on reference vectors for sharing multi-dimensional data in P2P systems. This scheme effectively supports a larger set of query operations (such as k-NN queries and content-based similarity search) than current systems, which generally support only exact key lookups and keyword searches.The basic idea is to store multiple replicas of an object\'s index at different peers based on the distances between the object\'s feature vector and the reference vectors. Later, when a query is posed, the system identifies the peers that are likely to store the index information about relevant objects using reference vectors. Thus the system is able to return accurate results by contacting a small fraction of the participating peers.'),
	(505818, 'StratOSphere: Mobile Processing of Distributed Objects in Java.', '1998', 'MOBICOM', ''),
	(506231, 'Using space-time grid for efficient management of moving objects.', '2001', 'MobiDE', 'Efficient storage and retrieval of moving objects in DBMS have received significant interest recently. There are applications that would benefit from the management of dynamically changing information about moving objects. In this paper, we develop a system that manages such information interacting with moving objects. We model the space-time domain space as a grid (Space-Time Grid) and model the trajectory of a moving object as a polyline in the Space-Time Grid. The polyline is the result of the interactions among other moving objects. In this paper, the insertion algorithm and several other query processing algorithms are presented.'),
	(506284, 'Data Warehousing Alternatives for Mobile Environments.', '1999', 'MobiDE', ''),
	(509106, 'STORAGEDB: Enhancing the Storage Sub-System with DBMS Functionalities.', '2005', 'MSST', 'This paper proposes STORAGEDB: a paradigm for implementing storage virtualation using databases. It describes details for storing the logical-to-physical mapping information as tables within the database; handling the incoming I/O requests of the application as database queries; bookkeeping of the I/O operations as database transactions. In addition, STORAGEDB uses built-in DBMS features to support storage virtualization functionalities; as an example we describe how online table space migration can be used to support reallocation of logical disks. Finally, we describe our modifications to a traditional RDBMS implementation, in order to make it light-weight. Improving the performance of a traditional DBMS is critical for the acceptance of STORAGEDB since the performace overheads are considered a primary challenge in replacing existing storage virtualization engines. Our current lightweight RDBMS has a 19 times shorter invocation path length than the original. In comparision to the open-source virtualization software, namely LVM, the extra cost of STORAGEDB is within 20% of LVM in trace-driven tests. (unlike STORAGEDB, LVMdid not have logging overhead). We consider these initial results as the stepping stone in the paradigm of applying databases for storage virtualization.'),
	(509133, 'Distributed Access System for Uniform and Scalbale Data and Service Access.', '1995', 'IEEE Symposium on Mass Storage Systems', 'Computational modeling systems (CMS) are designed to resolve many of the shortcomings associated with systems currently employed in providing support for a wide range of scientific modeling applications. We identify the requirements of a reasonable CMS and identify the requirements of Amazonia, a CMS intended to support modeling in large-scale earth science research. Amazonia has been implemented as an open and layered architecture. In this paper we discuss the design and implementation of the distributed access system, a key component of the Amazonia Kernel that supports the organization of and access to data and services in a distributed environment.'),
	(509167, 'Towards Optimal I/O Scheduling for MEMS-Based Storag.', '2003', 'IEEE Symposium on Mass Storage Systems', 'MEMS-based storage devices are currently being developed to narrow the gap between processor and disk speeds. MEMS-based storage devices have a different architecture from disk devices, thus algorithms, such as I/O scheduling and data placement, designed for disks need to be revisited. In this paper, we focus on developing an I/O scheduling algorithm for MEMS-based storage devices. Our theoretical analysis shows that this algorithm is guaranteed to perform within twice the optimal time for any workload.'),
	(522666, 'Semantic Locking in Object-Oriented Database Systems.', '1994', 'OOPSLA', 'Object-oriented databases are being increasingly used to model non-standard applications that emphasize modularity, composition, and rapid prototyping. Semantic locking protocols are presented for transaction management for such object-oriented databases. In particular, the protocol incorporates the semantics of complex objects, nested executions and dynamic conflicts resulting from referentially shared objects.'),
	(525257, 'Techniques for Efficient Routing and Load Balancing in Content-Addressable Networks.', '2005', 'Peer-to-Peer Computing', 'As a Distributed Hash Table (DHT), a Content Addressable Network (CAN) provides efficient routing and object location in a decentralized manner while offering fault tolerance and dynamic peer operations. However, as opposed to other DHTs that use a flat ID space, CAN uses a multi-dimensional logical space. DHTs usually require 0(logN) routing information per peer and provide routing in O(logN) hops, where N is the number of peers in the system. In CAN, on the other hand, each peer keeps only constant amount of routing information and the routing takes 0(dN^{{1 mathord{left/ {vphantom {1 d}} right. kern-nulldelimiterspace} d}} ) hops, where d is the dimensionality of the logical space. Hence the routing performance of CAN is worse than other DHTs especially when d is small. In this paper, we describe and evaluate several schemes for efficient routing in CAN by keeping additional routing information at the peers. Futhermore, due to the underlying multidimensional ID space, CAN is used by applications that require content-based mapping of data objects onto the ID space. Since uniform hashing is not used, such mappings introduce skewed object distributions among the peers. Thus we also describe load balancing schemes for CAN and investigate their efficiency.'),
	(525329, 'On Overlay Schemes to Support Point-in-Range Queries for Scalable Grid Resource Discovery.', '2005', 'Peer-to-Peer Computing', 'A resource directory is a critical component of a Grid architecture. P2P computing paradigm could address some of the scalability issues that make distributed resource discovery services challenging. Unfortunately, most existing Distributed Hash Table (DHT) based P2P overlays have difficulty in treating attribute range queries that are common in resource discovery lookups. This paper proposes a general framework for range-based resource discovery. In particular, the proposed framework maps tree-structured logical data (i.e., range indexing) onto a DHT-based physical node space (i.e., resource brokers). In this paper, we consider three mapping schemes from the logical space onto the physical space. Each mapping scheme uses a different replication mechanism to reduce range search time and to achieve load balance. We analytically and experimentally compare the performance characteristics (query/update costs and workload distributions) of these schemes and discuss their applicability under different resource discovery service scenarios.'),
	(543615, 'Efficient Solution to the Distributed Mutual Exclusion Problem.', '1989', 'PODC', ''),
	(544326, 'Towards a formal model for view maintenance in data warehouses.', '2002', 'PODC', ''),
	(544473, 'Using Broadcast Primitives in Replicated Databases (Abstract).', '1997', 'PODC', ''),
	(544761, 'An Approach to Eliminate Transaction Blocking in Locking Protocols.', '1992', 'PODS', ''),
	(544783, 'Epidemic Algorithms in Replicated Databases (Extended Abstract).', '1997', 'PODS', ''),
	(544806, 'Relative Serializbility: An Approach for Relaxing the Atomicity of Transactions.', '1994', 'PODS', 'In the presence of semantic information, serializability is too strong a correctness criterion and unnecessarily restricts concurrency. We use the semantic information of a transaction to provide different atomicity views of the transaction to other transactions. The proposed approach improves concurrency and allows interleavings among transactions which are non-serializable, but which nonetheless preserve the consistency of the database and are acceptable to the users. We develop a graph-based tool whose acyclicity is both a necessary and suffcient condition for the correctness of an execution. Our theory encompasses earlier proposals that incorporate semantic information of transactions. Furthermore it is the first approach that provides an effcient graph based tool for recognizing correct schedules without imposing any restrictions on the application domain. Our approach is widely applicable to many advanced database applications such as systems with long-lived transactions and collaborative environments.'),
	(544843, 'Locks with Constrained Sharing.', '1990', 'PODS', ''),
	(544850, 'Reducing Recovery Constraints on Locking based Protocols.', '1994', 'PODS', 'Serializability is the standard correctness criterion for concurrency control. To ensure correctness in the presence of failures, recoverability is also imposed. Pragmatic considerations result in further constraints, for instance, the existing log-based recovery implementations that use before-images warrant that transaction executions be strict. Strict executions are restrictive, thus sacrificing concurrency and throughput. In this paper we identify the relation between the recovery mechanism and the restrictions imposed by concurrency control protocols. In particular, we propose a new inverse operation that can be integrated with the underlying recovery mechanism. In order to establish the viability of our approach, we demonstrate the new implementation by making minor modifications to the conventional recovery architecture. This inverse operation is also designed to avoid the undesirable phenomenon of cascading aborts when transactions execute conflicting write operations.'),
	(559780, 'Exploiting Planned Disconnections in Mobile Environments.', '2000', 'RIDE', 'We present the notion of a distributed database made up entirely of mobile components. Since disconnections will be frequent in such an environment, we develop a disconnection and reconnection procedure to allow normal processing on the connected components. We briefly discuss a protocol based on epidemic communication to support such a system while ensuring one-copy serializability.'),
	(568214, 'A brief survey of tertiary storage systems and research.', '1997', 'SAC', ''),
	(571112, 'Distributed Resource Discovery in Large Scale Computing Systems.', '2005', 'SAINT', 'There has been significant effort to build high throughput delivering computing systems out of distributed workstations. These systems are growing to accommodate larger number of workstations with growing demand. Discovery of available resources in such environments is a challenging problem. We present a completely distributed resource discovery solution which utilizes P2P design to provide a scalable service. Our design allows jobs to search for desired workstations, as well as, workstations to search for jobs that may run on them.'),
	(597986, 'Using Delayed Commitment in Locking Protocols for Real-Time Databases.', '1992', 'SIGMOD Conference', 'In this paper, we propose locking protocols that are useful for real-time databases. Our approach is motivated from two main observations. First, locking protocols are widely accepted and used in most database systems. Second, in real-time databases it has been shown that the blocking behavior of transactions in locking protocols results in performance degradation. We use a new relationship between locks called ordered sharing to eliminate blocking that arises in the traditional locking protocols. Ordered sharing eliminates blocking of read and write operations but may result in delayed commitment. Since in real-time databases, timeliness and not response time is the crucial factor, or protocols exploit this delay to allow transactions to execute within the slacks of delayed transactions. We compare the performance of the proposed protocols with the two phase locking protocol for real-time databases. Our experiments indicate that the propose protocols significantly reduce the percentage of missed deadlines in the system for a variety of workloads.'),
	(597990, 'Efficient View Maintenance at Data Warehouses.', '1997', 'SIGMOD Conference', 'We present incremental view maintenance algorithms for a data warehouse derived from multiple distributed autonomous data sources. We begin with a detailed framework for analyzing view maintenance algorithms for multiple data sources with concurrent updates. Earlier approaches for view maintenance in the presence of concurrent updates typically require two types of messages: one to compute the view change due to the initial update and the other to compensate the view change due to interfering concurrent updates. The algorithms developed in this paper instead perform the compensation locally by using the information that is already available at the data warehouse. The first algorithm, termed SWEEP, ensures complete consistency of the view at the data warehouse in the presence of concurrent updates. Previous algorithms for incremental view maintenance either required a quiescent state at the data warehouse or required an exponential number of messages in terms of the data sources. In contrast, this algorithm does not require that the data warehouse be in a quiescent state for incorporating the new views and also the message complexity is linear in the number of data sources. The second algorithm, termed Nested SWEEP, attempts to compute a composite view change for multiple updates that occur concurrently while maintaining strong consistency.'),
	(598248, 'Enabling Dynamic Content Caching for Database-Driven Web Sites.', '2001', 'SIGMOD Conference', 'Web performance is a key differentiation among content providers. Snafus and slowdowns at major web sites demonstrate the difficulty that companies face trying to scale to a large amount of web traffic. One solution to this problem is to store web content at server-side and edge-caches for fast delivery to the end users. However, for many e-commerce sites, web pages are created dynamically based on the current state of business processes, represented in application servers and databases. Since application servers, databases, web servers, and caches are independent components, there is no efficient mechanism to make changes in the database content reflected to the cached web pages. As a result, most application servers have to mark dynamically generated web pages as non-cacheable. In this paper, we describe the architectural framework of the CachePortal system for enabling dynamic content caching for database-driven e-commerce sites. We describe techniques for intelligently invalidating dynamically generated web pages in the caches, thereby enabling caching of web pages generated based on database contents. We use some of the most popular components in the industry to illustrate the deployment and applicability of the proposed architecture.'),
	(599191, 'PowerBookmarks: A System for Personalizable Web Information Organization, Sharing, and Management.', '1999', 'SIGMOD Conference', ''),
	(599586, 'Efficient integration and aggregation of historical information.', '2002', 'SIGMOD Conference', 'Data warehouses support the analysis of historical data. This often involves aggregation over a period of time. Furthermore, data is typically incorporated in the warehouse in the increasing order of a time attribute, e.g., date of sale or time of a temperature measurement. In this paper we propose a framework to take advantage of this append only nature of updates due to a time attribute. The framework allows us to integrate large amounts of new data into the warehouse and generate historical summaries efficiently. Query and update costs are virtually independent from the extent of the data set in the time dimension, making our framework an attractive aggregation approach for append-only data streams. A specific instantiation of the general approach is developed for MOLAP data cubes, involving a new data structure for append-only arrays with pre-aggregated values. Our framework is applicable to point data and data with extent, e.g., hyper-rectangles.'),
	(599788, 'Incremental Maintenance of Path Expression Views.', '2005', 'SIGMOD Conference', 'Caching data by maintaining materialized views typically requires updating the cache appropriately to reflect dynamic source updates. Extensive research has addressed the problem of incremental view maintenance for relational data but only few works have addressed it for semi-structured data. In this paper we address the problem of incremental maintenance of views defined over XML documents using path-expressions. The approach described in this paper has the following main features that distinguish it from the previous works: (1) The view specification language is powerful and standardized enough to be used in realistic applications. (2) The size of the auxiliary data maintained with the views depends on the expression size and the answer size regardless of the source data size.(3) No source schema is assumed to exist; the source data can be any general well-formed XML document. Experimental evaluation is conducted to assess the performance benefits of the proposed approach.'),
	(599846, 'Hardware Acceleration for Spatial Selections and Joins.', '2003', 'SIGMOD Conference', 'Spatial database operations are typically performed in two steps. In the filtering step, indexes and the minimum bounding rectangles (MBRs) of the objects are used to quickly determine a set of candidate objects, and in the refinement step, the actual geometries of the objects are retrieved and compared to the query geometry or each other. Because of the complexity of the computational geometry algorithms involved, the CPU cost of the refinement step is usually the dominant cost of the operation for complex geometries such as polygons. In this paper, we propose a novel approach to address this problem using efficient rendering and searching capabilities of modern graphics hardware. This approach does not require expensive pre-processing of the data or changes to existing storage and index structures, and it applies to both intersection and distance predicates. Our experiments with real world datasets show that by combining hardware and software methods, the overall computational cost can be reduced substantially for both spatial selections and joins.'),
	(599963, 'Using the Golden Rule of Sampling for Query Estimation.', '2001', 'SIGMOD Conference', ''),
	(600041, 'Mashup Feeds: : continuous queries over web services.', '2007', 'SIGMOD Conference', 'Mashup Feeds is a system that supports integrated web service feeds as continuous queries. We introduce collection-based stream processing semantics to enable information extraction by monitoring source evolution over time.'),
	(600181, 'Fast data stream algorithms using associative memories.', '2007', 'SIGMOD Conference', 'The primary goal of data stream research is to develop space and time efficient solutions for answering continuous on-line summarization queries. Research efforts over the last decade have resulted in a number of efficient algorithms with varying degrees of space and time complexities. While these techniques are developed in a standard CPU setting, many of their applications such as click-fraud detection and network-traffic summarization typically execute on special networking architectures called Network Processing Units (NPUs). These NPUs interface with special associative memories known as Ternary Content Addressable Memories (TCAMs) to provide gigabit rate forwarding at network routers. In this paper, we describe how the integrated architecture of NPU and TCAMs can be exploited towards achieving the goal of developing high-speed stream summarization solutions. We propose two TCAM-conscious solutions for the frequent elements problem in data streams and present a comprehensive evaluation of these techniques on a state-of-the-art networking platform.'),
	(600212, 'UQBE: uncertain query by example for web service mashup.', '2008', 'SIGMOD Conference', 'The UQBE is a mashup tool for non-programmers that supports query-by-example (QBE) over a schema made up by the user without knowing the schema of the original sources. Based on automated schema matching with uncertainty, the UQBE system returns the best confident results. The system lets the user refine them interactively. A tuple in the query result is associated with lineage that is a boolean formula over schema matching decisions representing underlying conditions on which the corresponding tuple is included in the result. Given binary feedbacks on tuples by the user, which are possibly imprecise, the system solves it as an optimization problem to refine confidence values of matching decisions. The demo features graphical user interaction on the UQBE system, including querying and refinement.'),
	(614465, 'Efficient Disk Allocation for Fast Similarity Searching.', '1998', 'SPAA', 'As databases increasingly integrate non-textual information it is becoming necessary to support efficient similarity searching in addition to range searching. Recently, declustering techniques have been proposed for improving the performance of similarity searches through parallel I/O. In this paper, we propose a new scheme which provides good declustering for similarity searching. In particular, it does global declustering as opposed to local declustering, exploits the availability of extra disks and does not limit the partitioning of the data space. Our technique is based upon the cyclic declustering schemes which were developed for range and partial match queries. We establish, in general, that cyclic declustering techniques outperform previously proposed techniques.'),
	(614994, 'Process Synchronization In Workflow Management Systems.', '1996', 'SPDP', 'Workflow Management Systems automate the execution of business processes allowing the concurrent execution of multiple process instances. Existing systems do not provide a mechanism to guarantee correct concurrent execution and, as a result, it is not possible to coordinate and synchronize different process instances. Part of the problem is that conventional techniques are not entirely suitable for workflow environments. In databases, locks are the basic mechanism. In operating systems, this is achieved using semaphores or monitors. Neither of these approaches is appropriate for workflow applications. In this paper a method is proposed to enforce correct interleavings and guarantee mutual exclusion, as defined by the user, between concurrent workflow processes. The proposed protocol takes advantage of the semantic constructs associated with workflow management to solve some complex problems like dealing with inherited restrictions and the coarse granularity of workflow specifications.'),
	(615754, 'BFT: Bit Filtration Technique for Approximate String Join in Biological Databases.', '2003', 'SPIRE', ''),
	(616798, 'Quorum Consensus Algorithms for Secure and Reliable Data.', '1988', 'SRDS', ''),
	(617027, 'Using Multicast Communication to Reduce Deadlock in Replicated Databases.', '2000', 'SRDS', 'Obtaining good performance from a distributed replicated database that allows update transactions to originate at any site while ensuring one-copy serializability is a challenge. A popular analysis of deadlock probabilities in replicated database shows that the deadlock rate for the system is high and increases as the third power of the number of replicas. We show how a replica management protocol that uses atomic broadcast for replica update reduces the occurrence of deadlocks and the dependency on the number of replicas. The analysis is confirmed by simulation experiments.'),
	(617028, 'Database Replication: If You Must be Lazy, be Consistent.', '1999', 'SRDS', 'Due to severe performance penalties associated with synchronous replication, there is a significant interest in asynchronous replica management protocols. Lazy protocols currently in use either do not guarantee consistency and serializability as needed by transactional semantics or they impose restrictions on placement of data and which data object can be updated. In this paper we consider an alternative update protocol based on epidemic communication that guarantees consistency and serializability in spite of a write-anywhere capability.'),
	(617182, 'From Static Distributed Systems to Dynamic Systems.', '2005', 'SRDS', 'A noteworthy advance in distributed computing is due to the recent development of peer-to-peer systems. These systems are essentially dynamic in the sense that no process can get a global knowledge on the system structure. They mainly allow processes to look up for data that can be dynamically added/suppressed in a permanently evolving set of nodes. Although protocols have been developed for such dynamic systems, to our knowledge, up to date no computation model for dynamic systems has been proposed. Nevertheless, there is a strong demand for the de?nition of such models as soon as one wants to develop provably correct protocols suited to dynamic systems. This paper proposes a model for (a class of) dynamic systems. That dynamic model is de?ned by (1) a parameter (an integer denoted a) and (2) two basic communication abstractions (query-response and persistent reliable broadcast). The new parameter a is a threshold value introduced to capture the liveness part of the system (it is the counterpart of the minimal number of processes that do not crash in a static system). To show the relevance of the model, the paper adapts an eventual leader protocol designed for the static model, and proves that the resulting protocol is correct within the proposed dynamic model. In that sense, the paper has also a methodological ?avor, as it shows that simple modi?cations to existing protocols can allow them to work in dynamic systems.'),
	(617526, 'Constrained Nearest Neighbor Queries.', '2001', 'SSTD', ''),
	(617628, 'Exploiting the Multi-Append-Only-Trend Property of Historical Data in Data Warehouses.', '2003', 'SSTD', ''),
	(617684, 'Accessing Scientifgic Data: Simpler is Better.', '2003', 'SSTD', ''),
	(617935, 'Using Linear Models to Monitor the Physical World with Sensors.', '2005', 'SSDBM', ''),
	(618219, 'Supporting Sliding Window Queries for Continuous Data Streams.', '2003', 'SSDBM', 'Although traditional databases and data warehouses have been exploited widely to manage persistent data, a large number of applications from sensor network need functional supports for transient data in the continuous data stream. One of the crucial functions is to summarize the data items within a sliding window. A sliding window contains a fixed width span of data elements. The data items are implicitly deleted from the sliding window, when it moves out of the window scope. Several one-dimensional histograms have been proposed to store the succinct time information in a sliding window. Such histograms, however, only handle the data items with attribute values in unary domains. In this paper, we explore the problem of extending the value to a multi-valued domain. A two-dimensional histogram, the hybrid histogram, is proposed to support sliding window queries on a practical multi-valued domain. The basic building block of the hybrid histogram is the exponential histogram. The hybrid histogram is maintained to capture the changes of data distribution. To further compress the exponential histograms, we propose a condensed exponential histogram without losing the error bound. Results of an extensive experimental study are included to evaluate the benefits of the proposed technique.'),
	(618238, 'pCube: Update-Efficient Online Aggregation with Progressive Feedback and Error Bounds.', '2000', 'SSDBM', 'Data Cubes are used in large data warehouses as a tool for online aggregation of information. Typically, online aggregation is supported by specifying a range query over a multidimensional data cube. As the number of dimensions increases, supporting efficient range queries as well as updates to the data cube becomes difficult. Another problem that arises with increased dimensionality is the sparseness of the data space. In this paper we develop a new data structure referred to as the pCube (data cube for progressive querying), to support efficient querying and updating of multidimensional data cubes in large data warehouses. pCube provides intermediate results with absolute error bounds (to allow trading accuracy for fast response time), efficient updates, scalability with increasing dimensionality, and pre-aggregation to support large range queries. We present both a general solution and an implementation of pCube and report the results of experimental evaluations.'),
	(641898, 'Reducing Storage for Quorum Consensus Algorithms.', '1988', 'VLDB', ''),
	(641900, 'The Tree Quorum Protocol: An Efficient Approach for Managing Replicated Data.', '1990', 'VLDB', ''),
	(641902, 'Resilient Logical Structures for Efficient Management of Replicated Data.', '1992', 'VLDB', ''),
	(641949, 'Hardware Acceleration in Commercial Databases: A Case Study of Spatial Operations.', '2004', 'VLDB', ''),
	(642089, 'View Invalidation for Dynamic Content Caching in Multitiered Architectures.', '2002', 'VLDB', 'In today\'s multitiered application architectures, clients do not access data stored in the databases directly. Instead, they use applications which in turn invoke the DBMS to generate the relevant content. Since executing application programs may require significant time and other resources, it is more advantageous to cache application results in a result cache. Various view materialization and update management techniques have been proposed to deal with updates to the underlying data. These techniques guarantee that the cached results are always consistent with the underlying data. Several applications, including e-commerce sites, on the other hand, do not require the caches be consistent all the time. Instead, they require that all outdated pages in the caches are invalidated in a timely fashion. In this paper, we show that invalidation is inherently different from view maintenance. We develop algorithms that benefit from this difference in reducing the cost of update management in certain applications and we present an invalidation framework that benefits from these algorithms.'),
	(642091, 'AFilter: Adaptable XML Filtering with Prefix-Caching and Suffix-Clustering.', '2006', 'VLDB', ''),
	(642213, 'TwigStack: Bottom-up Processing of Generalized-Tree-Pattern Queries over XML Documents.', '2006', 'VLDB', 'Tree pattern matching is one of the most fundamental tasks for XML query processing. Holistic twig query processing techniques [4, 16] have been developed to minimize the intermediate results, namely, those root-to-leaf path matches that are not in the final twig results. However, useless path matches cannot be completely avoided, especially when there is a parent-child relationship in the twig query. Furthermore, existing approaches do not consider the fact that in practice, in order to process XPath or XQuery statements, a more powerful form of twig queries, namely, Generalized-Tree-Pattern (GTP) [8] queries, is required. Most existing works on processing GTP queries generally calls for costly post-processing for eliminating redundant data and/or grouping of the matching results.In this paper, we first propose a novel hierarchical stack encoding scheme to compactly represent the twig results. We introduce Twig2Stack, a bottom-up algorithm for processing twig queries based on this encoding scheme. Then we show how to efficiently enumerate the query results from the encodings for a given GTP query. To our knowledge, this is the first GTP matching solution that avoids any post path-join, sort, duplicate elimination and grouping operations. Extensive performance studies on various data sets and queries show that the proposed Twig2Stack algorithm not only has better twig query processing performance than state-of-the-art algorithms, but is also capable of efficiently processing the more complex GTP queries.'),
	(643128, 'Cache Portal: Technology for Accelerating Database-driven e-commerce Web Sites.', '2001', 'VLDB', ''),
	(643129, 'Safety Guarantee of Continuous Join Queries over Punctuated Data Streams.', '2006', 'VLDB', 'Continuous join queries (CJQ) are needed for correlating data from multiple streams. One fundamental problem for processing such queries is that since the data streams are infinite, this would require the join operator to store infinite states and eventually run out of space. Punctuation semantics has been proposed to specifically address this problem. In particular, punctuations explicitly mark the end of a subset of data and, hence, enable purging of the stored data which will not contribute to any new query results. Given a set of available punctuation schemes, if one can identify that a CJQ still requires unbounded storage, then this query can be flagged as unsafe and can be prevented from running. Unfortunately, while punctuation semantics is clearly useful, the mechanisms to identify if and how a particular CJQ could benefit from a given set of punctuation schemes are not yet known. In this paper, we provide sufficient and necessary conditions for checking whether a CJQ can be safely executed under a given set of punctuation schemes or not. In particular, we introduce a novel punctuation graph to aid the analysis of the safety for a given query. We show that the safety checking problem can be done in polynomial time based on this punctuation graph construct. In addition, various issues and challenges related to the safety checking of CJQs are highlighted.'),
	(643132, 'Issues and Evaluations of Caching Solutions for Web Application Acceleration.', '2002', 'VLDB', 'Response time is a key differentiation among electronic commerce (e-commerce) applications. For many e-commerce applications, Web pages are created dynamically based on the current state of a business stored in database systems. Recently, the topic of Web acceleration for database-driven Web applications has drawn a lot of attention in both the research community and commercial arena. In this paper, we analyze the factors that have impacts on the performance and scalability of Web applications. We discuss system architecture issues and describe approaches to deploying caching solutions for accelerating Web applications. We give the performance matrix measurement for network latency and various system architectures. The paper is summarized with a road map for creating high performance Web applications.'),
	(643133, 'CachePortal II: Acceleration of Very Large Scale Data Center-Hosted Database-driven Web Applications.', '2003', 'VLDB', ''),
	(643291, 'Using Association Rules for Fraud Detection in Web Advertising Networks.', '2005', 'VLDB', 'Discovering associations between elements occurring in a stream is applicable in numerous applications, including predictive caching and fraud detection. These applications require a new model of association between pairs of elements in streams. We develop an algorithm, Streaming-Rules, to report association rules with tight guarantees on errors, using limited processing per element, and minimal space. The modular design of Streaming-Rules allows for integration with current stream management systems, since it employs existing techniques for finding frequent elements. The presentation emphasizes the applicability of the algorithm to fraud detection in advertising networks. Such fraud instances have not been successfully detected by current techniques. Our experiments on synthetic data demonstrate scalability and efficiency. On real data, potential fraud was discovered.'),
	(643654, 'Maintaining XPath Views In Loosely Coupled Systems.', '2006', 'VLDB', 'We address the problem of maintaining materialized XPath views in environments where the view maintenance system and the base data system are loosely-coupled. We show that the recently proposed XPath view maintenance techniques require tight coupling, and thus are not practical for loosely-coupled systems. Our solution adapts to loose-coupling by using information that is fully available through standard XPath interfaces. This information consists of the view definition, the update statement, and the current materialized view result. Under this model, incremental maintenance is not always possible; thus, maintaining the consistency of the views requires frequent view recomputations. Our goal is to reduce the frequency of view recomputation by detecting cases where a base update is irrelevant to a view, and cases where a view is self maintainable given a base update. We develop an approach that reduces the irrelevance and self maintainability tests, respectively, to checking the intersection and containment of XPath expressions. We present experimental results showing the effectiveness of the proposed approach in reducing view recomputations.'),
	(643811, 'Discovery of Influence Sets in Frequently Updated Databases.', '2001', 'VLDB', ''),
	(644071, 'Tabular Placement of Relational Data on MEMS-based Storage Devices.', '2003', 'VLDB', 'Due to the advances in semiconductor manufacturing, the gap between main memory and secondary storage is constantly increasing. This becomes a significant performance bottleneck for Database Management Systems, which rely on secondary storage heavily to store large datasets. Recent advances in nanotechnology have led to the invention of alternative means for persistent storage. In particular, MicroElectroMechanical Systems (MEMS) based storage technology has emerged as the leading candidate for next generation storage systems. In order to integrate MEMS-based storage into conventional computing platform, new techniques are needed for I/O scheduling and data placement. In the context of relational data, it has been observed that access to relations needs to be enabled in both row-wise as well as in columnwise fashions. In this paper, we exploit the physical characteristics of MEMS-based storage devices to develop a data placement scheme for relational data that enables retrieval in both row-wise and column-wise manner. We demonstrate that this data layout not only improves I/O utilization, but results in better cache performance.'),
	(653609, 'Localized-Access Protocols for Replicated Databases.', '1990', 'WDAG', ''),
	(653611, 'The Lord of the Rings: Efficient Maintenance of Views at Data Warehouses.', '2002', 'DISC', ''),
	(663811, 'PRoBe: Multi-dimensional Range Queries in P2P Networks.', '2005', 'WISE', ''),
	(665202, 'Efficient Techniques for Replicated Data Management.', '1990', 'Workshop on the Management of Replicated Data', ''),
	(665203, 'Dynamic Logical Structures: A Position Statement for Managing Replicated Data.', '1992', 'Workshop on the Management of Replicated Data', ''),
	(674283, 'Retrieving and organizing web pages by ``information unit\'\'.', '2001', 'WWW', ''),
	(674307, 'Challenges and practices in deploying web acceleration solutions for distributed enterprise systems.', '2004', 'WWW', 'For most Web-based applications, contents are created dynamically based on the current state of a business, such as product prices and inventory, stored in database systems. These applications demand personalized content and track user behavior while maintaining application integrity. Many of such practices are not compatible with Web acceleration solutions. Consequently, although many web acceleration solutions have shown promising performance improvement and scalability, architecting and engineering distributed enterprise Web applications to utilize available content delivery networks remains a challenge. In this paper, we examine the challenge to accelerate J2EE-based enterprise web applications. We list obstacles and recommend some practices to transform typical database-driven J2EE applications to cache friendly Web applications where Web acceleration solutions can be applied. Furthermore, such transformation should be done without modification to the underlying application business logic and without sacrificing functions that are essential to e-commerce. We take the J2EE reference software, the Java PetStore, as a case study. By using the proposed guideline, we are able to cache more than 90% of the content in the PetStore and scale up the Web site more than 20 times.'),
	(674327, 'Engineering and hosting adaptive freshness-sensitive web applications on data centers.', '2003', 'WWW', 'Wide-area database replication technologies and the availability of content delivery networks allow Web applications to be hosted and served from powerful data centers. This form of application support requires a complete Web application suite to be distributed along with the database replicas. A major advantage of this approach is that dynamic content is served from locations closer to users, leading into reduced network latency and fast response times. However, this is achieved at the expense of overheads due to (a) invalidation of cached dynamic content in the edge caches and (b) synchronization of database replicas in the data center. These have adverse effects on the freshness of delivered content. In this paper, we propose a freshness-driven adaptive dynamic content caching, which monitors the system status and adjusts caching policies to provide content freshness guarantees. The proposed technique has been intensively evaluated to validate its effectiveness. The experimental results show that the freshness-driven adaptive dynamic content caching technique consistently provides good content freshness. Furthermore, even a Web site that enables dynamic content caching can further benefit from our solution, which improves content freshness up to 7 times, especially under heavy user request traffic and long network latency conditions. Our approach also provides better scalability and significantly reduced response times up to 70% in the experiments.'),
	(674403, 'FLUX: fuzzy content and structure matching of XML range queries.', '2006', 'WWW', 'An XML range query may impose predicates on the numerical or textual contents of the elements and/or their respective path structures. In order to handle content and structure range queries efficiently, an XML query processing engine needs to incorporate effective indexing and summarization techniques to efficiently partition the XML document and locate the results. In this paper, we propose a dynamic summarization and indexing method, FLUX, based on Bloom filters and B+-trees to tackle these problems. The results of our extensive experimental evaluations indicated the efficiency of the proposed system.'),
	(674407, 'Web Acceleration for Electronic Commerce Applications.', '2001', 'WWW Posters', ''),
	(674459, 'Duplicate detection in click streams.', '2005', 'WWW', 'We consider the problem of finding duplicates in data streams. Duplicate detection in data streams is utilized in various applications including fraud detection. We develop a solution based on Bloom Filters [9], and discuss the space and time requirements for running the proposed algorithm in both the contexts of sliding, and landmark stream windows. We run a comprehensive set of experiments, using both real and synthetic click streams, to evaluate the performance of the proposed solution. The results demonstrate that the proposed solution yields extremely low error rates.'),
	(675223, 'Detectives: detecting coalition hit inflation attacks in advertising networks streams.', '2007', 'WWW', 'Click fraud is jeopardizing the industry of Internet advertising. Internet advertising is crucial for the thriving of the entire Internet, since it allows producers to advertise their products, and hence contributes to the well being of e-commerce. Moreover, advertising supports the intellectual value of the Internet by covering the running expenses of publishing content. Some content publishers are dishonest, and use automation to generate traffic to defraud the advertisers. Similarly, some advertisers automate clicks on the advertisements of their competitors to deplete their competitors\' advertising budgets. This paper describes the advertising network model, and focuses on the most sophisticated type of fraud, which involves coalitions among fraudsters. We build on several published theoretical results to devise the Similarity-Seeker algorithm that discovers coalitions made by pairs of fraudsters. We then generalize the solution to coalitions of arbitrary sizes. Before deploying our system on a real network, we conducted comprehensive experiments on data samples for proof of concept. The results were very accurate. We detected several coalitions, formed using various techniques, and spanning numerous sites. This reveals the generality of our model and approach.'),
	(676435, 'FLUX: Content and Structure Matching of XPath Queries with Range Predicates.', '2006', 'XSym', ''),
	(708902, 'TWIX: twig structure and content matching of selective queries using binary labeling.', '2006', 'Infoscale', 'XML queries specify predicates on the content and the structure of the elements of tree-structured XML documents. Hence, discovering the occurrences of twig (tree structure) query patterns is a core operation for XML query processing. In this paper, we propose a novel technique for matching XML twig query patterns, named TWIX, which results in a substantial reduction of the search space, response time, size and structure invariance through a distributed binary labeling and tree traversal algorithm. Furthermore, TWIX benefits from an interactive graphical user interface for twig query matching.'),
	(712819, 'BINOCULAR: a system monitoring framework.', '2004', 'DMSN', 'Recent advances in hardware technology facilitate applications requiring a large number of sensor devices, where each sensor device has computational, storage, and communication capabilities. However these sensors are subject to certain constraints such as limited power, high communication cost, low computation capability, presence of noise in readings and low bandwidth. Since sensor devices are powered by ordinary batteries, power is a limiting resource in sensor networks and power consumption is dominated by communication. In order to reduce power consumption, we propose to use a linear model of temporal, spatial and spatio-temporal correlations among sensor readings. With this model, readings of all sensors can be estimated using the readings of a few sensors by using linear observers and multiple queries can be answered more efficiently. Since a small set of sensors are accessed for query processing, communication is significantly reduced. Furthermore, the proposed technique can also be beneficial at filtering out the noise which directly affects the accuracy of query results.'),
	(789647, 'Integrating Security with Fault-Tolerant Distributed Databases.', '1990', 'Comput. J.', ''),
	(794692, 'PowerBookmarks: A System for Personalizable Web Information Organization, Sharing, and Management.', '1999', 'Computer Networks', ''),
	(835078, 'Dimensionality Reduction for Similarity Searching in Dynamic Databases.', '1999', 'Computer Vision and Image Understanding', 'Databases are increasingly being used to store multi-media objects such as maps, images, audio and video. Storage and retrieval of these objects is accomplished using multi-dimensional index structures such as R*-trees and SS-trees. As dimensionality increases, query performance in these index structures degrades. This phenomenon, generally referred to as the dimensionality curse, can be circumvented by reducing the dimensionality of the data. Such a reduction is however accompanied by a loss of precision of query results. Current techniques such as QBIC use SVD transform-based dimensionality reduction to ensure high query precision. The drawback of this approach is that SVD is expensive to compute, and therefore not readily applicable to dynamic databases. In this paper, we propose novel techniques for performing SVD-based dimensionality reduction in dynamic databases. When the data distribution changes considerably so as to degrade query precision, we recompute the SVD transform and incorporate it in the existing index structure. For recomputing the SVD-transform, we propose a novel technique that uses aggregate data from the existing index rather than the entire data. This technique reduces the SVD-computation time without compromising query precision. We then explore efficient ways to incorporate the recomputed SVD-transform in the existing index structure without degrading subsequent query response times. These techniques reduce the computation time by a factor of 20 in experiments on color and texture image vectors. The error due to approximate computation of SVD is less than 10%.'),
	(844266, 'Letter from the Special Issue Editor.', '1998', 'IEEE Data Eng. Bull.', ''),
	(844332, 'New Hardware Support for Database Operations.', '2005', 'IEEE Data Eng. Bull.', ''),
	(844425, 'Data Management for Moving Objects.', '2002', 'IEEE Data Eng. Bull.', ''),
	(844534, 'Data Cubes in Dynamic Environments.', '1999', 'IEEE Data Eng. Bull.', ''),
	(845017, 'Database and Modeling Systems for the Earth Sciences.', '1993', 'IEEE Data Eng. Bull.', ''),
	(845137, 'Automated Storage Management with QoS Guarantee in Large-scale Virtualized Storage Systems.', '2006', 'IEEE Data Eng. Bull.', ''),
	(845561, 'Supporting web query expansion efficiently using multi-granularity indexing and query processing.', '2000', 'Data Knowl. Eng.', ''),
	(845903, 'Evaluations of architectural designs and implementation for database-driven web sites.', '2002', 'Data Knowl. Eng.', 'Response time is a key differentiation point among electronic commerce (e-commerce) applications. For many e-commerce applications, Web pages are created dynamically based on the current business state, stored in database systems. The architecture of database-driven e-commerce Web sites are more complex than that of typical Web sites. It requires integration of Web servers, application servers, and back-end database systems as well as synchronization of multiple databases if caches are used for acceleration of content delivery. In this paper, we analyze the factors that impact the performance and scalability of a database-driven Web site. We experimentally test (1) the performance metrics of database update, query, and synchronization; (2) trigger overhead; and (3) application server (AS) and database connection overhead and constraints. We describe several architectural design approaches for database-driven Web sites and present experimental results on their performance under various conditions, including varying request rates, update-to-request ratio, cache hit ratio, number of regional AS/data cache suites deployed, and database size. We also discuss how to handle Web page requests that involve SSL, cookies, and fragment pages (i.e. by frame or JSP).'),
	(845905, 'Freshness-driven adaptive caching for dynamic content Web sites.', '2003', 'Data Knowl. Eng.', 'Both response time and content freshness are essential to e-commerce applications on the Web. One option to achieve good response time is to build a high performance Web site by deploying the state of art IT infrastructures with large network and server capacities. With such a system architecture, freshness of the content delivered is limited by the network latency since when users receive the contents, the contents may have changed at the server. With the wide availability of content delivery networks, many e-commerce Web applications utilize edge cache servers to cache and deliver dynamic contents at locations much closer to users, avoiding network latency. By caching a large number of dynamic content pages in the edge cache servers, response time can be reduced, benefiting from higher cache hit rates. However, this is achieved at the expense of higher invalidation cost. On the other hand, a higher invalidation cost leads to a longer invalidation cycle (time to perform invalidation check on the pages in caches) at the expense of freshness of cached dynamic content. In this paper, we propose a freshness-driven adaptive dynamic content caching technique, which monitors response time and invalidation cycle length and dynamically adjusts caching policies. We have implemented the proposed technique within NEC\'s Cache Portal Web acceleration solution. We have conducted experiments to evaluate effectiveness of the proposed freshness-driven adaptive dynamic content caching technique. The experimental results show that the proposed technique consistently maintains the best content freshness to users. The experimental results also show that even a Web site with dynamic content caching enabled can further benefit from deployment of our solution with improvement of its content freshness up to 10 times especially during heavy user request traffic and long network latency delay.'),
	(845906, 'Corrigendum to: Freshness-driven adaptive caching for dynamic content web sites [Data & Knowledge Engineering 47 (2) (2003) 269-296].', '2003', 'Data Knowl. Eng.', ''),
	(846398, 'Privacy preserving decision tree learning over multiple parties.', '2007', 'Data Knowl. Eng.', 'Data mining over multiple data sources has emerged as an important practical problem with applications in different areas such as data streams, data-warehouses, and bioinformatics. Although the data sources are willing to run data mining algorithms in these cases, they do not want to reveal any extra information about their data to other sources due to legal or competition concerns. One possible solution to this problem is to use cryptographic methods. However, the computation and communication complexity of such solutions render them impractical when a large number of data sources are involved. In this paper, we consider a scenario where multiple data sources are willing to run data mining algorithms over the union of their data as long as each data source is guaranteed that its information that does not pertain to another data source will not be revealed. We focus on the classification problem in particular and present an efficient algorithm for building a decision tree over an arbitrary number of distributed sources in a privacy preserving manner using the ID3 algorithm.'),
	(846412, 'Progressive ranking of range aggregates.', '2007', 'Data Knowl. Eng.', 'Ranking-aware queries have been gaining much attention recently in many applications such as multimedia databases, search engines and data streams. They are, however, not only restricted to such applications but are also very useful in On-Line Analytical Processing (OLAP) applications. In this paper, we introduce aggregation ranking queries in OLAP data cubes motivated by an online advertisement tracking data warehouse application. These queries aggregate information over a specified range and then return the ranked order of the aggregated values. For instance, an advertiser might be interested in the top-k publishers over the last three months in terms of sales obtained through the online advertisements placed on the publishers. They differ from range aggregate queries in that range aggregate queries are mainly concerned with an aggregate operator such as SUM and MIN/MAX over the selected ranges of all dimensions in the data cubes. Existing techniques for range aggregate queries are not able to process aggregation ranking queries efficiently. Hence, in this paper we propose new algorithms to handle this problem. The essence of the proposed algorithms is based on both ranking and cumulative information to progressively rank aggregation results. Furthermore we empirically evaluate our techniques and the experimental results show that the query cost is improved significantly.'),
	(855948, 'Optimal Data-Space Partitioning of Spatial Data for Parallel I/O.', '2005', 'Distributed and Parallel Databases', 'It is desirable to design partitioning methods that minimize the I/O time incurred during query execution in spatial databases. This paper explores optimal partitioning for two-dimensional data for a class of queries and develops multi-disk allocation techniques that maximize the degree of I/O parallelism obtained in each case. We show that hexagonal partitioning has optimal I/O performance for circular queries among all partitioning methods that use convex non-overlapping regions. An analysis and extension of this result to all possible partitioning techniques is also given. For rectangular queries, we show that hexagonal partitioning has overall better I/O performance for a general class of range queries, except for rectilinear queries, in which case rectangular grid partitioning is superior. By using current algorithms for rectangular grid partitioning, parallel storage and retrieval algorithms for hexagonal partitioning can be constructed. Some of these results carry over to circular partitioning of the data-which is an example of a non-convex region.'),
	(855951, 'A Non-Restrictive Concurrency Control Protocol for Object Oriented Databases.', '1994', 'Distributed and Parallel Databases', ''),
	(855961, 'Exotica/FMDC: A Workflow Management System for Mobile and Disconnected Clients.', '1996', 'Distributed and Parallel Databases', ''),
	(856096, 'The Performance of Two Phase Commit Protocols in the Presence of Site Failures.', '1998', 'Distributed and Parallel Databases', 'The two phase commit is an important protocol in distributed database systems. Much of the existing literature on the protocol is restricted to discussing and analyzing the protocol (and its variants) in the absence of failures. Very little, especially in quantitative terms, has been written about its performance in the presence of site failures. In this study, we use a simulation testbed of a distributed database system to quantify the differences in the performances of four widely known variants of the 2PC protocols (the generic 2PC, presumed commit, presumed abort, and early prepare). Our study covers both the no-failure case and the case of site failures. We present a number of interesting results based on our experiments. One is that the performance of these protocols is highly dependent on the message-processing latency at the transaction coordinator site. Another is that the presumed abort protocol does not necessarily yield better performance in the presence of site failures.'),
	(856114, 'Exploiting sequential access when declustering data over disks and MEMS-based storage.', '2006', 'Distributed and Parallel Databases', 'Due to the large difference between seek time and transfer time in current disk technology, it is advantageous to perform large I/O using a single sequential access rather than multiple small random I/O accesses. However, prior optimal cost and data placement approaches for processing range queries over two-dimensional datasets do not consider this property. In particular, these techniques do not consider the issue of sequential data placement when multiple I/O blocks need to be retrieved from a single device. In this paper, we reevaluate the optimal cost of range queries by declustering two-dimensional datasets over multiple devices, and prove that, in general, it is impossible to achieve the new optimal cost. This is because disks cannot facilitate two-dimensional sequential access which is required by the new optimal cost. Then we revisit the existing data allocation schemes under the new optimal cost, and show that none of them can achieve the new optimal cost. Fortunately, MEMS-based storage is being developed to reduce I/O cost. We first show that the two-dimensional sequential access requirement can not be satisfied by simply modeling MEMS-based storage as conventional disks. Then we propose a new placement scheme that exploits the physical properties of MEMS-based storage to solve this problem. Our theoretical analysis and experimental results show that the new scheme achieves almost optimal I/O costs.'),
	(856147, 'Disk Allocation for Fast Range and Nearest-Neighbor Queries.', '2003', 'Distributed and Parallel Databases', 'As databases increasingly integrate non-textual multimedia information it is becoming necessary to support efficient similarity searching in addition to range searching. Range and nearest-neighbor (similarity) queries are the most important class of queries for multimedia and multi-dimensional databases. Due to the large sizes of the datasets involved, I/O is a critical factor limiting performance. The use of parallel I/O through declustering of the data is a promising approach to improve performance. Consequently several research efforts have addressed the problem of declustering multidimensional data for optimizing range and partial match queries. Very limited work has been done for similarity queries, and the problem of declustering for combined range and similarity queries has not been addressed in the literature. Consider a dataset of images where the following metadata for each image is also stored: date on which the picture was taken, longitude and latitude of the site of the picture. An example of a combined query is: Given a target image, find the 5 most similar images taken within 3 months of the target image and located within 2 degrees of longitude and latitude of the target image. In order to answer this query, it is necessary to conduct a range search on the date, longitude and latitude values and a similarity search on the image content.In this paper, we develop new declustering schemes that provide good declustering for similarity searching. In addition, we show that the new schemes have very good performance for range queries as well as combination queries. The new schemes are based upon the Cyclic declustering schemes which were developed for range and partial match queries. The Cyclic schemes not only provide superior performance to earlier schemes, but are also very robust and consistent with respect to query types and variations in system parameters.'),
	(856149, 'Optimal Scheduling Algorithms for Tertiary Storage.', '2003', 'Distributed and Parallel Databases', 'The ever growing needs of large multimedia systems cannot be met by magnetic disks due to their high cost and low storage density. Consequently, cheaper and denser tertiary storage systems are being integrated into the storage hierarchies of these applications. Although tertiary storage is cheaper, the access latency is very high due to the need to load and unload media on the drives. This high latency and the bursty nature of I/O traffic result in the accumulation of I/O requests for tertiary storage. We study the problem of scheduling these requests to improve performance. In particular we address the issues of scheduling across multiple tapes or disks as opposed to most other studies which consider only one or two media. We focus on algorithms that minimize the number of switches and show through simulation that these result in near-optimal schedules. For single drive libraries an efficient algorithm that produces optimal schedules is developed. For multiple drives the problem is shown to be NP-Complete. Efficient and effective heuristics are presented for both single and multiple drives. The scheduling policies developed achieve significant performance gains over naive policies. The algorithms are simple to implement and are not restrictive. The study encompasses all types of storage libraries handling removable media, such as tapes and optical disks.'),
	(856189, 'Exploring spatial datasets with histograms.', '2006', 'Distributed and Parallel Databases', 'As online spatial datasets grow both in number and sophistication, it becomes increasingly difficult for users to decide whether a dataset is suitable for their tasks, especially when they do not have prior knowledge of the dataset. In this paper, we propose browsing as an effective and efficient way to explore the content of a spatial dataset. Browsing allows users to view the size of a result set before evaluating the query at the database, thereby avoiding zero-hit/mega-hit queries and saving time and resources. Although the underlying technique supporting browsing is similar to range query aggregation and selectivity estimation, spatial dataset browsing poses some unique challenges. In this paper, we identify a set of spatial relations that need to be supported in browsing applications, namely, the contains, contained and the overlap relations. We prove a lower bound on the storage required to answer queries about the contains relation accurately at a given resolution. We then present three storage-efficient approximation algorithms which we believe to be the first to estimate query results about these spatial relations. We evaluate these algorithms with both synthetic and real world datasets and show that they provide highly accurate estimates for datasets with various characteristics.'),
	(856222, 'Mobility and Extensibility in the StratOSphere Framework.', '1999', 'Distributed and Parallel Databases', 'We describe the design and implementation of our StratOSphere project, a framework which unifies distributed objects and mobile code applications. We begin by first examining different mobile code paradigms that distribute processing of code and data resource components across a network. After analyzing these paradigms, and presenting a lattice of functionality, we then develop a layered architecture for StratOSphere, incorporating higher levels of mobility and interoperability at each successive layer. In our design, we provide an object model that permits objects to migrate to different sites, select among different method implementations, and provide new methods and behavior. We describe how we build new semantics in each software layer, and present sample objects developed for the Alexandria Digital Library Project at UC Santa Barbara, which as been building an information retrieval system for geographically-referenced information and datasets. We have designed using StratOSphere a repository that stores its holdings. The library&lsquo;s map, image and geographical data are viewed as a collection of objects with extensible operations. StratOSphere.'),
	(856396, 'The performance of replica control protocols in the presence of site failures.', '1997', 'Distributed Systems Engineering', 'Although managing multiple copies of a database has been the subject of intensive research for quite some time now, it has yet to fulfill its promise in practical applications. In the current state of distributed database technology, data replication, if implemented at all, is typically enforced by the read-one-write-all protocol. More complicated but less restrictive replica control protocols, though a popular topic in research, are not implemented in any widely-used systems. A major reason for this lack of acceptance is that the performance impact of these protocols cannot be easily quantified, since very little existing performance figures of replicated commercial database systems are available. This paper investigates the overhead of data replication, and compares the performance of a seldom implemented protocol, quorum consensus, with the performance of a widely accepted protocol, primary copy.'),
	(874449, 'Functionality and Limitations of Current Workflow Management Systems.', '1997', 'submitted to IEEE Expert', ''),
	(902947, 'Sequence Similarity Search Using Discrete Fourier and Wavelet Transformation Techniques.', '2005', 'International Journal on Artificial Intelligence Tools', ''),
	(929626, 'Exploiting Logical Structures in Replicated Databases.', '1990', 'Inf. Process. Lett.', ''),
	(929630, 'Billiard Quorums on the Grid.', '1997', 'Inf. Process. Lett.', 'Maekawa considered a simple but suboptimal grid based quorum generation scheme in which $N$ sites in a network are logically organized in the form of a $sqrt{N} times sqrt{N}$ grid, and the quorum sets are row-column pairs. Even though the quorum size $2 sqrt{N}$ of the grid scheme is twice as large as finite projective plane based optimal size quorums, it has the advantage of being simple and geometrically evident. In this paper we construct grid based quorums which use a modified grid, and paths that resemble billiard ball paths instead of horizontal and vertical line segments of rows and columns in the grid scheme. The size of these quorums is $sqrt{2} sqrt{N}$. The construction and its properties are geometrically evident as in the case of Maekawa\'\'s grid, and the quorum sets can be generated efficiently.'),
	(938194, 'Ordered Sharing a New Lock Primitive for Database Systems.', '1995', 'Inf. Syst.', ''),
	(938216, 'Unifying concurrency control and recovery of transactions.', '1994', 'Inf. Syst.', ''),
	(938986, 'Computational modeling systems.', '1995', 'Inf. Syst.', ''),
	(939134, 'High dimensional nearest neighbor searching.', '2006', 'Inf. Syst.', 'As databases increasingly integrate different types ot Information SUCh as time-series, multimedia and scientific data, it becomes necessary to support efficient retrieval of multi-dimensional data. Both the dimensionality and the amount of data that needs to be processed are increasing rapidly. As a result of the scale and high dimensional nature, the traditional techniques have proven inadequate. In this paper, we propose search techniques that are effective especially for large high dimensional data sets. We first propose VA+-file technique which is based on scalar quantization of the data. VA+-file is especially useful for searching exact nearest neighbors (NN) in non-uniform high dimensional data sets. We then discuss how to improve the search and make it progressive by allowing some approximations in the query result. We develop a general framework for approximate NN queries, discuss various approaches for progressive processing of similarity queries, and develop a metric for evaluation of such techniques. Finally, a new technique based on clustering is proposed, which merges the benefits of various approaches for progressive similarity searching. Extensive experimental evaluation is performed on several real-life data sets. The evaluation establishes the superiority of the proposed techniques over the existing techniques for high dimensional similarity searching. The techniques proposed in this paper are effective for real-life data sets, which are typically non-uniform, and they are scalable with respect to both dimensionality and size of the data set.'),
	(939166, 'Data space mapping for efficient I/O in large multi-dimensional databases.', '2007', 'Inf. Syst.', 'In this paper, we propose data space mapping techniques for storage and retrieval in multi-dimensional databases on multi-disk architectures. We identify the important factors for an efficient multi-disk searching of multi-dimensional data and develop secondary storage organization and retrieval techniques that directly address these factors. We especially focus on high dimensional data, where none of the current approaches are effective. In contrast to the current declustering techniques, storage techniques in this paper consider both inter- and intra-disk organization of the data. The data space is first partitioned into buckets, then the buckets are declustered to multiple disks while they are clustered in each disk. The queries are executed through bucket identification techniques that locate the pages. One of the partitioning techniques we discuss is especially practical for high dimensional data, and our disk and page allocation techniques are optimal with respect to number of I/O accesses and seek times. We provide experimental results that support our claims on two real high dimensional datasets.'),
	(939201, 'Fast computation of spatial selections and joins using graphics hardware.', '2007', 'Inf. Syst.', 'Spatial database operations are typically performed in two steps. In the filtering step, indexes and the minimum bounding rectangles (MBRs) of the objects are used to quickly determine a set of candidate objects. In the refinement step, the actual geometries of the objects are retrieved and compared to the query geometry or each other. Because of the complexity of the computational geometry algorithms involved, the CPU cost of the refinement step is usually the dominant cost of the operation for complex geometries such as polygons. Although many run-time and pre-processing-based heuristics have been proposed to alleviate this problem, the CPU cost still remains the bottleneck. In this paper, we propose a novel approach to address this problem using the efficient rendering and searching capabilities of modern graphics hardware. This approach does not require expensive pre-processing of the data or changes to existing storage and index structures, and is applicable to both intersection and distance predicates. We evaluate this approach by comparing the performance with leading software solutions. The results show that by combining hardware and software methods, the overall computational cost can be reduced substantially for both spatial selections and joins. We integrated this hardware/software co-processing technique into a popular database to evaluate its performance in the presence of indexes, pre-processing and other proprietary optimizations. Extensive experimentation with real-world data sets show that the hardware-accelerated technique not only outperforms the run-time software solutions but also performs as well if not better than pre-processing-assisted techniques.'),
	(971328, 'Constrained Shared Locks for Increased Concurrency in Databases.', '1995', 'J. Comput. Syst. Sci.', ''),
	(972442, 'Relative Serializability: An Approach for Relaxing the Atomicity of Transactions.', '1997', 'J. Comput. Syst. Sci.', ''),
	(986325, 'Scalable Access Within the Context of Digital Libraries.', '1997', 'Int. J. on Digital Libraries', 'This paper presents a summary of some of the work-in-progress within the Alexandria Digital Library Project. In particular, we present scalable methods of locating information at different levels within a distributed digital library environment. Starting at the high level, we show how queries can be routed to appropriate information sources. At a given source, efficient query processing is supported by using materialized views and multidimensional index structures. Finally, we propose solutions to the problem of storage and retrieval of large objects on secondary and tertiary storage.'),
	(986735, 'Improving User Response Times in Application Delivery Networks through Reduction of Network and Server Latencies.', '2007', 'Journal of Interconnection Networks', ''),
	(986755, 'Virtual Active Network for Live Streaming Media Delivery.', '2007', 'Journal of Interconnection Networks', ''),
	(988155, 'A Token-Based Fault-Tolerant Distributed Mutual Exclusion Algorithm.', '1995', 'J. Parallel Distrib. Comput.', ''),
	(1011256, 'Browsing and placement of multi-resolution images on parallel disks.', '2003', 'Multimedia Syst.', ''),
	(1012483, 'Range and kNN Query Processing for Moving Objects in Grid Model.', '2003', 'MONET', 'With the growing popularity of mobile computing devices and wireless communications, managing dynamically changing information about moving objects is becoming feasible. In this paper, we implement a system that manages such information and propose two query algorithms: a range query algorithm and a k nearest neighbor algorithm. The range query algorithm is combined with an efficient filtering technique which determines if a polyline corresponding to the trajectory of a moving object intersects with a given range. We study the performance of the system, which shows that despite the filtering step, for moderately large ranges, the range query algorithm we propose outperforms the algorithm without filtering.'),
	(1074824, 'Multiple query optimization in middleware using query teamwork.', '2005', 'Softw., Pract. Exper.', 'Multiple concurrent queries occur in many database settings. This paper describes the use of middleware as an optimization tool for such queries. Since common subexpressions derive from common data and the data is usually greatest at the source, the middleware exploits the presence of sharable access patterns to underlying data, especially scans of large portions of tables or indexes, in environments where query queuing or batching is an acceptable approach. The results show that simultaneous queries with such sharable accesses have a tendency to form synchronous groups (teams) which benefit each other through the operation of the disk cache, in effect using it as an implicit pipeline. the middleware exploits this tendency by queuing and scheduling the queries to promote this interaction, using an algorithm designed to promote such teamwork. This is implemented as middleware for use with a commercial database engine. The results include tests using the query mix from the TPC BenchmarkTMR, achieving a speed-up of 2.34 over the default scheduling provided by one database. Other results show that the success depends on the details of the computing environment.'),
	(1112342, 'Storage Efficient Replicated Databases.', '1990', 'IEEE Trans. Knowl. Data Eng.', 'A fragmentation method that reduces the storage overhead of replicated objects is proposed. A data-management protocol for these fragmented objects is presented, and it is shown that this protocol is a generalization of quorum algorithms for replicated data in which objects are not fragmented. Although the protocol reduces storage requirements, it does not achieve a high level of resiliency for both read and write operations. By integrating a propagation mechanism with the protocol, the same level of resiliency is achieved for both read and write operations as other quorum protocols, while the storage cost is reduced.'),
	(1112344, 'Using Reconfiguration for Efficient Management of Replicated Data.', '1996', 'IEEE Trans. Knowl. Data Eng.', 'Replicated data management protocols have been proposed that exploit a logically structured set of copies. These protocols have the advantage that they provide limited fault-tolerance at low communication cost. The proposed protocols can be viewed as analogues of the read-one write-all protocol in the context of logical structures. In this paper, we start by generalizing these protocols in two ways for logical structures. First, the quorum based approach is applied to develop protocols that use structured read and write quorums, thus attaining a high degree of data availability for both read and write operations. Next, the reconfiguration or views approach is developed for these structures resulting in protocols that attain high degrees of availability at significantly low communication cost for read operations. In this sense, the proposed protocols have the advantages of the read-one write-all protocol for low cost read operations as well as the majority quorum protocol for high data availability. Finally, we generalize the reconfiguration approach to allow for the dynamic reconfiguration of the database system from one replica management protocol to another. This allows database systems to adapt to an evolving and dynamic application environment.'),
	(1112346, 'The Performance of Protocols Based on Locks with Ordered Sharing.', '1994', 'IEEE Trans. Knowl. Data Eng.', 'There is growing evidence that for a wide variety of database workloads and system configurations, locking-based concurrency control outperforms other types of concurrency control strategies. However, in the presence of increased data contention, locking protocols such as two-phase locking perform poorly. In this paper, we analyze a family of locking-based protocols that employ a new relationship between locks called ordered sharing. Using a centralized database simulation model, we demonstrate that these protocols exhibit comparable performance to that of traditional locking-based protocols when data contention is low, and they exhibit superior performance when data contention is high. Furthermore, we show that the performance of these protocols improves as resources become more plentiful. This is particularly significant because the performance of two-phase locking degrades as a result of data contention, not resource contention. Thus, introducing additional resources improves the performance of the proposed protocols, though it does not benefit two-phase locking significantly.'),
	(1112874, 'Epidemic Algorithms for Replicated Databases.', '2003', 'IEEE Trans. Knowl. Data Eng.', 'We present a family of epidemic algorithms for maintaining replicated database systems. The algorithms are based on the causal delivery of log records where each record corresponds to one transaction instead of one operation. The first algorithm in this family is a pessimistic protocol that ensures serializability and guarantees strict executions. Since we expect the epidemic algorithms to be used in environments with low probability of conflicts among transactions, we develop a variant of the pessimistic algorithm which is optimistic in that transactions commit as soon as they terminate locally and inconsistencies are detected asynchronously as the effects of committed transactions propagate through the system. The last member of the family of epidemic algorithms is pessimistic and uses voting with quorums to resolve conflicts and improve transaction response time. A simulation study evaluates the performance of the protocols.'),
	(1113100, 'Query Relaxation by Structure and Semantics for Retrieval of Logical Web Documents.', '2002', 'IEEE Trans. Knowl. Data Eng.', 'Since the Web encourages hypertext and hypermedia document authoring (e.g., HTML or XML), Web authors tend to create documents that are composed of multiple pages connected with hyperlinks. A Web document may be authored in multiple ways, such as, 1) all information in one physical page, or 2) a main page and the related information in separate linked pages. Existing Web search engines, however, return only physical pages containing keywords. In this paper, we introduce the concept of information unit, which can be viewed as a logical Web document consisting of multiple physical pages as one atomic retrieval unit. We present an algorithm to efficiently retrieve information units. Our algorithm can perform progressive query processing. These functionalities are essential for information retrieval on the Web and large XML databases. We also present experimental results on synthetic graphs and real Web data.'),
	(1114118, 'Scalable Filtering of Multiple Generalized-Tree-Pattern Queries over XML Streams.', '2008', 'IEEE Trans. Knowl. Data Eng.', 'An XML publish/subscribe system needs to filter a large number of queries over XML streams. Most existing systems only consider filtering the simple XPath statements. In this paper, we focus on filtering of the more complex Generalized-Tree-Pattern (GTP) queries. Our filtering mechanism is based on a novel Tree-of-Path (TOP) encoding scheme, which compactly represents the path matches for the entire document. First, we show that the TOP encodings can be efficiently produced via a shared bottom-up path matching. Second, with the aid of this TOP encoding, we can 1) achieve polynomial time and space complexity for post processing, 2) avoid redundant predicate evaluations, 3) allow an efficient duplicate-free and merge join-based algorithm for merging multiple encoded path matches and 4) simplify the processing of GTP queries. Overall our approach maximizes the sharing opportunity across queries by exploiting the suffix as well as prefix sharing. At the same time, our TOP encodings allow efficient post processing for GTP queries. Extensive performance studies show that our GFilter solution not only achieves significantly better filtering performance than state-of-the-art algorithms, but also is capable of efficiently filtering the more complex GTP queries.'),
	(1117321, 'An Efficient and Fault-Tolerant Solution for Distributed Mutual Exclusion.', '1991', 'ACM Trans. Comput. Syst.', 'In this paper, we present an efficient and fault-tolerant algorithm for generating quorums to solve the distributed mutual exclusion problem. The algorithm uses a logical tree organization of the network to generate tree quorums, which are logarithmic in the size of the network in the best case. Our approach is resilient to both site and communication failures, even when such failures lead to network partitioning. Furthermore, the algorithm exhibits a property of graceful degradation, i.e., it requires more messages only as the number of failures increase in the network. We describe how tree quorums can be used for various distributed applications for providing mutually exclusive access to a distributed resource, managing replicated objects, and atomically commiting a distributed transaction.'),
	(1118145, 'The Generalized Tree Quorum Protocol: An Efficient Approach for Managing Replicated Data.', '1992', 'ACM Trans. Database Syst.', 'In this paper, we present a low-cost fault-tolerant protocol for managing replicated data. We impose a logical tree structure on the set of copies of an object and develop a protocol that uses the information available in the logical structure to reduce the communication requirements for read and write operations. The tree quorum protocol is a generalization of the static voting protocol with two degrees of freedom for choosing quorums. In general, this results in significantly lower communication costs for comparable data availability. The protocol exhibits the property of graceful degradation, i.e., communication costs for executing operations are minimal in a failure-free environment but may increase as failures occur. This approach in designing distributed systems is desirable since it provides fault-tolerance without imposing unnecessary costs on the failure-free mode of operations.'),
	(1118147, 'Consistency and Orderability: Semantics-Based Correctness Criteria for Databases.', '1993', 'ACM Trans. Database Syst.', 'The semantics of objects and transactions in database systems are investigated. User-defined predicates called consistency assertions are used to specify user programs. Three new correctness criteria are proposed. The first correctness criterion consistency is based solely on the users\' specifications and admit nonserializable executions that are acceptable to the users. Integrity constraints of the database are maintained through consistency assertions. The second correctness criterion orderability is a generalization of view serializability and represents a weak notion of equivalence to a serial schedule. Finally, the third correctness criterion strong order-ability is introduced as a generalization of conflict serializability. Unlike consistency, the notions of orderability allow users to operate an isolation as maintenance of the integrity constrainst now becomes the responsibility of the database system.'),
	(1118754, 'An integrated efficient solution for computing frequent and top- elements in data streams.', '2006', 'ACM Trans. Database Syst.', 'We propose an approximate integrated approach for solving both problems of finding the most popular k elements, and finding frequent elements in a data stream coming from a large domain. Our solution is space efficient and reports both frequent and top-k elements with tight guarantees on errors. For general data distributions, our top-k algorithm returns k elements that have roughly the highest frequencies; and it uses limited space for calculating frequent elements. For realistic Zipfian data, the space requirement of the proposed algorithm for solving the exact frequent elements problem decreases dramatically with the parameter of the distribution; and for top-k queries, the analysis ensures that only the top-k elements, in the correct order, are reported. The experiments, using real and synthetic data sets, show space reductions with hardly any loss in accuracy. Having proved the effectiveness of the proposed approach through both analysis and experiments, we extend it to be able to answer continuous queries about frequent and top-k elements. Although the problems of incremental reporting of frequent and top-k elements are useful in many applications, to the best of our knowledge, no solution has been proposed.'),
	(1124559, 'Analysis of Quorum-Based Protocols for Distributed (k+1)-Exclusion.', '1997', 'IEEE Trans. Parallel Distrib. Syst.', ''),
	(1137955, 'Ordered Shared Locks for Real-Time Databases', '1995', 'VLDB J.', 'We propose locking protocols for real-time databases. Our approach has two main motivations: First, locking protocols are widely accepted and used in most database systems. Second, in real-time databases it has been shown that the blocking behavior of transactions in locking protocols results in performance degradation. We use a new relationship between locks called ordered sharing to eliminate blocking that arises in the traditional locking protocols. Ordered sharing eliminates blocking of read and write operations but may result in delayed termination. Since timeliness and not response time is the crucial factor in real-time databases, our protocols exploit this delay to allow transactions to execute within the slacks of delayed transactions. We compare the performance of the proposed protocols with the two-phase locking protocol for real-time databases. Our experiments indicate that the proposed protocols significantly reduce the percentage of missed deadlines in the system for a variety of workloads.'),
	(1138256, 'MEMS based storage architecture for relational databases.', '2007', 'VLDB J.', 'Due to recent advances in semiconductor manufacturing, the gap between main memory and disks is constantly increasing. This leads to a significant performance bottleneck for Relational Database Management Systems. Recent advances in nanotechnology have led to the invention of MicroElectroMechanical Systems (MEMS) based storage technology to replace disks. In this paper, we exploit the physical characteristics of MEMS-based storage devices to develop a placement scheme for relational data that enables retrieval in both row-wise and column-wise manner. We develop algorithms for different relational operations based on this data layout. Our experimental results and analysis demonstrate that this data layout not only improves I/O utilization, but results in better cache performance for a variety of different relational operations.'),
	(1141233, 'Disconnection Modes for Mobile Databases.', '2002', 'Wireless Networks', 'As mobility permeates into todays computing and communication arena, we envision application infrastructures that will increasingly rely on mobile technologies. Traditional database applications and information service applications will need to integrate mobile entities: people and computers. In this paper, we develop a distributed database framework for mobile environments. A key requirement in such an environment is to support frequent connection and disconnection of database sites. We present algorithms that implement this framework in an asynchronous system.'),
	(1185925, 'SLEUTH: Single-pubLisher attack dEtection Using correlaTion Hunting.', '2008', 'PVLDB', 'Several data management challenges arise in the context of Internet advertising networks, where Internet advertisers pay Internet publishers to display advertisements on their Web sites and drive traffic to the advertisers from surfers\' clicks. Although advertisers can target appropriate market segments, the model allows dishonest publishers to defraud the advertisers by simulating fake traffic to their own sites to claim more revenue. This paper addresses the case of publishers launching fraud attacks from numerous machines, which is the most widespread scenario. The difficulty of uncovering these attacks is proportional to the number of machines and resources exploited by the fraudsters. In general, detecting this class of fraud entails solving a new data mining problem, which is finding correlations in multidimensional data. Since the dimensions have large cardinalities, the search space is huge, which has long allowed dishonest publishers to inflate their traffic, and deplete the advertisers\' advertising budgets. We devise the approximate SLEUTH algorithms to solve the problem efficiently, and uncover single-publisher frauds. We demonstrate the effectiveness of SLEUTH both analytically and by reporting some of its results on the Fastclick network, where numerous fraudsters were discovered.'),
	(1253300, 'Hierarchical result views for keyword queries over relational databases.', '2009', 'KEYS', 'Enabling keyword queries over relational databases (KQDB) benefits a large population of users who have difficulty in understanding the database schema or using SQLs. However, since there are different interpretations for a query, the results of KQDB that mix different possible answers still make it hard for users to consume and extract the information that is interesting to them. To help users with different preferences understand the query results and quickly locate the desired information, this paper proposes generating easy-to-navigate hierarchical result views for each interpretation to the query on the fly. We define the structures for organizing these hierarchical views, provide metrics for evaluating them in terms of user navigation efforts, and develop an efficient algorithm for generating the view structures. The effectiveness and efficiency of the proposed approaches are verified through an experimental study.'),
	(1284157, 'Thread Cooperation in Multicore Architectures for Frequency Counting over Multiple Data Streams.', '2009', 'PVLDB', 'Many real-world data stream analysis applications such as network monitoring, click stream analysis, and others require combining multiple streams of data arriving from multiple sources. This is referred to as multi-stream analysis. To deal with high stream arrival rates, it is desirable that such systems be capable of supporting very high processing throughput. The advent of multicore processors and powerful servers driven by these processors calls for efficient parallel designs that can effectively utilize the parallelism of the multicores, since performance improvement is possible only through effective parallelism. In this paper, we address the problem of parallelizing multi-stream analysis in the context of multicore processors. Specifically, we concentrate on parallelizing frequent elements, top-k, and frequency counting over multiple streams. We discuss the challenges in designing an efficient parallel system for multi-stream processing. Our evaluation and analysis reveals that traditional contention based locking results in excessive overhead and wait, which in turn leads to severe performance degradation in modern multicore architectures. Based on our analysis, we propose a cooperation based locking paradigm for efficient parallelization of frequency counting. The proposed cooperation based paradigm removes waits associated with synchronization, and allows replacing locks by much cheaper atomic synchronization primitives. Our implementation of the proposed paradigm to parallelize a well known frequency counting algorithm shows the benefits of the proposed cooperation based locking paradigm when compared to the traditional contention based locking paradigm. In our experiments, the proposed cooperation based design outperforms the traditional contention based design by a factor of 2--5.5X for synthetic zipfian data sets.'),
	(1306364, 'Aggregate Skyline: Analysis for Online Users.', '2009', 'SAINT', 'Aggregation is among the core functionalities of OLAP systems. Frequently, such queries are issued in decision support systems to identify interesting groups of data. In conventional settings, the queries take a long time to compute (hours!) and produce massive result-sets at varying degrees of aggregation. Providing real time analysis results to web users can enhance the utility of sites dealing with large amounts of data. However, to do so, needs succinct ways of capturing interesting analysis results rather than complex offline analysis. The result set should be presentable in a few web pages. Furthermore, such results should be computed quickly and updated in the background whenever possible. We propose skyline queries over aggregated data as a means of providing succinct but interesting analysis results. We support aggregation functions from a large class of monotonous functions that can be specified at runtime, thereby allowing user customization of the analysis. We explore a family of algorithms which try to consume only as many data records as are necessary to compute the skyline and identify an optimal algorithm within the family. We further refine the algorithm by taking into account system issues such as disk behavior which are often ignored but have strong impact on real system performance. Experimental results provide strong validation for the performance and progressive nature of the algorithm.'),
	(1316139, 'DHT overlay schemes for scalable p-range resource discovery.', '2005', 'HPDC', 'The information service is a critical component of a grid infrastructure for resource discovery. Although P2P computing paradigm could address some of the scalability issues that plagued grid resource discovery, most existing distributed hash table (DHT) based P2P overlays have difficulty in treating attribute range queries that are common in resource discovery lookups due to the inherent randomness of hash functions. Recently, there have been various attempts to solve the range search problem over DHT networks [Aberer, et al. (2003), Gao and Steenkiste (2004), Ratnasamy, et al. (2003), and Tanin, et al. (2005)]. Central to all of these is a mapping scheme which maps the tree-structured logical index space to some DHT-based physical node space. In this paper, we propose a general framework to put all these under the same umbrella based on how mapping of the tree-structured index that identifies a physical node responsible of a particular range is done through replication. We identify three schemes which should cover the spectrum of all meaningful replication schemes: the tree replication scheme (TRS) replicates the entire tree; the path caching scheme (PCS) replicates paths from root to leaves; and the node replication scheme (NRS) replicates individual logical nodes.'),
	(1516612, 'Fraud, Anonymization, and Privacy in the Internet: A Database Perspective.', '2009', 'COMAD', ''),
	(1518808, 'Generalizing PIR for Practical Private Retrieval of Public Data.', '2010', 'DBSec', ''),
	(1519681, 'Data Management Challenges in Cloud Computing Infrastructures.', '2010', 'DNIS', ''),
	(1577376, 'G-Store: a scalable data store for transactional multi key access in the cloud.', '2010', 'SoCC', 'Cloud computing has emerged as a preferred platform for deploying scalable web-applications. With the growing scale of these applications and the data associated with them, scalable data management systems form a crucial part of the cloud infrastructure. Key-Value stores -- such as Bigtable, PNUTS, Dynamo, and their open source analogues-- have been the preferred data stores for applications in the cloud. In these systems, data is represented as Key-Value pairs, and atomic access is provided only at the granularity of single keys. While these properties work well for current applications, they are insufficient for the next generation web applications -- such as online gaming, social networks, collaborative editing, and many more -- which emphasize collaboration. Since collaboration by definition requires consistent access to groups of keys, scalable and consistent multi key access is critical for such applications. We propose the Key Group abstraction that defines a relationship between a group of keys and is the granule for on-demand transactional access. This abstraction allows the Key Grouping protocol to collocate control for the keys in the group to allow efficient access to the group of keys. Using the Key Grouping protocol, we design and implement G-Store which uses a key-value store as an underlying substrate to provide efficient, scalable, and transactional multi key access. Our implementation using a standard key-value store and experiments using a cluster of commodity machines show that G-Store preserves the desired properties of key-value stores, while providing multi key access functionality at a very low overhead.'),
	(1591939, 'ElasTraS: An Elastic Transactional Data Store in the Cloud', '2010', 'CoRR', 'Over the last couple of years, Cloud Computing or Elastic Computing has emerged as a compelling and successful paradigm for internet scale computing. One of the major contributing factors to this success is the elasticity of resources. In spite of the elasticity provided by the infrastructure and the scalable design of the applications, the elephant (or the underlying database), which drives most of these web-based applications, is not very elastic and scalable, and hence limits scalability. In this paper, we propose ElasTraS which addresses this issue of scalability and elasticity of the data store in a cloud computing environment to leverage from the elastic nature of the underlying infrastructure, while providing scalable transactional data access. This paper aims at providing the design of a system in progress, highlighting the major design choices, analyzing the different guarantees provided by the system, and identifying several important challenges for the research community striving for computing in the cloud.'),
	(1617311, 'Big Data and Cloud Computing: New Wine or just New Bottles?.', '2010', 'PVLDB', ''),
	(95219, 'Evaluating window joins over punctuated streams.', '2004', 'CIKM', 'We explore join optimizations in the presence of both time-based constraints (sliding windows) and value-based constraints (punctuations). We present the first join solution named PWJoin that exploits such combined constraints to shrink the runtime join state and to propagate punctuations to benefit downstream operators. We design a state structure for PWJoin that facilitates the exploitation of both constraint types. We also explore optimizations enabled by the interactions between window and punctuation, e.g., early punctuation propagation. The costs of the PWJoin are analyzed using a cost model. We also conduct an experimental study using CAPE continuous query system. The experimental results show that in most cases, by exploiting punctuations, PWJoin outperforms the pure window join with regard to both memory overhead and throughput. Our technique complements the joins in the literature, such as symmetric hash join or window join, to now require less runtime resources without compromising the accuracy of the result.'),
	(95587, 'Batch data warehouse maintenance in dynamic environments.', '2002', 'CIKM', 'Data warehouse view maintenance is an important issue due to the growing use of warehouse technology for information integration and data analysis. Given the dynamic nature of modern distributed environments, both data updates and schema changes are likely to occur in different data sources. In applications that the real-time refreshment of data warehouse extent under source changes is not critical, the source updates are usually maintained in a batch fashion to reduce the maintenance overhead. However, most prior work can only deal with batch source data updates. In this paper, we provide a solution strategy that is capable of batching both source data updates and schema changes. We propose techniques to first preprocess the initial source updates to summarize delta changes for each source. We then design a view adaptation algorithm to adapt the warehouse view under these delta changes. We have implemented our solutions and incorporated into an existing data warehouse prototype system. The experimental studies demonstrate excellent performance achievable by our batch techniques.'),
	(144317, 'A Transactional Approach to Parallel Data Warehouse Maintenance.', '2002', 'DaWaK', ''),
	(147932, 'MJoin: a metadata-aware stream join operator.', '2003', 'DEBS', 'Join algorithms must be re-designed when processing stream data instead of persistently stored data. Data streams are potentially infinite and the query result is expected to be generated incrementally instead of once only. Data arrival patterns are often unpredictable and the statistics of the data and other relevant metadata often are only known at runtime. In some cases they are supplied interleaved with the actual data in the form of stream markers. Recently, stream join algorithms, like Symmetric Hash Join and XJoin, have been designed to perform in a pipelined fashion to cope with the latent delivery of data. However, none of them to date takes metadata, especially runtime metadata, into consideration. Hence, the join execution logic defined statically before runtime may not be well suited to deal with varying types of dynamic runtime scenarios. Also the potentially unbounded state needs to be maintained by the join operator to guarantee the precision of the result. In this paper, we propose a metadata-aware stream join operator called MJoin which is able to exploit metadata to (1) detect and purge useless materialized data to save computation resources and (2) optimize the execution logic to target diferent optimization goals. We have implemented the MJoin operator. The experimental results validate our metadata-driven join optimization strategies.'),
	(176351, 'Joining Punctuated Streams.', '2004', 'EDBT', ''),
	(176791, 'Index tuning for parameterized streaming groupby queries.', '2008', 'SSPS', 'Similar groupby queries are common in many stream processing applications. We propose the concept of the parameterized streaming groupby query template (PSGB template) as an abstraction for representing potentially infinite number of runtime instantiated groupby queries with customized results. To handle high-speed data streams and large numbers of PSGB queries, the IMP index is proposed for organizing the quickly evolving PSGB operator state to support query workloads. In this paper, we tackle the IMP index tuning problem. We propose the EPrune algorithm that is guaranteed to find the optimal IMP index configuration for a given query workload. To support frequent index tuning required for coping with dynamic stream environments, efficiency of index selection becomes more important than guaranteed optimality. To achieve this, we design a greedy index selection algorithm named RGreedy and equip it with three heuristics - OWL, PCL and Hybrid. Our experiments show that RGreedy finds the optimal IMP configuration in practically all of our extensive test cases. While EPrune takes hours to finish, RGreedy terminates within seconds.'),
	(183019, 'A Transactional Model for Data Warehouse Maintenance.', '2002', 'ER', ''),
	(298955, 'Event Stream Processing with Out-of-Order Data Arrival.', '2007', 'ICDCS Workshops', 'Complex event processing has become increasingly important in modern applications, ranging from supply chain management for RFID tracking to real-time intrusion detection. The goal is to extract patterns from such event streams in order to make informed decisions in real-time. However, networking latencies and even machine failure may cause events to arrive out-of-order at the event stream processing engine. In this work, we address the problem of processing event pattern queries specified over event streams that may contain out-of-order data. First, we analyze the problems state-of-the-art event stream processing technology would experience when faced with out-of-order data arrival. We then propose a new solution of physical implementation strategies for the core stream algebra operators such as sequence scan and pattern construction, including stack-based data structures and associated purge algorithms. Optimizations for sequence scan and construction as well as state purging to minimize CPU cost and memory consumption are also introduced. Lastly, we conduct an experimental study demonstrating the effectiveness of our approach.'),
	(299611, 'Detection and Correction of Conflicting Source Updates for View Maintenance.', '2004', 'ICDE', 'Data integration over multiple heterogeneous datasources has become increasingly important for modern applications. The integrated data is usually stored in materialized views for high availability and better performance. Such views must be maintained after the datasources change. In a loosely-coupled and dynamic environment, such as the Data Grid, the sources may autonomously change not only their data but also their schema, query capabilities or semantics, which may consequently cause theon-going view maintenance fail. In this paper, first, we analyze the maintenance errors and classify them into different classes of dependencies. We then propose severaldependency detection and correction algorithms to handle these new classes of concurrency. Our techniques arenot tied to specific maintenance algorithms nor to a particular data model. To our knowledge, this is the first completesolution to the view maintenance concurrency problems for both data and schema changes. We have implemented the proposed solutions and experimentally evaluated the impact of anomalies on maintenance performanceand trade-offs between different dependency detection algorithms.'),
	(299683, 'GPIVOT: Efficient Incremental Maintenance of Complex ROLAP Views.', '2005', 'ICDE', 'Data warehousing and on-line analytical processing (OLAP) are essential for decision support applications. Common OLAP operations include for example drill down, roll up, pivot and unpivot. Typically, such queries are fairly complex and are often executed over huge volumes of data. The solution in practice is to use materialized views to reduce the query cost. Utilizing materialized views that incorporate not just traditional simple SELECT-PROJECT-JOIN operators but also complex OLAP operators such as pivot and unpivot is crucial to improve the OLAP query performance but as of now unexplored topic. In this work, we demonstrate that the efficient maintenance of views with pivot and unpivot operators requires the definition of more generalized operators, which we call GPIVOT and GUNPIVOT. We propose rewriting rules, combination rules and propagation rules for such operators. We also design a novel view maintenance framework for applying these rules to obtain an efficient maintenance plan. Our query transformation rules are thus dual purpose serving both view maintenance and query optimization. This paves the way for the inclusion of the GPIVOT and GUNPIVOT into any DBMS engine.'),
	(302084, 'Runtime Semantic Query Optimization for Event Stream Processing.', '2008', 'ICDE', 'Detecting complex patterns in event streams, i.e., complex event processing (CEP), has become increasingly important for modern enterprises to react quickly to critical situations. In many practical cases business events are generated based on pre-defined business logics. Hence constraints, such as occurrence and order constraints, often hold among events. Reasoning using these known constraints enables us to predict the non-occurrences of certain future events, thereby helping us to identify and then terminate the long running query processes that are guaranteed to not lead to successful matches. In this work, we focus on exploiting event constraints to optimize CEP over large volumes of business transaction streams. Since the optimization opportunities arise at runtime, we develop a runtime query unsatisfiability (RunSAT) checking technique that detects optimal points for terminating query evaluation. To assure efficiency of RunSAT checking, we propose mechanisms to precompute the query failure conditions to be checked at runtime. This guarantees a constant-time RunSAT reasoning cost, making our technique highly scalable. We realize our optimal query termination strategies by augmenting the query with Event-Condition-Action rules encoding the pre-computed failure conditions. This results in an event processing solution compatible with state-of-the-art CEP architectures. Extensive experimental results demonstrate that significant performance gains are achieved, while the optimization overhead is small.'),
	(372949, 'An Adaptive Multi-Objective Scheduling Selection Framework for Continuous Query Processing.', '2005', 'IDEAS', ''),
	(598359, 'DyDa: Data Warehouse Maintenance in Fully Concurrent Environments.', '2001', 'SIGMOD Conference', ''),
	(600003, 'Rainbow: Multi-XQuery Optimization Using Materialized XML Views.', '2003', 'SIGMOD Conference', ''),
	(643619, 'CAPE: Continuous Query Engine with Heterogeneous-Grained Adaptivity.', '2004', 'VLDB', ''),
	(661973, 'An algebraic approach for incremental maintenance of materialized XQuery views.', '2002', 'WIDM', 'Modern data sources, including structural and semi-structural sources, often export XML views over base data, and at times may materialize their views by storing the XML query result to provide faster data access. It is typically more efficient to maintain a view by incrementally propagating the base changes to the view than by re-computing it from scratch. Techniques for the incremental maintenance of relational views have been extensively studied in the literature. However, the maintenance of views created using XQuery is as of now unexplored. In this paper we propose an algebraic approach for incremental XQuery view maintenance. In our approach, an update to the XML source is transformed into a set of well defined update primitives which are propagated through the XML algebra tree. This algebraic update propagation process generates incremental update primitives to be applied to the result view. We briefly discuss our XQuery view maintenance system implementation. Our experiments confirm that incremental view maintenance is indeed faster than re-computation.'),
	(1112575, 'A Compensation-Based Approach for View Maintenance in Distributed Environments.', '2006', 'IEEE Trans. Knowl. Data Eng.', 'Data integration over multiple heterogeneous data sources has become increasingly important for modern applications. The integrated data is usually stored as materialized views to allow better access, performance, and high availability. In loosely coupled environments, such as the Data Grid, the data sources are autonomous. Hence, the source updates can be concurrent and cause erroneous results during view maintenance. State-of-the-art maintenance strategies apply compensating queries to correct such errors, making the restricting assumption that all source schemata remain static over time. However, in such dynamic environments, the data sources may change not only their data but also their schema. Consequently, either the maintenance queries or the compensating queries may fail. In this paper, we propose a novel framework called DyDa that overcomes these limitations and handles both source data updates and schema changes. We identify three types of maintenance anomalies, caused by either source data updates, data-preserving schema changes, or non-data-preserving schema changes. We propose a compensation algorithm to solve the first two types of anomalies. We show that the third type of anomaly is caused by the violation of dependencies between maintenance processes. Then, we propose dependency detection and correction algorithms to identify and resolve the violations. Put together, DyDa extends prior maintenance solutions to solve all types of view maintenance anomalies. The experimental results show that DyDa imposes a minimal overhead on data update processing while allowing for the extended functionality to handle concurrent schema changes.'),
	(1118227, 'Multiversion-based view maintenance over distributed data sources.', '2004', 'ACM Trans. Database Syst.', 'Materialized views can be maintained by submitting maintenance queries to the data sources. However, the query results may be erroneous due to concurrent source updates. State-of-the-art maintenance strategies typically apply compensations to resolve such conflicts and assume all source schemata remain stable over time. In a loosely coupled dynamic environment, the sources may autonomously change not only their data but also their schema or semantics. Consequently, either the maintenance or the compensation queries may be broken. Unlike compensation-based approaches found in the literature, we instead model the complete materialized view maintenance process as a view maintenance transaction (VM&lowbar;Transaction). This way, the anomaly problem can be rephrased as the serializability of VM&lowbar;Transactions. To achieve VM&lowbar;Transaction serializability, we propose a multiversion concurrency control algorithm, called TxnWrap, which is shown to be the appropriate design for loosely coupled environments with autonomous data sources. TxnWrap is complementary to the maintenance algorithms proposed in the literature, since it removes concurrency issues from consideration allowing the designer to focus on the maintenance logic. We show several optimizations of TxnWrap, in particular, (1) space optimizations on versioned data materialization and (2) parallel maintenance scheduling. With these optimizations, TxnWrap even outperforms state-of-the-art view maintenance solutions in terms of refresh time. Further, several design choices of TxnWrap are studied each having its respective advantages for certain environmental settings. A correctness proof based on transaction theory for TxnWrap is also provided. Last, we have implemented TxnWrap. The experimental results confirm that TxnWrap achieves predictable performance under a varying rate of concurrency.'),
	(1120951, 'Introduction to special issue on the use of context in multimedia information systems.', '2006', 'TOMCCAP', ''),
	(12651, 'On the Complexity of Domain-Independent Planning.', '1992', 'AAAI', ''),
	(15951, 'An AGM-Based Belief Revision Mechanism for Probabilistic Spatio-Temporal Logics.', '2008', 'AAAI', 'There is now extensive interest in reasoning about moving objects. A PST knowledge base is a set of PST-atoms which are statements of the form Object o is/was/will be at location L at time t with probability in the interval [L,U]. In this paper, we study mechanisms for belief revision in PST-KBs. We propose multiple methods for revising PST-KBs. These methods involve finding maximally consistent subsets, as well as changing the spatial, temporal, and probabilistic components of the atoms. We show that some methods cannot satisfy the AGM axioms for belief revision, while others do but are coNP-hard. Finally we present an algorithm for revision through probability change which runs in polynomial time and satisfies the AGM axioms.'),
	(95926, 'Smart Mediators and Intelligent Agents (Panel).', '1996', 'CIKM', ''),
	(189256, 'Merging Heterogeneous Security Orderings.', '1996', 'ESORICS', ''),
	(212629, 'Plan Databases: Model and Algebra.', '2004', 'FoIKS', ''),
	(300170, 'Distributed Video Presentations.', '1998', 'ICDE', ''),
	(329848, 'Towards a Theory of Collaborative Multimedia.', '1996', 'ICMCS', ''),
	(440418, 'Probabilistic Aggregates.', '2002', 'ISMIS', ''),
	(500664, 'Finite Graph Algebras for Querying Interactive Multimedia Presentation Databases.', '1999', 'Multimedia Information Systems', ''),
	(500712, 'Management and Rendering of Multimedia Views.', '1998', 'Multimedia Information Systems', ''),
	(501998, 'CHIMP: A Framework for Supporting Distributed Multimedia Document Authoring and Presentation.', '1996', 'ACM Multimedia', ''),
	(504505, 'The CPR model for summarizing video.', '2003', 'MMDB', 'Most past work on video summarization has been based on selecting key frames from videos. We propose a model of video summarization based on three important parameters: Priority (of frames), Continuity (of the summary), and non-Repetition (of the summary). In short, a summary must include high priority frames, must be continuous and non-repetitive. An optimal summary is one that maximizes an objective function based on these three parameters. We develop formal definitions of all these concepts and provide algorithms to find optimal summaries. We briefly report on the performance of these algorithms.'),
	(597963, 'A Multi-Similarity Algebra.', '1998', 'SIGMOD Conference', 'The need to automatically extract and classify the contents of multimedia data archives such as images, video, and text documents has led to significant work on similarity based retrieval of data. To date, most work in this area has focused on the creation of index structures for similarity based retrieval. There is very little work on developing formalisms for querying multimedia databases that support similarity based computations and optimizing such queries, even though it is well known that feature extraction and identification algorithms in media data are very expensive. We introduce a similarity algebra that brings together relational operators and results of multiple similarity implementations in a uniform language. The algebra can be used to specify complex queries that combine different interpretations of similarity values and multiple algorithms for computing these values. We prove equivalence and containment relationships between similarity algebra expressions and develop query rewriting methods based on these results. We then provide a generic cost model for evaluating cost of query plans in the similarity algebra and query optimization methods based on this model. We supplement the paper with experimental results that illustrate the use of the algebra and the effectiveness of query optimization methods using the Integrated Search Engine (I.SEE) as the testbed.'),
	(597965, 'Query Caching and Optimization in Distributed Mediator Systems.', '1996', 'SIGMOD Conference', 'Query processing and optimization in mediator systems that access distributed non-proprietary sources pose many novel problems. Cost-based query optimization is hard because the mediator does not have access to source statistics information and furthermore it may not be easy to model the source\'s performance. At the same time, querying remote sources may be very expensive because of high connection overhead, long computation time, financial charges, and temporary unavailability. We propose a cost-based optimization technique that caches statistics of actual calls to the sources and consequently estimates the cost of the possible execution plans based on the statistics cache. We investigate issues pertaining to the design of the statistics cache and experimentally analyze various tradeoffs. We also present a query result caching mechanism that allows us to effectively use results of prior queries when the source is not readily available. We employ the novel invariants mechanism, which shows how semantic information about data sources may be used to discover cached query results of interest.'),
	(597967, 'A Multimedia Presentation Algebra.', '1999', 'SIGMOD Conference', 'Over the last few years, there has been a tremendous increase in the number of interactive multimedia presentations prepared by different individuals and organizations. In this paper, we present an algebra for querying multimedia presentation databases. In contrast to the relational algebra, an algebra for interactive multimedia presentations must operate on trees whose branches reflect different possible playouts of a family of presentations. The query language supports selection type operations for locating objects and presentation paths that are of interest to the user, join type operations for combining presentations from multiple databases into a single presentation, and finally set theoretic operations for comparing different databases. The algebra operations can be used to locate presentations with specific properties and also for creating new presentations by borrowing different components from existing ones. We prove a host of equivalence results for queries in this algebra which may be used to build query optimizers for interactive presentation databases.'),
	(741905, 'The Optimistic and Cautius Semantics for Inconsistent Knowledge Bases.', '1995', 'Acta Cybern.', ''),
	(744782, 'Complexity, Decidability and Undecidability Results for Domain-Independent Planning.', '1995', 'Artif. Intell.', ''),
	(905980, 'Amalgamating Knowledge Bases, II: Distributed Mediators.', '1994', 'Int. J. Cooperative Inf. Syst.', ''),
	(939952, 'A Unified Treatment of Null Values Using Constraints.', '1997', 'Inf. Sci.', ''),
	(951472, 'Aggregate operators in probabilistic databases.', '2005', 'J. ACM', 'Though extensions to the relational data model have been proposed in order to handle probabilistic information, there has been very little work to date on handling aggregate operators in such databases. In this article, we present a very general notion of an aggregate operator and show how classical aggregation operators (such as COUNT, SUM, etc.) as well as statistical operators (such as percentiles, variance, etc.) are special cases of this general definition. We devise a formal linear programming based semantics for computing aggregates over probabilistic DBMSs, develop algorithms that satisfy this semantics, analyze their complexity, and introduce several families of approximation algorithms that run in polynomial time. We implemented all of these algorithms and tested them on a large set of data to help determine when each one is preferable.'),
	(970511, 'Merging Heterogeneous Security Orderings.', '1997', 'Journal of Computer Security', ''),
	(984186, 'Amalgamating Knowledge Bases, III: Algorithms, Data Structures, and Query Processing.', '1996', 'J. Log. Program.', ''),
	(1010999, 'The Advanced Video Information System: Data Structures and Query Processing.', '1996', 'Multimedia Syst.', ''),
	(1011001, 'An algebra for creating and querying multimedia presentations.', '2000', 'Multimedia Syst.', 'Over the last few years, there has been a tremendous increase in the number of interactive multimedia presentations prepared by different individuals and organizations. In this paper, we present an algebra for creating and querying interactive multimedia presentation databases. This algebra operates on trees whose branches reflect different possible playouts of a set of presentations. The algebra not only extends all the classical relational operators to such databases, but also introduces a variety of novel operators for combining multiple presentations. As our algebra supports merging parts or all of existing presentations, this algebra can also be used as an authoring tool for creating multimedia presentations. We prove a host of equivalence results for queries in this algebra, which may be used to build query optimizers for interactive presentation databases.'),
	(1011099, 'An Event-Based Model for Continous Media Data on Heterogeneous Disk Servers.', '1998', 'Multimedia Syst.', ''),
	(1011101, 'Retrieval Schedules Based on Resource Availability and Flexible Presentation Specifications.', '1998', 'Multimedia Syst.', ''),
	(1016740, 'The CPR Model for Summarizing Video.', '2005', 'Multimedia Tools Appl.', 'Most past work on video summarization has been based on selecting key frames from videos. We propose a model of video summarization based on three important parameters: Priority (of frames), Continuity (of the summary), and non-Repetition (of the summary). In short, a summary must include high priority frames and must be continuous and non-repetitive. An optimal summary is one that maximizes an objective function based on these three parameters. We show examples of how CPR parameters can be computed and provide algorithms to find optimal summaries based on the CPR approach. Finally, we briefly report on the performance of these algorithms.'),
	(1016851, 'Handling Updates and Crashes in VoD Systems.', '1998', 'Multimedia Tools Appl.', 'Though there have been several recent efforts to develop disk based video servers, these approaches have all ignored the topic of updates and disk server crashes. In this paper, we present a priority based model for building video servers that handle two classes of events: user events that could include enter, play, pause, rewind, fast-forward, exit, as well assystem events such as insert, delete, server-down,server-up that correspond to uploading new movie blocks onto the disk(s), eliminating existing blocks from the disk(s), and/or experiencing a disk server crash. We will present algorithms to handle such events. Our algorithms are provably correct, and computable in polynomial time. Furthermore, we guarantee that under certain reasonable conditions, continuing clients experience jitter free presentations. We further justify the efficiency of our techniques with a prototype implementation and experimental results.'),
	(1112509, 'Collaborative Multimedia Systems: Synthesis of Media Objects.', '1998', 'IEEE Trans. Knowl. Data Eng.', 'When a group {I1, ..., In} of individuals wishes to collaboratively construct a complex multimedia document, the first requirement is that they be able to manipulate media-objects created by one another. For instance, if individual Ij wishes to access some media objects present at participant Ik\'s site, he must be able to: 1) retrieve this object from across the network, 2) ensure that the object is in a form that is compatible with the viewing/editing resources he has available at his node, and 3) ensure that the object has the desired quality (such as image size and resolution). Furthermore, he must be able to achieve these goals at the lowest possible cost. In this paper, we develop a theory of media objects, and present optimal algorithms for collaborative object sharing/synthesis of the sort envisaged above. We then extend the algorithms to incorporate quality constraints (such as image size) as well as distribution across multiple nodes. The theoretical model is validated by an experimental implementation that supports the theoretical results.'),
	(1112818, 'Reasoning in Inconsistent Knowledge Bases.', '1995', 'IEEE Trans. Knowl. Data Eng.', 'Databases and knowledge bases could be inconsistent in many ways. For example, during the construction of an expert system, we may consult many different experts. Each expert may provide us with a group of rules and facts which are self-consistent. However, when we coalesce the facts and rules provided by these different experts, inconsistency may arise. Alternatively, knowledge bases may be inconsistent due to the presence of some erroneous information. Thus, a framework for reasoning about knowledge bases that contain inconsistent information is necessary. Such a framework was described in [1], [21]. However, existing frameworks for reasoning with inconsistency do not support reasoning by cases and reasoning with the law of excluded middle (everything is either true or false). In this paper, we show how reasoning with cases, and reasoning with the law of excluded middle may be captured. We develop a declarative and operational semantics for knowledge bases that are possibly inconsistent. We compare and contrast our work with work on explicit and non-monotonic modes of negation in logic programs and suggest under what circumstances one framework may be preferred over another.'),
	(1112931, 'Presentation Planning for Distributed VoD Systems.', '2002', 'IEEE Trans. Knowl. Data Eng.', 'A distributed video-on-demand (VoD) system is one where a collection of video data is located at dispersed sites across a computer network. In a single site environment, a local video server retrieves video data from its local storage device. However, in distributed VoD systems, when a customer requests a movie from the local server, the server may need to interact with other servers located across the network. In this paper, we present different types of presentation plans that a local server can construct in order to satisfy a customer request. Informally speaking, a presentation plan is a temporally synchronized sequence of steps that the local server must perform in order to present the requested movie to the customer. This involves obtaining commitments from other video servers, obtaining commitments from the network service provider, as well as making commitments of local resources, while keeping within the limitations of available bandwidth, available buffer, and customer data consumption rates. Furthermore, in order to evaluate the quality of a presentation plan, we introduce two measures of optimality for presentation plans: minimizing wait time for a customer and minimizing access bandwidth which, informally speaking, specifies how much network/disk bandwidth is used. We develop algorithms to compute three different optimal presentation plans that work at a block level, or at a segment level, or with a hybrid mix of the two, and compare their performance through simulation experiments. We have also mathematically proven effects of increased buffer or bandwidth and data replications for presentation plans which had previously been verified experimentally in the literature.'),
	(1113938, 'A Logical Formulation of Probabilistic Spatial Databases.', '2007', 'IEEE Trans. Knowl. Data Eng.', 'There are numerous applications where there isuncertainty over space and time. Examples of such uncertaintyarise in vehicle tracking systems where we are not always surewhere a vehicle is now (or may be in the future), cell and satellitephone applications where we are not sure exactly where a phonemay be, and so on. In this paper, we propose the concept of aSpatial PrObabilistic Temporal (SPOT ) database which containsstatements of the form Object O is in spatial region R at sometime t with some probability in the interval [L, U]. We definethe syntax and a declarative semantics for SPOT databasesbased on a mix of logic and linear programming, as well asquery algebra. We show alternative implementations of some ofthese query algebra operators when the SPOT database has adisjointness property. Though the declarative semantics of SPOTdatabases is rooted in linear programming, we have found veryefficient algorithms that do not use linear programming methods.We report on experiments we have conducted that show that thesystem scales to large numbers of SPOT atoms as well as tofairly fine temporal and spatial granularity.'),
	(1114115, 'SPOT Databases: Efficient Consistency Checking and Optimistic Selection in Probabilistic Spatial Databases.', '2009', 'IEEE Trans. Knowl. Data Eng.', 'Spatial PrObabilistic Temporal (SPOT) databases are a paradigm for reasoning with probabilistic statements about where objects are now or in the future. They express statements of the form Object O is in spatial region R at time t with some probability in the interval [L,U]. Past work on SPOT databases uses selection operators returning SPOT atoms entailed by the SPOT database - we call this cautious selection. In this paper, we study several problems. First, we introduce the notion of optimistic selection queries that return sets of SPOT atoms consistent with, rather than entailed by, the SPOT database. We then develop an approach to scaling SPOT databases that has three main contributions: (i) We substantially reduce the size of past work\'s linear programs via variable elimination. (ii) We rigorously prove how one can prune the space searched in optimistic selection. (iii) We build an efficient index to execute optimistic selection queries over SPOT databases. Our approach is superior to past work in two major respects: first, it makes fewer assumptions than all past works on this topic except [30]. Second, the experiments - some using real world ship movement data - show substantially better performance than achieved in [30].'),
	(1137958, 'View Management in Multimedia Databases.', '2000', 'VLDB J.', 'Though there has been extensive work on multimedia databases in the last few years, there is no prevailing notion of a multimedia view, nor there are techniques to create, manage, and maintain such views. Visualizing the results of a dynamic multimedia query or materializing a dynamic multimedia view corresponds to assembling and delivering an interactive multimedia presentation in accordance with the visualization specifications. In this paper, we suggest that a non-interactive multimedia presentation is a set of virtual objects with associated spatial and temporal presentation constraints. A virtual object is either an object, or the result of a query. As queries may have different answers at different points in time, scheduling the presentation of such objects is nontrivial. We then develop a probabilistic model of interactive multimedia presentations, extending the non-interactive model described earlier. We also develop a probabilistic model of interactive visualization where the probabilities reflect the user profiles, or the likelihood of certain user interactions. Based on this probabilistic model, we develop three utility-theoretic based types of prefetching algorithms that anticipate how users will interact with the presentation. These prefetching algorithms allow efficient visualization of the query results in accordance with the underlying specification. We have built a prototype system that incorporates these algorithms. We report on the results of experiments conducted on top of this implementation.'),
	(1256392, 'Fast and Accurate Prediction of the Destination of Moving Objects.', '2009', 'SUM', 'Companies and organizations that track moving objects are interested in predicting the intended destination of these moving objects. We develop a formal model for destination prediction problems where the agent (Predictor) predicting a destination may not know anything about the route planning mechanism used by another agent (Target) nor does the agent have historical information about the target\'s past movements nor do the observations about the agent have to be complete (there may be gaps when the target was not seen). We develop axioms that any destination probability function should satisfy and then provide a broad family of such functions guaranteed to satisfy the axioms. We experimentally compare our work with an existing method for destination prediction using Hidden Semi-Markov Models (HSMMs). We found our algorithms to be faster than the existing method. Considering prediction accuracy we found that, when the Predictor knows the route planning algorithm the target is using, the HSMM method is better, but without this assumption our algorithm is better.'),
	(1530955, 'Using Generalized Annotated Programs to Solve Social Network Optimization Problems.', '2010', 'ICLP (Technical Communications)', ''),
	(1582723, 'An AGM-style belief revision mechanism for probabilistic spatio-temporal logics.', '2010', 'Artif. Intell.', 'There is now extensive interest in reasoning about moving objects. A probabilistic spatio-temporal (PST) knowledge base (KB) contains atomic statements of the form \'\'Object o is/was/will be in region r at time t with probability in the interval [@?,u]\'\'. In this paper, we study mechanisms for belief revision in PST KBs. We propose multiple methods for revising PST KBs. These methods involve finding maximally consistent subsets and maximal cardinality consistent subsets. In addition, there may be applications where the user has doubts about the accuracy of the spatial information, or the temporal aspects, or about the ability to recognize objects in such statements. We study belief revision mechanisms that allow changes to the KB in each of these three components. Finally, there may be doubts about the assignment of probabilities in the KB. Allowing changes to the probability of statements in the KB yields another belief revision mechanism. Each of these belief revision methods may be epistemically desirable for some applications, but not for others. We show that some of these approaches cannot satisfy AGM-style axioms for belief revision under certain conditions. We also perform a detailed complexity analysis of each of these approaches. Simply put, all belief revision methods proposed that satisfy AGM-style axioms turn out to be intractable with the exception of the method that revises beliefs by changing the probabilities (minimally) in the KB. We also propose two hybrids of these basic approaches to revision and analyze the complexity of these hybrid methods.'),
	(16253, 'Extracting Relevant Snippets for Web Navigation.', '2008', 'AAAI', 'Search engines present fix-length passages from documents ranked by relevance against the query. In this paper, we present and compare novel, language-model based methods for extracting variable length document snippets by real-time processing of documents using the query issued by the user. With this extra level of information, the returned snippets are considerably more informative. Unlike previous work on passage retrieval which relies on searching relevant segments for filtering of preoccupied passages, we focus on query-informed segmentation to extract context-aware relevant snippets with variable length. In particular, we show that, when informed through an appropriate relevance language model, curvature analysis and Hidden Markov model (HMM) based content segmentation techniques can facilitate to extract relevant document snippets.'),
	(68454, 'Introduction to the First Workshop on Collaborative Business Processes (CBP 2007).', '2007', 'Business Process Management Workshops', ''),
	(74115, 'A Logical Framework for Exception Handling in ADOME Workflow Management System.', '2000', 'CAiSE', ''),
	(86364, 'Web-Based Image Retrieval: A Hybrid Approach.', '2001', 'Computer Graphics International', 'Abstract: In recent years, image retrieval has received tremendous attentions and some progresses have been made. However, most existing work on image retrieval focuses on specific issues and techniques local to image computing or access. Little work has been done to combine various aspects into a single framework. In this paper, we describe our approach of developing a general-purpose image retrieval system over the web. A main feature of our system is its hybrid approach by integrating both semantic and visual feature retrieval methods. By combining keyword-based query selection with content-based retrieval techniques, the system is able to provide effective image searching and retrieval. The results are further improved through a relevance feedback process. A research prototype system has been constructed on a web environment, and experimental results demonstrate the effectiveness of the new approach.'),
	(96141, 'Towards interactive indexing for large Chinese calligraphic character databases.', '2006', 'CIKM', 'In this paper, based on a novel shape-similarity-based retrieval method, we propose an interactive partial-distance-map (PDM)- based high-dimensional indexing scheme to speed up the retrieval performance of the large Chinese calligraphic character databases. Specifically, we use the approximate minimal bounding hyper- sphere of query character to search the PDM and utilize the users\' relevance feedback to refine the search process. We conduct comprehensive experiments to testify the efficiency and effectiveness of the proposed method.'),
	(111907, 'E-ADOME: Enacting Composite E-services in an Advanced Workflow Environment.', '2001', 'COMPSAC', 'E-services refer to services provided via the Internet. To provide value-added and composite e-services, we need an information system that can coordinate API-based, interactive web-based and human agents, internal and external to an organization. In this paper, we present an environment to model and enact composite e-services as workflows, by extending our ADOME-WFMS (Advanced Object Modeling Environment - Workflow Management System) to E-ADOME, which supports composing new E-services and effective management of agents for enacting E-service.'),
	(115789, 'Poster on Exception Handling in ADOME Workflow Management System.', '1997', 'CoopIS', ''),
	(140534, 'Facilitating Workflow Evolution in an Advanced Object Environment.', '2001', 'DASFAA', ''),
	(140865, 'Distance Courseware Discrimination Based on Representative Sentence Assaying.', '2001', 'DASFAA', ''),
	(141232, 'A Unified Indexing Structure for Efficient Cross-Media Retrieval.', '2009', 'DASFAA', 'An important trend in web information processing is the support of content-based multimedia retrieval (CBMR). However, the most prevailing paradigm of CBMR, such as content-based image retrieval, content-based audio retrieval, etc, is rather conservative. It can only retrieve media objects of single modality. With the rapid development of Internet, there is a great deal of media objects of different modalities in the multimedia documents such as webpages, which exhibit latent semantic correlation. Cross-media retrieval, as a new multi-media retrieval method, is to retrieve all the related media objects with multi-modalities via submitting a query media object. To the best of our knowledge, this is the first study on how to speed up the cross-media retrieval via indexes. In this paper, based on a Cross-Reference-Graph(CRG)-based similarity retrieval method, we propose a novel unified high-dimensional indexing scheme called CIndex, which is specifically designed to effectively speedup the retrieval performance of the large cross-media databases. In addition, we have conducted comprehensive experiments to testify the effectiveness and efficiency of our proposed method.'),
	(160603, 'Views for Inter-organization Workflow in an E-commerce Environment.', '2001', 'DS-9', ''),
	(174213, 'ADOME-WFMS: Towards Cooperative Handling of Workflow Exceptions.', '2000', 'Advances in Exception Handling Techniques', 'Exception handling in workflow management systems (WFMSs) is a very important problem since it is not possible to specify all possible outcomes and alternatives. Effective reuse of existing exception handlers can greatly help in dealing with workflow exceptions. On the other hand, cooperative support for user-driven resolution of unexpected exceptions and workflow evolution at run-time is vital for an adaptive WFMS. We have developed ADOME-WFMS via a meta-modeling approach as a comprehensive framework in which the problem of workflow exception handling can be adequately addressed. In this chapter, we present an overview of exception handling in ADOME-WFMS with procedures for supporting the following: reuse of exception handlers, thorough and automated resolution of expected exceptions, effective management of Problem Solving Agents, cooperative exception handling, user-driven computer supported resolution of unexpected exceptions, and workflow evolution.'),
	(176713, 'Indexing high-dimensional data in dual distance spaces: a symmetrical encoding approach.', '2008', 'EDBT', 'Due to the well-known dimensionality curse problem, search in a high-dimensional space is considered as a hard problem. In this paper, a novel symmetrical encoding-based index structure, which is called EHD-Tree (for symmetrical Encoding-based Hybrid Distance Tree), is proposed to support fast k-Nearest-Neighbor (k-NN) search in high-dimensional spaces. In an EHD-Tree, all data points are first grouped into clusters by a k-Means clustering algorithm. Then the uniform ID number of each data point is obtained by a dual-distance-driven encoding scheme in which each cluster sphere is partitioned twice according to the dual distances of start- and centroid-distance. Finally, the uniform ID number and the centroid-distance of each data point are combined to get a uniform index key, the latter is then indexed through a partition-based B+-tree. Thus, given a query point, its k-NN search in high-dimensional spaces can be transformed into search in a single dimensional space with the aid of the EHD-Tree index. Extensive performance studies are conducted to evaluate the effectiveness and efficiency of our proposed scheme, and the results demonstrate that this method outperforms the state-of-the-art high dimensional search techniques such as the X-Tree, VA-file, iDistance and NB-Tree, especially when the query radius is not very large.'),
	(224503, 'Speeding Up Similarity Queries over Large Chinese Calligraphic Character Databases Using Data Grid.', '2007', 'GCC', 'This paper proposes a novel data-grid-based k nearest neighbor query over large Chinese calligraphic character databases, which can significantly speed up the retrieval efficiency. Three steps are made. Firstly, when a user submits a query request to a query node, a process of character set reduction is performed using iDistance index in different data nodes, followed by sending the candidate characters to the executing nodes through a package-based transfer technique. Secondly, a refinement process of the candidate characters is conducted in the executing nodes in parallel to get the answer set. Finally, the answer set is transferred to the query node. The proposed method incorporates a uniform-startdistance- based character data allocation policy and character reduction algorithm. The analysis and experimental results show that the performance of the algorithm is effective in minimizing the response time by decreasing network transfer cost and increasing the parallelism of I/O and CPU.'),
	(246170, 'VideoMAP: A Generic Framework for Video Management and Application Processing.', '2000', 'HICSS', 'To support video applications efficiently, video objects must be modeled and structured in secondary storage effectively, allowing flexible, easy, and efficient retrieval as well as support for dynamic video application development. In this paper, we describe a video management framework called VideoMAP (which stands for Video Management and Application Processing). The VideoMAP framework provides three components: the Segmentation and Clustering Component (SCC), the Semantic Modeling Component (SMC), and the Query Processing Component (QPC). SCC structures video objects through video partitioning, keyframe selection and segment clustering. SMC organizes video segments/clusters into semantically meaningful hierarchies with annotated feature indices. QPC provides flexible query specification and processing, and supports for external video application development. The framework employs a layered architecture, providing a flexibility and extensibility for each component to incorporate different schemes for different kinds of video objects. A prototype of VideoMAP is currently being constructed using an object-oriented database toolkit on the PC platform.'),
	(247977, 'Systematic Interaction Management in a Workflow View Based Business-to-Business Process Engine.', '2005', 'HICSS', 'Workflow technology has recently been employed as a framework for implementing business-to-business (B2B) process enactment over the Internet. This typically requires collaborative enactment of workflows across multiple organizations. In this paper, we propose the use of workflow views as a fundamental support mechanism for B2B interactions. A workflow view is an external accessible subset of a private workflow. We present a methodology to show how B2B interactions can be systematically managed with the workflow view mechanism, by customizable orchestration of Web services mapping into internal existing workflows. We further present a deployment architecture for a B2B process engine and detail our implementation with contemporary Web services technologies. In addition, asynchronous events and exceptions as well as interaction monitoring can be facilitated in a unified framework.'),
	(257237, 'SMIL-Based eLearning Wrapper for Incorporating Computer Games on Personalized Multimedia Course Materials.', '2005', 'Human.Society@Internet', ''),
	(298253, 'Multi-query Optimization for Distributed Similarity Query Processing.', '2008', 'ICDCS', 'This paper considers a multi-query optimization issue for distributed similarity query processing, which attempts to exploit the dependencies in the derivation of a query evaluation plan. To the best of our knowledge, this is the first work investigating a multi- query optimization technique for distributed similarity query processing (MDSQ). Four steps are incorporated in our MDSQ algorithm. First when a number of query requests(i.e., m query vectors and m radiuses) are simultaneously submitted by users, then a cost-based dynamic query scheduling(DQS) procedure is invoked to quickly and effectively identify the correlation among the query spheres (requests). After that, an index-based vector set reduction is performed at data node level in parallel. Finally, a refinement process of the candidate vectors is conducted to get the answer set. The proposed method includes a cost-based dynamic query scheduling, a Start-Distance(SD)-based load balancing scheme, and an index-based vector set reduction algorithm. The experimental results validate the efficiency and effectiveness of the algorithm in minimizing the response time and increasing the parallelism of I/O and CPU.'),
	(361013, 'Discovering Tendency Association between Objects with Relaxed Periodicity and its Application in Seismology.', '1999', 'ICSC', ''),
	(369719, 'Supporting Practices in Web-Based Learning.', '2002', 'ICWL', ''),
	(500287, 'Supporting Video Applications Through 4DIS Temporal Framework.', '1998', 'Multimedia Information Analysis and Retrieval', ''),
	(568499, 'Modeling video objects in 4DIS temporal database system.', '1998', 'SAC', ''),
	(627795, 'E-Adome: A framework for enacting e-services.', '2000', 'TES', ''),
	(627796, 'Designing Workflow Views with Flows for Large-Scale Business-to-Business Information Systems.', '2004', 'TES', ''),
	(651795, 'Web-Based Workflow Evolution in ADOME-WFMS.', '2001', 'WAIM', ''),
	(655470, 'Extracting Relevant Snippets fromWeb Documents through Language Model based Text Segmentation.', '2007', 'Web Intelligence', 'Extracting a query-oriented snippet (or passage) and highlighting the relevant information in long document can help reduce the result navigation cost of end users. While the traditional approach of highlighting matching keywords helps when the search is keyword oriented, finding appropriate snippets to represent matches to more complex queries requires novel techniques that can help characterize the relevance of various parts of a document to the given query, succinctly. In this paper, we present a languagemodel based method for accurately detecting the most relevant passages of a given document. Unlike previous works in passage retrieval which focus on searching relevance nodes for filtering of preoccupied passages, we focus on query-informed segmentation for snippet extraction. The algorithms presented in this paper are currently being deployed in OASIS, a system to help reduce the navigational load of blind users in accessing Web-based digital libraries.'),
	(659164, 'Enhancing Web Services Conversation with Exception Contexts for Handling Exceptions of Composite Services.', '2007', 'CEC/EEE', ''),
	(659437, 'Workflow View Driven Cross-Organizational Interoperability in a Web-Service Environment.', '2002', 'WES', ''),
	(663479, 'Web Interface-Driven Cooperative Exeption Handling in ADOME Workflow Management System.', '2000', 'WISE', ''),
	(663920, 'Personalized Courseware Construction based on Web Data Mining.', '2000', 'WISE (2)', ''),
	(708878, 'Flows and views for scalable scientific process integration.', '2006', 'Infoscale', 'Workflow technology has recently been employed in scientific applications because of their ever-increasing complexities across multiple organizations, institutes, research labs, or units over the Internet and Intranet. In this paper, we propose a methodology for the decomposition of complex scientific process requirements into different types of elementary flows such as control, data, exception, semantics, and security. Based on that, we can determine the subset of each type of flows (i.e., flow views) necessary and the related requirements for the interactions with each type of collaboration partners in the process integration. These subsets collectively constitute a process view, based on which interactions can be systematically designed, integrated and managed in a scalable way. We show with a case study in a scientific research environment to demonstrate our approach. We further illustrate how these flows can be implemented with various contemporary Web services technologies.'),
	(856062, 'Workflow View Based E-Contracts in a Cross-Organizational E-Services Environment.', '2002', 'Distributed and Parallel Databases', 'In an e-service environment, workflow involves not only a single organization but also a number of business partners. Therefore, workflow inter-operability in such an environment is an important issue for enacting workflows. In this article, we introduce our approach of using workflow views as a fundamental support for E-service workflow inter-operability and for controlled visibility of (sub-)workflows by external parties. We discuss various aspects of a workflow view, and their semantics with example usage. Furthermore, we develop a contract model based on workflow views and demonstrate how management of e-contracts can be facilitated, with an Internet start-up E-service inter-organization workflow example.'),
	(938356, 'Web Interface-Driven Cooperative Exception Handling in Adome Workflow Management System.', '2001', 'Inf. Syst.', ''),
	(938357, 'A Meta Modeling Approach to Workflow Management Systems Supporting Exception Handling.', '1999', 'Inf. Syst.', ''),
	(1077465, 'Interactive high-dimensional index for large Chinese calligraphic character databases.', '2007', 'ACM Trans. Asian Lang. Inf. Process.', 'The large numbers of Chinese calligraphic scripts in existence are valuable part of the Chinese cultural heritage. However, due to the shape complexity of these characters, it is hard to employ existing techniques to effectively retrieve and efficiently index them. In this article, using a novel shape-similarity- based retrieval method in which shapes of calligraphic characters are represented by their contour points extracted from the character images, we propose an interactive partial-distance-map(PDM)- based high-dimensional indexing scheme which is designed specifically to speed up the retrieval performance of the large Chinese calligraphic character databases effectively. Specifically, we use the approximate minimal bounding sphere of a query character and utilize users\' relevance feedback to refine the query gradually. Comprehensive experiments are conducted to testify the efficiency and effectiveness of this method. In addition, a new k-NN search called Pseudo k-NN (Pk-NN) search is presented to better facilitate the PDM-based character retrieval.'),
	(1120459, 'SEA: Segment-enrich-annotate paradigm for adapting dialog-based content for improved accessibility.', '2009', 'ACM Trans. Inf. Syst.', 'While navigation within complex information spaces is a problem for all users, the problem is most evident with individuals who are blind who cannot simply locate, point, and click on a link in hypertext documents with a mouse. Users who are blind have to listen searching for the link in the document using only the keyboard and a screen reader program, which may be particularly inefficient in large documents with many links or deep hierarchies that are hard to navigate. Consequently, they are especially penalized when the information being searched is hidden under multiple layers of indirections. In this article, we introduce a segment-enrich-annotate (SEA) paradigm for adapting digital content with deep structures for improved accessibility. In particular, we instantiate and evaluate this paradigm through the iCare-Assistant, an assistive system for helping students who are blind in accessing Web and electronic course materials. Our evaluations, involving the participation of students who are blind, showed that the iCare-Assistant system, built based on the SEA paradigm, reduces the navigational overhead significantly and enables user who are blind access complex online course servers effectively.'),
	(1120546, 'Technology supports for distributed and collaborative learning over the internet.', '2008', 'ACM Trans. Internet Techn.', 'With the advent of Internet and World Wide Web (WWW) technologies, distance education (e-learning or Web-based learning) has enabled a new era of education. There are a number of issues that have significant impact on distance education, including those from educational, sociological, and psychological perspectives. Rather than attempting to cover exhaustively all the related perspectives, in this survey article, we focus on the technological issues. A number of technology issues are discussed, including distributed learning, collaborative learning, distributed content management, mobile and situated learning, and multimodal interaction and augmented devices for e-learning. Although we have tried to include the state-of-the-art technologies and systems here, it is anticipated that many new ones will emerge in the near future. As such, we point out several emerging issues and technologies that we believe are promising, for the purpose of highlighting important directions for future research.'),
	(1120554, 'Introduction to special issue internet technologies for distance education.', '2008', 'ACM Trans. Internet Techn.', ''),
	(1250266, 'ACM 2009 workshop on ambient media computing (AMC\'09) overview.', '2009', 'ACM Multimedia', ''),
	(1273164, 'Guest Editors\' Introduction: Emerging Internet Technologies for E-Learning.', '2009', 'IEEE Internet Computing', 'As a flourishing field, e-learning at large (including distance learning, Web-based learning, and digital game-based learning) has attracted increasing attention from both industry and academic sectors. To facilitate the development of effective e-learning systems, scalable technologies that support an arbitrary number of users while providing them with a good learning environment are needed. In this introduction, we provide an overview of e-learning system development with respect to a layered reference architecture, including the Internet infrastructure layer, the conceptual/modeling layer, and the application layer. In addition, the three articles included in this special issue cover the issues of managing the learning objects in an open and scalable architecture, incorporation of learners\' pedagogical features in Web-based learning environments, and support of digital game-based learning. All these issues, though not exhaustive, are important to ensure successful development of e-learning systems on an Internet platform.'),
	(1279090, 'Guest Editors\' Introduction: Knowledge and Data Engineering for E-Learning.', '2009', 'IEEE Trans. Knowl. Data Eng.', ''),
	(1335016, 'Challenges and opportunities in collaborative business process management: Overview of recent advances and introduction to the special issue.', '2009', 'Information Systems Frontiers', 'Modern business process management expands to cover the partner organisations\' business processes across organisational boundaries, and thereby supports organisations to coordinate the flow of information among organisations and link their business processes. With collaborative business processes, organisations can create dynamic and flexible collaborations to synergically adapt to the changing conditions, and stay competitive in the global market. Due to its significant potential and value, collaborative business processes are now turning to be an important issue of contemporary business process management, and attracts lots of attention and efforts from both academic and industry sides. In this paper, we review the development of B2B collaboration and collaborative business processes, provide an overview of related issues in managing collaborative business processes, and discuss some emerging technologies and their relationships to collaborative business processes. Finally, we introduce the papers that are published in this special issue.'),
	(1534426, 'Advances in Web-Based Learning - ICWL 2005, 4th International Conference, Hong Kong, China, July 31 - August 3, 2005, Proceedings', '2005', 'ICWL', ''),
	(1534427, 'Advances in Web Based Learning - ICWL 2006, 5th International Conference, Penang, Malaysia, July 19-21, 2006. Revised Papers', '2006', 'ICWL', ''),
	(1534428, 'Advances in Web Based Learning - ICWL 2007, 6th International Conference, Edinburgh, UK, August 15-17, 2007, Revised Papers', '2008', 'ICWL', ''),
	(1534429, 'Advances in Web Based Learning - ICWL 2008, 7th International Conference, Jinhua, China, August 20-22, 2008. Proceedings', '2008', 'ICWL', ''),
	(1534430, 'Advances in Web Based Learning - ICWL 2009, 8th International Conference, Aachen, Germany, August 19-21, 2009. Proceedings', '2009', 'ICWL', ''),
	(3028, 'Multimedia Athoring Systems.', '1996', 'Multimedia Database System: Issues and Research Direction', ''),
	(27194, 'WebDB: A Web Query System and Its Modeling, Language, and Implementation.', '1998', 'ADL', 'The World-Wide Web can be viewed as a collection of multimedia documents in the form of Web pages connected through hyperlinks.Unlike most Web search engines, which primarily focus on information retrieval functionality, WebDB aims atsupporting more comprehensive database-like query functionality, including selection, aggregation, sorting, summary, grouping, and projection on:(1) document level information, such as title, URL, length, keywords, types, and last modified date; (2) intra-document structures, such as tables, forms, and images, and (3) inter-document linkage information, such as destination URLs and anchors. With these three types of information, more comprehensive queries can be answered for complex Web-based applications, such as Web mining and Web site management. For example, results of the query list all Web pages which link to the NEC Web sites containing a form and a keyword multimedia within link depth of 3 and group these Web pages by country can be used for market research on NEC\'s multimedia-related products.WebDB is based on object-relational concepts. This paper presents its modeling, language, and implementation detail. A novel visual query/browsing interface of WebDB, WebIFQ, is presented for demonstrating high usability of this system.'),
	(42981, 'Replicating Multi-quality Web Applications Using ACO and Bipartite Graphs.', '2006', 'ANTS Workshop', ''),
	(89205, 'IFQ: A Visual Query Interface for Object-based Image Retrieval.', '1997', 'CHI Extended Abstracts', 'There are two major directions for image retrieval interface development. One direction is manipulation through query languages, which is more precise to computers but not user friendly since users need to know database schema and query languages. Another disadvantage is that query languages do not visualize queries so that users can match the query representation with their mental models. Approaches include keyword-based interfaces and SQL-like query languages.'),
	(96253, 'CP/CV: concept similarity mining without frequency information from domain describing taxonomies.', '2006', 'CIKM', 'Domain specific ontologies are heavily used in many applications. For instance, these form the bases on which similarity/dissimilarity between keywords are extracted for various knowledge discovery and retrieval tasks. Existing similarity computation schemes can be categorized as (a) structure- or (b) information-based approaches. Structure based approaches compute dissimilarity between keywords using a (weighted) count of edges between two keywords. Information-base approaches, on the other hand, leverage available corpora to extract additional information, such as keyword frequency, to achieve better performance in similarity computation than structure-based approaches. Unfortunately, in many application domains (such as applications that rely on unique-keys in a relational database), frequency information required by information-based approaches does not exist. In this paper, we note that there is a third way of computing similarity: if each node in a given hierarchy can be represented as a vector of related concepts, these vectors could be compared to compute similarities. This requires mapping concept-nodes in a given hierarchy onto a concept space. In this paper, we propose a concept propagation (CP) scheme, which relies on the semantical relationships between concepts implied by the structure of the hierarchy to annotate each concept-node with a concept-vector (CV). We refer to this approach as CP/CV. Comparison of keyword similarity results shows that CP/CV provides significantly better (upto 33%) results than existing structure-based schemes. Also, even if CP/CV does not assume the availability of an appropriate corpus to extract keyword frequency information, our approach matches (and slightly improves on) the performance of information-based approaches.'),
	(96613, 'Table summarization with the help of domain lattices.', '2008', 'CIKM', 'Table summarization is necessary in various scenarios where it is hard to display a large table. It can benefit from knowledge about acceptable value clustering alternatives. In this paper, we formulate the problem of table summarization with the help of domain knowledge lattices. We provide the outline of a fuzzy mechanism to express alternative clustering strategies. We further sketch a novel ranked set cover based evaluation mechanism (RSC) to tackle with the inherent complexity.'),
	(96684, 'Creating tag hierarchies for effective navigation in social media.', '2008', 'SSM', 'In social media, such as blogs, since the content naturally evolves over time, it is hard or in many cases impossible to organize the content for effective navigation. Thus, one commonly has to resort to simple tools, such as tags and tag clouds, for presenting frequently used keywords to users to provide them at least some high level idea about the content of a given set of social media entries. Most visualizations of tag clouds vary the sizes of the fonts to differentiate important tags from those that are less important. We propose an alternative contextual-layout method, TMine, for analyzing and presenting tags that are extracted from textual content. In TMine tags are first mapped onto a latent semantic space. Then, TMine analyzes the relationships between tags relying on an extended boolean interpretation of the semantic space. The tag cloud is condensed into a hierarchy in a way that captures contextual relationships between tags: in particular, descendant terms in the hierarchy occur within the context defined by the ancestor terms. This provides a mechanism for navigation within the tag space as well as for classification of the text documents based on the contextual structure implied by the tags.'),
	(96708, 'Propagation-vectors for trees (PVT): concise yet effective summaries for hierarchical data and trees.', '2008', 'LSDS-IR', 'Summarization of hierarchical data and metadata is a fundamental operation in applications in many domains. In particular, similarity search of hierarchical data, such as XML, would benefit greatly from concise and indexable summaries. This is especially true in P2P scenarios, where the search needs to be done in a distributed fashion on multiple peers. This situation requires summaries which are small, yet effective in identifying potential peers that need to be further explored. In this paper, we propose a method, called propagation-vectors for trees (PVT) which constructs very concise and accurate summaries of hierarchical data, such as XML trees. We then show how to use this summary to perform similarity search on summarized data. The proposed summarization scheme relies on a label-propagation mechanism, which constructs an n-dimensional vector from a given tree with n unique data labels. Experimental results have shown that the constructed PVT summaries capture the structure of the input trees very accurately, the representations are highly concise, and that the search based on these summaries are faster than the existing approaches.'),
	(98402, 'Modular Design of Media Retrieval Workflows Using ARIA.', '2006', 'CIVR', ''),
	(98916, 'QUEST: QUery-driven Exploration of Semistructured Data with ConflicTs and Partial Knowledge.', '2006', 'CleanDB', ''),
	(144236, 'Discovering Web Document Associations for Web Site Summarization.', '2001', 'DaWaK', ''),
	(176777, 'AlphaSum: size-constrained table summarization using value lattices.', '2009', 'EDBT', 'Consider a scientist who wants to explore multiple data sets to select the relevant ones for further analysis. Since the visualization real estate may put a stringent constraint on how much detail can be presented to this user in a single page, effective table summarization techniques are needed to create summaries that are both sufficiently small and effective in communicating the available content. In this paper, we first argue that table summarization can benefit from knowledge about acceptable value clustering alternatives for clustering the values in the database. We formulate the problem of table summarization with the help of value lattices. We then provide a framework to express alternative clustering strategies and to account for various utility measures (such as information loss) in assessing different summarization alternatives. Based on this interpretation, we introduce three preference criteria, max-min-util (cautious), max-sum-util (cumulative), and pareto-util, for the problem of table summarization. To tackle with the inherent complexity, we rely on the properties of the fuzzy interpretation to further develop a novel ranked set cover based evaluation mechanism (RSC). These are brought together in an AlphaSum, table summarization system. Experimental evaluations showed that RSC improves both execution times and the summary qualities in AlphaSum, by pruning the search space more effectively than the existing solutions.'),
	(256190, 'CUTS: rvature-based development pattern analysis and segmentation for blogs and other ext treams.', '2006', 'Hypertext', 'Weblogs (blogs) are becoming prominent forms of information exchange in the Internet. A large number and variety of blogs, like personal journals or commentaries, are available for general consumption. However, effective indexes and navigation structures (like the table of content in a book) are not available for blogs. Therefore, it is generally not possible to navigate among entries in a given collection of blog entries in an informed manner. This paper focuses on the segmentation of entries in filter-type [9] blogs, with the aim of using this information for developing hypertext and navigational helps. In particular, we are interested in the analysis of topic development patterns that can provide information about not only the entries themselves, but how these entries develop and relate to each other. The proposed algorithm, CUTS, maps entries into a curve in a way that makes apparent a variety of topic development patterns. We then use curve analysis for automatic segmentation of topics. The resulting base topic segments are classified into different topic development patterns that can be visualized and indexed. Experimental results show that the proposed technique has very good performance in identifying boundaries in text streams, especially filter style blogs, versus existing schemes. Furthermore, compared with other topic segmentation methods, the proposed mechanism highlights not only topic boundaries, but also topic development patterns.'),
	(297941, 'GMP: Distributed Geographic Multicast Routing in Wireless Sensor Networks.', '2006', 'ICDCS', 'In this paper, we propose a novel Geographic Multicast routing Protocol (GMP) for wireless sensor networks1. The proposed protocol is fully distributed and stateless. Given a set of the destinations, the transmitting node first constructs a virtual Euclidean Steiner tree rooted at itself and including the destinations, using a novel and highly efficient reduction ratio heuristic (called rrSTR). Based on this locally computed tree and the information regarding the locations of its immediate neighbors, the transmitting node then splits the destinations into a set of groups and calculates a next hop for each of these groups. A copy of the packet and the locations of the corresponding group of destination nodes are directed towards the corresponding hop. The simulation results on NS2 show that the average per-destination hop count obtained using GMP is comparable to the existing PBM [21] algorithm and significantly less than obtained by using LGS [5]. Most significantly, GMP requires 25% less hops and energy than alternative algorithms.'),
	(300291, 'SEMCOG: A Hybrid Object-based Image Database System and Its Modeling, Language, and Query Processing.', '1998', 'ICDE', ''),
	(300490, 'Load and Network Aware Query Routing for Information Integration.', '2005', 'ICDE', 'Current federated systems deploy cost-based query optimization mechanisms; i.e., the optimizer selects a global query plan with the lowest cost to execute. Thus, cost functions influence what remote sources (i.e. equivalent data sources) to access and how federated queries are processed. In most federated systems, the underlying cost model is based on database statistics and query statements; however, the system load of remote sources and the dynamic nature of the network latency in wide area networks are not considered. As a result, federated query processing solutions can not adapt to runtime environment changes, such as network congestion or heavy workloads at remote sources. We present a novel system architecture that deploys a Query Cost Calibrator to calibrate the cost function based on system load and network latency at the remote sources and consequently indirectly influences query routing and load distribution in federated information systems.'),
	(300518, 'Access-Private Outsourcing of Markov Chain and RandomWalk based Data Analysis Applications.', '2006', 'ICDE Workshops', 'Random walk graph and Markov chain based models are used heavily in many data and system analysis domains, including web, bioinformatics, and queueing. These models enable the description and analysis of various behaviors of stochastic systems. If the system being modelled has certain properties, such as if it is irreducible and aperiodic, close form formulations corresponding to its stationary behavior can be used to analyze its behavior. However, if the system does not have these properties or if the user is not interested in the stationary behavior, then an iterative approach needs to be used to determine potential outcomes based on the initial probability distribution inputs to the model. In this paper, we focus on access-privacy enabled outsourced Markov chain based data analysis applications, where a non-trusted service provider takes (hidden) user queries that are described in terms of initial state distributions, and evaluates them iteratively in an oblivious manner. We show that this iterative process can leak information regarding the possible values of the hidden input if the server has a priori knowledge about the underlying Markovian process. Hence as opposed to simple obfuscation mechanisms, we develop an algorithm based on methodical addition of extra states, which guarantees unbounded feasible regions for the inputs, thus preventing a malicious host from having an informed guess regarding the inputs.'),
	(300861, 'Adaptive Multi-Sensor, Multi-Actuator Media Workflow System for Interactive Arts.', '2005', 'ICDE Workshops', 'We are presenting the Architecture for Interactive Arts (ARIA) middleware architecture for sensory/ reactive environments, such as interactive performances. ARIA processes, filters, and fuses sensory inputs and actuates responses in real-time while providing various service guarantees. ARIA is deployed on a centralized stream processor that monitors and queries over distributed media sensors and outputs of the media workflows are sent to actuators with video and audio presentation capabilities. Due to rapid updates and the continuous nature of sensory data streams, approximation and adaptation techniques are necessary to optimize resource usage. We propose a mechanism that adapts media workflows by adjusting parameters of filters and fusion operators that dynamically control the speed of data streams and the sampling rate. In [1], we developed the ARIA middleware model, including the operators, performance models, and the optimization techniques for chain structured (single-sensor, single-actuator) media workflows. In this paper, we focus on development of flow optimization techniques in adaptive multi-sensor, multi-actuator workflow system. We experimentally evaluate the efficiency and the effectiveness of the algorithms.'),
	(301601, 'Data-quality Guided Load Shedding for Expensive In-Network Data Processing.', '2007', 'ICDE', ''),
	(301711, 'PASS Middleware for Distributed and Autonomous XML Message Processing.', '2007', 'ICDE', ''),
	(302429, 'AURA: Enabling Attribute-Based Spatial Search in RFID Rich Environments.', '2009', 'ICDE', 'In this paper, we introduce AURA, a novel framework for enriching the physical environment with information about objects and activities in order to support searches in the physical world. The goal is to enable individuals to use the environment in which they function as a living (short-term) memory of their activities and of the objects with which they interact in this environment. In order to act as a memory, the physical environment must be transparently embedded with relevant information and made accessible by in-situ search mechanisms. We achieve this embedding through innovative algorithms that leverage a collection of parasitic RFID tags distributed in the environment to act as a distributed storage cloud. Information about the activities of the users and objects with which they interact are encoded and stored, in a decentralized way, on these RFID tags to support attribute-based search. A novel auraProp algorithm disseminates information in the environment and a complementary auraSearch algorithm implements spatial searches for physical objects in the environment. Parasitic RFID tags are not self-powered and thus cannot communicate among each other. AURA leverages human movement in the environment to propagate information: as they move in the environment, users not only leave traces (or auras) of their own activities, but also help further disseminate auras of prior activities in the same space. AURA relies on a novel signature based information dissemination mechanism and a randomized information erasure scheme to ensure that the extremely limited storage spaces available on the RFID tags are used effectively. The erasure scheme also helps create an information gradient in the physical environment, which the auraSearch algorithm uses to direct the user towards the object of interest.'),
	(302442, 'Frontiers in Information and Software as Services.', '2009', 'ICDE', 'The high cost of creating and maintaining software and hardware infrastructures for delivering services to businesses has led to a notable trend toward the use of third-party service providers, which rent out network presence, computation power, and data storage space to clients with infrastructural needs. These third party service providers can act as data stores as well as entire software suites for improved availability and system scalability, reducing small and medium businesses\' burden of managing complex infrastructures. This is called information/application outsourcing or software as a service (SaaS). Emergence of enabling technologies, such as service oriented architectures (SOA), virtual machines, and cloud computing, contribute to this trend. Scientific Grid computing, on-line software services, and business service networks are typical examples leveraging database and software as service paradigm. In this paper, we survey the technologies used to enable SaaS paradigm as well as the current offerings on the market. We also outline research directions in the field.'),
	(329850, 'Least-Cost High-Quality Object Retrieval for Distributed Multimedia Collaborations.', '1999', 'ICMCS, Vol. 1', 'In a collaborative network, retrieval of media objects from corresponding servers introduces many challenges. A major challenge is the multi-objective route establishment requirement, where various QoS and object quality parameters should be simultaneously optimized. This task requires new quality-based routing algorithms. In this paper, we present optimistic, pessimistic, and hybrid algorithms that optimize the media delivery costs while maximizing the quality of the transmitted objects. We also report on simulation results to show applicability of these algorithms for varying sizes of collaborative networks. These algorithms can be implemented either as sub-application-layer solutions in an information-centric network or as application-layer information sharing/communication protocols between collaborators.'),
	(330558, 'IFQ: A Visual Query Interface and Query Generator for Object-Based Media Retrieval.', '1997', 'ICMCS', 'There are two major directions for image retrieval system development. The first direction is the direct manipulation of information using query languages, which are precise to computers but not user friendly. The second direction is the development of natural interfaces, such as query by image example. The latter approach has the advantage of better query visualization, but it usually yields a low precision because users\' drawings may not be precise. IFQ (In Frame Query) is a visual user query interface for object-based media retrieval systems. It aims at not only providing a natural visual query interface but also supporting precise direct manipulation through automated query generation. Furthermore, IFQ gives users the flexibility of using combinations of semantic expressions, conceptual definitions, sketch, and image examples to pose queries.'),
	(331904, 'Modeling Adaptive Media Processing Workflows.', '2006', 'ICME', ''),
	(332571, 'Predictive Early Object Shedding in Media Processing Workflows.', '2007', 'ICME', ''),
	(338360, 'GPER: Geographic Power Efficient Routing in Sensor Networks.', '2004', 'ICNP', 'This paper presents a new Geographical Power Efficient Routing (GPER) protocol for sensor networks. Each sensor node makes local decisions as to how far to transmit: therefore, the protocol is power efficient, highly distributed and scalable.In GPER, given a final destination, each node first establishes a sub-destination within its maximum radio range.The nose, however, may decide to relay the packet to this sub-destination through an intermediary node, if this will preserve power. Furthermore, this intermediary node may act independently and alter the subdestination based on its own power range and neighborhood status.Simulation results show that the routing power consumption using GPER is close to optimal obtainable based on full knowledge of the network.GPER provides 60%-90% savings over other power-sensitive routing solutions.For sensor networks with highly varying node densities, we propose an extension, GPER-2, which captures the network topology better.Simulations show that although GPER works well, GPER-2 can improve on GPER upto 20%, especially when variations are large.'),
	(435694, 'Hiding Traversal of Tree Structured Data from Untrusted Data Stores.', '2003', 'ISI', ''),
	(435696, 'Hiding Data and Code Security for Application Hosting Infrastructure.', '2003', 'ISI', ''),
	(473571, 'Leveraging Structural Knowledge for Hierarchically-Informed Keyword Weight Propagation in the Web.', '2006', 'WEBKDD', 'Although web navigation hierarchies, such as Yahoo.com and Open Directory Project, enable effective browsing, their individual nodes cannot be indexed for search independently. This is because contents of the individual nodes in a hierarchy are related to the contents of their neighbors, ancestors, and descendants in the structure. In this paper, we show that significant improvements in precision can be obtained by leveraging knowledge about the structure of hierarchical web content. In particular, we propose a novel keyword weight propagation technique to properly enrich the data nodes in web hierarchies. Our approach relies on leveraging the context provided by neighbor entries in a given structure. We leverage this information for developing relativecontent preserving keyword propagation schemes. We compare the results obtained through proposed hierarchically-informed keyword weight (pre-) propagation schemes to existing state-of-the-art score and keyword propagation techniques and show that our approach significantly improves the precision.'),
	(473795, 'Using for condensing navigable tag hierarchies from tag clouds.', '2008', 'KDD', 'We present the tagFlake system, which supports semantically informed navigation within a tag cloud. tagFlake relies on TMine for organizing tags extracted from textual content in hierarchical organizations, suitable for navigation, visualization, classification, and tracking. TMine extracts the most significant tag/terms from text documents and maps them onto a hierarchy in such a way that descendant terms are contextually dependent on their ancestors within the given corpus of documents. This provides tagFlake with a mechanism for enabling navigation within the tag space and for classification of the text documents based on the contextual structure captured by the created hierarchy. tagFlake is language neutral, since it does not rely on any natural language processing technique and is unsupervised.'),
	(499808, 'FMware: Middleware for Efficient Filtering and Matching of XML Messages with Local Data.', '2006', 'Middleware', 'XML message filtering systems are used for sifting through real-time messages to support business data mining and reporting. An XML message filtering system needs to (a) process registered filter predicates on multiple distributed real-time streams and (b) match and validate the filter results with local data to identify the relevant data that can be used for higher-level processing. Although efficient real-time filtering schemes exists, the matching phase of the operation where filter results have to be matched against local data to select those matches that are relevant to the particular task remains to be expensive as it requires expensive join operations. In this paper, we present an efficient middleware (FMware) for filtering and matching XML messages against locally available data. The proposed operator relies on a novel cluster-domain matching scheme to reduce the cost of the process. We analytically study the cost of the proposed middleware and experimentally show that it adaptively reduces the number of local data accesses and provides large savings in matching time with respect to cluster-unaware matching.'),
	(500667, 'Query Optimization in the Presence of Top-k Predicates.', '2001', 'Multimedia Information Systems', ''),
	(500675, 'Effects of User Patterns on a Multimedia Delivery System.', '2003', 'Multimedia Information Systems', ''),
	(500710, 'Server Replication in Interactive, Push-Based Data Delivery Networks.', '2004', 'Multimedia Information Systems', ''),
	(500714, 'Efficient Stream Routing in Quality- and Resource-Adaptive Flow Architectures.', '2004', 'Multimedia Information Systems', ''),
	(502770, 'ARIA: an adaptive and programmable media-flow architecture for interactive arts.', '2004', 'ACM Multimedia', 'We are developing an adaptive and programmable media-flow ARchitecture for Interactive Arts (ARIA) to enable real-time control of audio, video, and lighting on an intelligent stage. The intelligent stage is being equipped with a matrix of floor sensors for object localization, microphone arrays for sound localization, beam forming and motion capture system. ARIA system provides an interface for specifying intended mappings of the sensory inputs to audio-visual responses. Based on the specifications, the sensory inputs are streamed, filtered and fused, actuate a controllable projection system, sound surround and lighting system. The actuated responses take place in real-time and satisfy QoS requirements in live performance. In this paper, we present the ARIA quality-adaptive architecture. We model the basic information unit as a data object with a meta-data header and object payload streamed between nodes in the system and use a directed acyclic network to model media stream processing. We define performance metrics for the output precision, resource consumption, and end-to-end delay. The filters and fusion operators are being implemented by quality aware signal processing algorithms. The proper node behavior is chosen at runtime to achieve the QoS requirements and adapt to input object properties. For this purpose, ARIA utilizes a two-phase approach: static pre-optimization and dynamic run-time adaptation.'),
	(502772, 'Media processing workflow design and execution with ARIA.', '2005', 'ACM Multimedia', 'Recently, we introduced a novel ARchitecture for Interactive Arts (ARIA) middleware that processes, filters, and fuses sensory inputs and actuates responses in real-time while providing various Quality of Service (QoS) guarantees. The objective of ARIA is to incorporate realtime, sensed, and archived media and audience responses into live performances, on demand. An ARIA media workflow graph describes how the data sensed through media capture devices will be processed and what audio-visual responses will be actuated. Thus, each data object streamed between ARIA processing components is subject to transformations, as described by a media workflow graph. The media capture and processing components, such as media filters and fusion operators, are programmable and adaptable; i.e, the delay, size, frequency, and quality/precision characteristics of individual operators can be controlled via a number of parameters. In [1, 4, 5], we developed static and dynamic optimization algorithms which maximize the quality of the actuated responses, minimize the corresponding delay and the resource usage. In this demonstration, we present the ARIA GUI and the underlying kernel. More specifically, we describe how to design a media processing workflow, with adaptive operators, using the ARIA GUI and how to use the various optimization and adaptation alternatives provided by the ARIA kernel to execute media processing workflows.'),
	(503138, 'Similarity-based retrieval of temporal documents.', '2000', 'ACM Multimedia Workshops', 'In this paper, we describe a similarity-based retrieval framework that addresses the challenges associated with the temporal nature of multimedia documents. Multimedia documents consist of multiple media objects and a set of specifications (eg. temporal) that tie these objects together. Therefore, we describe similarity/dissimilarity measures that aim to capture document authors\' intensions. We use a prioritized constraint-based framework to evaluate these measures. We also develop algorithms that efficiently compute these measures for special cases.'),
	(503387, 'DANS: decentralized, autonomous, and networkwide service delivery and multimedia workflow processing.', '2006', 'ACM Multimedia', 'Fundamental challenges in designing environments with media-rich ambient services involves not only the development of appropriate sensing technologies, but as importantly, the implementation of a distributed media processing system which can process, integrate, and leverage the sensed data in real time to provide the various services. In recent years, a great deal of progress has been made in media service workflow processing systems. In most existing solutions, however, the workflow nodes, which operate on the data, are selected out of a centrally assigned candidate pool. These candidate organizations cause either extensive resource provisioning or poor-quality operator mapping between logical workflow nodes and the available physical resources nodes. Consequently, instantiating a media processing workflow to the underlying hardware before the workflow execution begins does not lends itself to adaptive and autonomous operation of the workflow, scalable to resources and demand.In this paper, we propose a novel decentralized multimedia workflow processing system, DANS, in which operators defined in workflows are mapped into (distributed) physical nodes through Distributed Hash Table (DHT)-based overlay substrate in a purely decentralized and adaptive manner. The redundancy in the system, in terms of availability of multiple nodes able to perform the same task, enables the system to scale with demand. Furthermore, physical workflow nodes (operator instances) are able to locate and select the next filter or fusion operator instance autonomously, while ensuring the correct execution of the workflow.'),
	(503806, 'Connecting artists and scientists in multimedia research.', '2008', 'ACM Multimedia', 'Historically, the ACM Multimedia Conference is split into a technical program and an arts program. These programs sometimes seem completely separate from one another, victims of a semantic gap between disciplines. The goal of this panel is to create a space in which scientists learn from artists, and arts from science. We need to discover new connections between modalities of research. In order to create the most exciting and powerful future forms of interactive multimedia systems, the ones that will create the most beneficial broader impact on humanity, we need to foster new collaborations between artists and scientists. This panel seeks to bridge the great divide of language and communities that has fragmented us, creating a new space for developing connections between the arts and sciences of multimedia research, as embodied through the artists and scientists of ACM Multimedia. The goal is to make this conference a premier site for catalyzing emergent connections. Among the ancient Greeks, the techne, which included the sciences, were based in the arts. Our modes of knowledge production have since separated and grown alienated. What weird stuff are those people doing? To bridge the divide, we must understand and acknowledge differences, and use this as a basis for discovering common ground. In the sciences, knowledge is constructed empirically, through hypotheses and validations. Aesthetics and concepts play essential roles in how works of art are formulated to stimulate experiences. Where do these aims intersect and how might they inform each other? In this conference, one track develops pattern recognition methods for content analysis and retrieval. Another develops network and system techniques. Applications invoke these methods in usable systems. Human-centered multimedia serves as a bridge connecting human experiences with algorithmic methods. The interactive art program develops new concepts of how multimedia can function culturally, amidst society, through tangible demonstrations of these concepts. Juxtaposing differences in methodologies and epistemologies is a method for provoking thought and identifying connections, which can lead to the development of new knowledge [1]. The goal of the panel is to catalyze discussions that build a foundation of mutual understanding and respect, and from this foundation, to build new ideas and human relationships that can lead to fruitful collaborations in the cycles to come. The panel will begin by asking each participant to characterize their approach to research, and to consider connections between the arts and sciences. How do you formulate research goals and objectives? What are the most significant methods that you use to carry them out? Significant contrasts in the epistemologies that underlie different modalities of research will be exposed. Artists will be asked, How can multimedia content analysis, processing, retrieval, networking, applications, and human-centered systems contribute to your art? How can your art contribute to multimedia research in content analysis, processing, retrieval, networking, applications, and human-centered systems? Scientists will be asked, How can conceptual and embodied components of interactive multimedia artworks, creativity support tools, and artbased media collections contribute to your research? How can your research contribute to interactive multimedia art? These individual statements will be followed by discussion. Panel and audience members will be asked to synthesize perspectives across disciplines, to reflect on what they have learned from each other and how this can influence future research.'),
	(513412, 'On Shortest Path Problems with Non-Markovian Link Contribution to Path Lengths.', '2000', 'NETWORKING', ''),
	(524253, 'Fairly Redistributing Failed Server Load in a Distributed System.', '2003', 'OTM Workshops', ''),
	(526712, 'Using for Mining Web Document Associations.', '2000', 'PAKDD', ''),
	(559883, 'Brokerage Architecture for Stock Photo Industry.', '1997', 'RIDE', 'The Internet has grown to become a major component of the global world-wide network infrastructure, linking millions of users. We first address the need for an electronic market and match-making between consumers and providers on the Internet for the stock photo industry. We discuss business issues and highlight technologies required to support an electronic market image exchange on the global Internet, including multimedia databases, visual query interfaces, visualization tools, and watermarking techniques. Finally, we summarize the operational flows and brokerage services provided by the brokerage system.'),
	(567762, 'SEMCOG: an integration of SEMantics and COGnition-based approaches for image retrieval.', '1997', 'SAC', ''),
	(579367, 'Secure and Privacy Preserving Outsourcing of Tree Structured Data.', '2004', 'Secure Data Management', ''),
	(599175, 'SEMCOG: An Object-based Image Retrieval System and Its Visual Query Interface.', '1997', 'SIGMOD Conference', ''),
	(600134, 'Integrating and querying taxonomies with quest in the presence of conflicts.', '2007', 'SIGMOD Conference', 'We present the QUery-driven Exploration of Semistructured dataand meta-data with conflicTs and partial knowledge (QUEST) system for supporting the integration of scientific data and taxonomies in the presence of misalignments and conflicts. QUEST relies on a novel constraint-based data model that captures both value and structural conflicts and enables researchers to observe and resolve such misalignments in the integrated data by considering the context provided by the data requirements of given research questions.'),
	(600145, 'FICSR: eedback-based nonistency esolution and query processing on misaligned data sources.', '2007', 'SIGMOD Conference', 'A critical reality in data integration is that knowledge from different sources may often be conflicting with each other. Conflict resolutioncan be costly and, if done without proper context, can be ineffective. In this paper, we propose a novel query-driven and feedback-based approach (FICSR1) to conflict resolution when integrating data sources. In particular, instead of relying on traditional model based definition of consistency, we introduce a ranked interpretation. This not only enables FICSR to deal with the complexity of the conflict resolution process, but also helps achieve a more direct match between the users\' (subjective) interpretation of the data and the system\'s (objective) treatment of the available alternatives. Consequently, the ranked interpretation leads to new opportunities for bi-directional (data informsover &#x2194; user) feedback cycle for conflict resolution: given a query, (a) a preliminary ranking of candidate results on data can inform the user regarding constraints critical to the query, while (b) user feedback regarding the ranks can be exploited to inform the system about user\'s relevant domain knowledge. To enable this feedback process, we develop data structures and algorithms for efficient off-line conflict/agreement analysis of the integrated data as well as for on-line query processing, candidate result enumeration, and validity analysis. The results are brought together and evaluated in the FICSR system.'),
	(600292, 'Supporting OLAP operations over imperfectly integrated taxonomies.', '2008', 'SIGMOD Conference', 'OLAP is an important tool in decision support. With the help of domain knowledge, such as hierarchies of attribute values, OLAP helps the user observe the effects of various decisions. One assumption of most OLAP operations is that the available domain knowledge is precise. In particular, they assume that the hierarchy of values over which the user can navigate forms a taxonomy. In this paper, we first note that when multiple heterogeneous data sources are involved in the gathering of the data and the associated domain knowledge, the integrated knowledge-base, constructed by combining locally available taxonomies based on the concept matchings, may not be a taxonomy itself. Specifically, existence of intersections among concepts from different sources compromises the tree-structure of the integrated taxonomy and prevents effective use of hierarchical navigation techniques, such as drill-down and roll-up. To cope with this, we introduce concept un-classification, where a select few of the concepts are eliminated to ensure that the remaining structure is a navigable taxonomy, without concept intersections. Since un-classifying an originally classified data is not desirable, we consider ways to minimize un-classification in the process. We introduce a cost model which captures the imprecision caused by the un-classification process and we formulate the problem of finding an un-classification strategy which eliminates intersections and which adds minimal imprecision to the resulting structure. We show that, when performed naively, this task can be very costly and thus we propose a bottom-up preprocessing strategy which supports basic navigational analytics operations, such as drill-down and roll-up. Experiments over synthetic and real-life data verified the effectiveness and efficiency of our approach.'),
	(604932, 'Hiding Traversal of Tree Structured Data from Untrusted Data Stores.', '2004', 'WOSIS', ''),
	(643127, 'Facilitating Multimedia Database Exploration through Visual Interfaces and Perpetual Query Reformulations.', '1997', 'VLDB', ''),
	(644255, 'Sum-Max Monotonic Ranked Joins for Evaluating Top-K Twig Queries on Weighted Data Graphs.', '2007', 'VLDB', 'In many applications, the underlying data (the web, an XML document, or a relational database) can be seen as a graph. These graphs may be enriched with weights, associated with the nodes and edges of the graph, denoting application specific desirability/penalty assessments, such as popularity, trust, or cost. A particular challenge when considering such weights in query processing is that results need to be ranked accordingly. Answering keyword-based queries on weighted graphs is shown to be computationally expensive. In this paper, we first show that answering queries with further structure imposed on them remains NP-hard. We next show that, while the query evaluation task can be viewed in terms of ranked structural-joins along query axes, the monotonicity property, necessary for ranked join algorithms, is violated. Consequently, traditional ranked join algorithms are not directly applicable. Thus, we establish an alternative, sum-max monotonicity property and show how to leverage this for developing a self-punctuating, horizon-based ranked join (HR-Join) operator for ranked twig-query execution on data graphs. We experimentally show the effectiveness of the proposed evaluation schemes and the HR-join operator for merging ranked sub-results under sum-max monotonicity.'),
	(673453, 'A Hybrid Approach to Multimedia Database Systems through Integration of Semantics and Media-based Search.', '1997', 'WWCA', ''),
	(673856, 'Discovering Web Document Associations for Web Site Summarization.', '2001', 'WWW Posters', ''),
	(674266, 'Topic segmentation of message hierarchies for indexing and navigation support.', '2005', 'WWW', 'Message hierarchies in web discussion boards grow with new postings. Threads of messages evolve as new postings focus within or diverge from the original themes of the threads. Thus, just by investigating the subject headings or contents of earlier postings in a message thread, one may not be able to guess the contents of the later postings. The resulting navigation problem is further compounded for blind users who need the help of a screen reader program that can provide only a linear representation of the content. We see that, in order to overcome the navigation obstacle for blind as well as sighted users, it is essential to develop techniques that help identify how the content of a discussion board grows through generalizations and specializations of topics. This knowledge can be used in segmenting the content in coherent units and guiding the users through segments relevant to their navigational goals. Our experimental results showed that the segmentation algorithm described in this paper provides up to 80-85% success rate in labeling messages. The algorithm is being deployed in a software system to reduce the navigational load of blind students in accessing web-based electronic course materials; however, we note that the techniques are equally applicable for developing web indexing and summarization tools for users with sight.'),
	(675547, 'Efficient overlap and content reuse detection in blogs and online news articles.', '2009', 'WWW', 'The use of blogs to track and comment on real world (political, news, entertainment) events is growing. Similarly, as more individuals start relying on the Web as their primary information source and as more traditional media outlets try reaching consumers through alternative venues, the number of news sites on the Web is also continuously increasing. Content-reuse, whether in the form of extensive quotations or content borrowing across media outlets, is very common in blogs and news entries outlets tracking the same real-world event. Knowledge about which web entries re-use content from which others can be an effective asset when organizing these entries for presentation. On the other hand, this knowledge is not cheap to acquire: considering the size of the related space web entries, it is essential that the techniques developed for identifying re-use are fast and scalable. Furthermore, the dynamic nature of blog and news entries necessitates incremental processing for reuse detection. In this paper, we develop a novel qSign algorithm that efficiently and effectively analyze the blogosphere for quotation and reuse identification. Experiment results show that with qSign processing time gains from 10X to 100X are possible while maintaining reuse detection rates of upto 90%. Furthermore, processing time gains can be pushed multiple orders of magnitude (from 100X to 1000X) for 70% recall.'),
	(701781, 'Structure- and Extension-Informed Taxonomy Alignment.', '2008', 'ODBIS', ''),
	(712831, 'Confidence-driven early object elimination in quality-aware sensor workflows.', '2005', 'DMSN', 'Distributed media rich systems, which can provide ubiquitous services to human users, require perceptive capabilities, transparently embedded in the surroundings, to continuously sense users\' needs, status, and the context, filter and fuse a multitude of real-time media data, and react by adapting the environment to the user. Designing such real-time adaptivity into an open reactive system is challenging as run-time situations are partially known or unknown in the design phase and multiple, potentially conflicting, criteria have to be taken into account during the runtime. The ARIA media workflow architecture [14, 18, 19, 20], which is composed of adaptive media sensing, processing, and actuating units, processes, filters, and fuses sensory inputs and actuates responses in real-time. Unlike traditional workflows, a media processing workflow needs to capture inherent redundancy and imprecision in media, in terms of alternative ways of achieving a given goal. The object streams are only statistically accurate due to the inherent uncertainty of feature extractors. In this paper, we present a quality-aware early object elimination scheme to enable informed resource savings in continuous real-time media processing workflows.'),
	(720514, 'CDIP: Collection-Driven, yet Individuality-Preserving Automated Blog Tagging.', '2007', 'ICSC', 'With the success of blogs as popular information sharing media, searches on blogs have become popular. In the blogosphere, tagging is used as a means of annotating blog entries with contextually meaningful keywords, which enable users more easily locate blog content. Yet, although tags provided by bloggers are effective for organizing blog entries, in many cases, they are not always sufficient in properly capturing the semantics of the blog content. In our previous work [7], we observed that there exists large degree of content overlap (not only in the form of quotation/ commentary pairs, but also as content borrowing across media outlets) among blog entries, which makes it hard for effective, discriminating keyword searches. In this paper, we further note that these implicit or explicit quotations could be leveraged to identify the contexts in which entries occur; thus, resulting in more effective tagging. Thus, we propose CDIP (a collection-driven, yet individuality-preserving tagging system) which relies on relationships provided by quotation/reuse detection and semantic-focus analysis to automatically tag the blogs in such a way that, not-only the related blogs share tags, but also individuality of the entries is preserved for discriminating tag-based accesses.'),
	(742863, 'Power-aware single- and multipath geographic routing in sensor networks.', '2007', 'Ad Hoc Networks', 'Nodes in a sensor network, operating on power limited batteries, must save power to minimize the need for battery replacement. We note that the range of transmission has a significant effect on the power consumption of both the transmitting node and listeners. This paper first presents a Geographical Power Efficient Routing (GPER) protocol for sensor networks. Each sensor node makes local decisions as to how far to transmit: therefore, the protocol is power efficient, localized, highly distributed, and scalable. In GPER, given a final destination, each node first establishes a subdestination within its maximum radio range. The node, however, may decide to relay the packet to this subdestination through an intermediary node or alter the subdestination if this will preserve power. Traditional deterministic geographic routing algorithms aim at achieving close to the shortest weighted paths. However, they normally stick to the same paths for the same source/destination pairs. This may conversely drain the nodes on these paths and result in short network life when the communication in the network is unevenly distributed. Thus, we further investigate a set of probabilistic multipath routing algorithms, which generate braided multipaths based only on local information. The algorithms have less communication and storage overhead than conventional on-demand multipath routing algorithms, while providing greater resilience to node failures. Simulations on NS2 show that GPER almost halves the power consumption in the network relative to alternative geographic routing algorithms. Furthermore, in situations where the communication tasks are non-uniformly distributed, probabilistic multipath routing contributes up to an additional 30% to network lifetime.'),
	(802786, 'Demand-scalable geographic multicasting in wireless sensor networks.', '2007', 'Computer Communications', 'In this paper, we focus on the challenge of demand-scalable multicast routing in wireless sensor networks. Due to the ad-hoc nature of the placement of the sensor nodes as well as the variations in the available power of the nodes, centralized or stateful routing schemes are not applicable. Thus, in this paper, we first introduce a Geographic Multicast routing Protocol (GMP) for wireless sensor networks. The protocol is fully distributed and stateless. Given a set of the destinations, the transmitting node first constructs a virtual Euclidean Steiner tree rooted at itself and including the destinations, using a novel and highly efficient reduction ratio heuristic (called rrSTR). The simulation results on NS2 show that GMP requires 25% less hops and energy than the existing Position Based Multicasting, PBM, Location-Guided Steiner trees, LGS, approaches. The GMP algorithm as well as LGS and PBM all assume that each recipient receives the same copy of the multicast message. In reality, however, especially when the transmission includes streamed media, different recipients have different demands (in terms of the frequency of packets or the quality of media). Thus, in this paper, we investigate the suitability of the geographic multicasting schemes for situations where scalable transmission paths can save power. In particular, we propose intuitive mechanisms to extend the three schemes to cases where the data transmission can scale based on the demand. This leads to three new weighted multicast routing algorithms: wGMP, wLGS, and wPBM. The results show that the wGMP algorithm provides the best opportunities for scalability due to its flexible self-correcting decision making process, while other schemes, such as wLGS and wPBM are not directly suitable for scalable multicasting, due to their naively greedy structures.'),
	(832767, 'Integrating content search with structure analysis for hypermedia retrieval and management.', '1999', 'ACM Comput. Surv.', ''),
	(845567, 'Reasoning for Web document associations and its applications in site map construction.', '2002', 'Data Knowl. Eng.', 'Recently, there is an interest in using associations between Web pages in providing users with pages relevant to what they are currently viewing. We believe that, to enable intelligent decisions, we need to answer the question for a given set of pages, find out why they are associated. We present a framework for reasoning about Web document associations. We start from the observation that the reasons of the Web page associations are implicitly embedded in the content of the pages as well as the links connecting them. The association reasoning scheme we propose is based on a random walk algorithm. This algorithm can take both link structure and contents into consideration and allows users to specify a focus. We then show how the proposed algorithm, combined with a logical domain identification technique, can be used for Web site summarization and Web site map construction to help users navigate through complex corporate sites. We see that, to achieve this goal, it is essential to recover the Web authors\' intentions and superimpose it with the users\' retrieval contexts in summarizing Web sites. Therefore, we present a framework, which uses logical neighborhoods, entry pages, and associations of entry pages, in creating context-sensitive summaries and maps of complex Web sites.'),
	(845569, 'Similarity-based ranking and query processing in multimedia databases.', '2000', 'Data Knowl. Eng.', ''),
	(845902, 'Hierarchical Image Modeling for Object-Based Media Retrieval.', '1998', 'Data Knowl. Eng.', ''),
	(846415, 'Enabling access-privacy for random walk based data analysis applications.', '2007', 'Data Knowl. Eng.', 'Random walk graph and Markov chain based models are used heavily in many data and system analysis domains, including web, bioinformatics, and queuing. These models enable the description and analysis of various behaviors of stochastic systems. If the system being modeled has certain properties, such as if it is irreducible and aperiodic, close form formulations corresponding to its stationary behavior can be used to analyze its behavior. However, if the system does not have these properties or if the user is not interested in the stationary behavior, then an iterative approach needs to be used to determine potential outcomes based on the initial probability distribution inputs to the model. In this paper, we focus on access-privacy enabled outsourced Markov chain based data analysis applications, where a non-trusted service provider takes (hidden) user queries that are described in terms of initial state distributions, and evaluates them iteratively in an oblivious manner. We show that this iterative process can leak information regarding the possible values of the hidden input if the server has a priori knowledge about the underlying Markovian process. Hence as opposed to simple obfuscation mechanisms, we develop an algorithm based on methodical addition of extra states, which guarantees unbounded feasible regions for the inputs, thus preventing a malicious host from having an informed guess regarding the inputs. In particular, we show that if the underlying transition matrix is diagonalizable then we can compute the exact number of states needed for access-privacy, while if the matrix is non-diagonalizable, then only a lower-bound can be computed.'),
	(990383, 'Distributed XML processing: Theory and applications.', '2008', 'J. Parallel Distrib. Comput.', 'Basic message processing tasks, such as well-formedness checking and grammar validation, common in Web service messaging, can be off-loaded from the service providers\' own infrastructures. The traditional ways to alleviate the overhead caused by these tasks is to use firewalls and gateways. However, these single processing point solutions do not scale well. To enable effective off-loading of common processing tasks, we introduce the Prefix Automata SyStem - PASS, a middleware architecture which distributively processes XML payloads of web service SOAP messages during their routing towards Web servers. PASS is based on a network of automata, where PASS-nodes independently but cooperatively process parts of the SOAP message XML payload. PASS allows autonomous and pipelined in-network processing of XML documents, where parts of a large message payload are processed by various PASS-nodes in tandem or simultaneously. The non-blocking, non-wasteful, and autonomous operation of PASS middleware is achieved by relying on the prefix nature of basic XML processing tasks, such as well-formedness checking and DTD validation. These properties ensure minimal distributed processing management overhead. We present necessary and sufficient conditions for outsourcing XML document processing tasks to PASS, as well as provide guidelines for rendering suitable applications to be PASS processable. We demonstrate the advantages of migrating XML document processing, such as well-formedness checking, DTD parsing, and filtering to the network via event driven simulations.'),
	(1003367, 'On Similarity Measures for Multimedia Database Applications.', '2001', 'Knowl. Inf. Syst.', ''),
	(1003505, 'Discovering mappings in hierarchical data from multiple sources using the inherent structure.', '2006', 'Knowl. Inf. Syst.', 'Unprecedented amounts of media data are publicly accessible. However, it is increasingly difficult to integrate relevant media from multiple and diverse sources for effective applications. The functioning of a multimodal integration system requires metadata, such as ontologies, that describe media resources and media components. Such metadata are generally application-dependent and this can cause difficulties when media needs to be shared across application domains. There is a need for a mechanism that can relate the common and uncommon terms and media components. In this paper, we develop an algorithm to mine and automatically discover mappings in hierarchical media data, metadata, and ontologies, using the structural information inherent in these types of data. We evaluate the performance of this algorithm for various parameters using both synthetic and real-world data collections and show that the structure-based mining of relationships provides high degrees of precision.'),
	(1013028, 'ACM/Springer Mobile Networks and Applications (MONET).', '2008', 'MONET', ''),
	(1016745, 'Similarity-Based Retrieval of Temporal Specifications and its Application to the Retrieval of Multimedia Documents.', '2005', 'Multimedia Tools Appl.', 'In this paper, we describe a similarity-based retrieval framework for temporal information, such as multimedia presentations. We develop techniques that allow users to query and retrieve multimedia documents, based on their temporal content. For this purpose, we describe different temporal data models and a set of similarity metrics applicable for different retrieval tasks. We develop algorithms that efficiently compute these metrics and report on experiment results. We also develop algorithms that efficiently index temporal structures based on these measures and show that the proposed variant of multi dimensional scaling is efficient and provides high quality retrieval of temporal specifications.'),
	(1016805, 'Multi-Criteria Query Optimization in the Presence of Result Size and Quality Tradeoffs.', '2004', 'Multimedia Tools Appl.', 'In this paper, we present novel multi-criteria query optimization techniques for performing query optimization in databases, such as multimedia and web databases, which rely on imperfect access mechanisms and top-k predicates. We present an optimization model that (1) takes into account different binding patterns associated with query predicates, (2) considers the variations in the expected query result sizes as a function of query execution plans, and (3) considers the expected result qualities of the execution orders. We address the complexity and the well-known NP-complete nature of the query optimization problem by adaptively reducing the granularity of the search space. For this purpose, unlike the data histograms which capture the data distribution, we propose opt-histograms that capture the distribution of sub-query-plan values over many optimization tasks.'),
	(1016842, 'Effects of User Request Patterns on a Multimedia Delivery System.', '2004', 'Multimedia Tools Appl.', 'Because of their size, service times, and drain on server resources, multimedia objects require specialized replication systems in order to meet demand and ensure content availability. We present a novel method for creating replication systems where the replicated objects\' sizes and/or per-object service times are large. Such replication systems are well-suited to delivering multimedia objects on the Internet. Assuming that user request patterns to the system are known, we show how to create replication systems that distribute read load to servers in proportion to their contribution to system capacity and experimentally show the positive load distribution properties of such systems. However, when user request patterns differ from what the system was designed for, system performance will be affected. Therefore, we also report on results that reveal (i) how server loads are affected and (ii) the impact two system design parameters (indicators of a system\'s load distribution qualities) have on server load when request patterns differ from that for which a system was designed.'),
	(1016877, 'Guest Editorial: Best Papers of the ACM Multimedia 2001 Workshop on Multimedia Information Retrieval.', '2003', 'Multimedia Tools Appl.', ''),
	(1017132, 'Optimization of media processing workflows with adaptive operator behaviors.', '2007', 'Multimedia Tools Appl.', 'In this paper, we present the ARIA media processing workflow architecture that processes, filters, and fuses sensory inputs and actuates responses in real-time. The components of the architecture are programmable and adaptable; i.e. the delay, size, and quality/precision characteristics of the individual operators can be controlled via a number of parameters. Each data object processed by qStream components is subject to transformations based on the parameter values. For instance, the quality of an output data object and the corresponding processing delay and resource usage depend on the values assigned to parameters of the operators in the object flow path. In Candan, Peng, Ryu, Chatha, Mayer (Efficient stream routing in quality- and resource-adaptive flow architectures. In: Workshop on multimedia information systems, 2004), we introduced a class of flow optimization problems that promote creation and delivery of small delay or small resource-usage objects to the actuators in single-sensor, single-actuator workflows. In this paper, we extend our attention to multi-sensor media processing workflow scenarios. The algorithms we present take into account the implicit dependencies between various system parameters, such as resource consumption and object sizes. We experimentally show the effectiveness and efficiency of the algorithms.'),
	(1063485, 'Resource Description Framework: Metadata and Its Applications.', '2001', 'SIGKDD Explorations', 'Universality, the property of the Web that makes it the largest data and information source in the world, is also the property behind the lack of a uniform organization scheme that would allow easy access to data and information. A semantic web, wherein different applications and Web sites can exchange information and hence exploit Web data and information to their full potential, requires the information about Web resources to be represented in a detailed and structured manner. Resource Description Framework (RDF), an effort in this direction supported by the World Wide Web Consortium, provides a means for the description of metadata which is a necessity for the next generation of interoperable Web applications. The success of RDF and the semantic web will depend on (1) the development of applications that prove the applicability of the concept, (2) the availability of application interfaces which enable the development of such applications, and (3) databases and inference systems that exploit RDF to identify and locate most relevant Web resources. In addition, many practical issues, such as security, ease of use, and compatibility, will be crucial in the success of RDF. This survey aims at providing a glimpse at the past, present, and future of this upcoming technology and highlights why we believe that the next generation of the Web will be more organized, informative, searchable, accessible, and, most importantly, useful. It is expected that knowledge discovery and data mining can benefit from RDF and the Semantic Web.'),
	(1077790, 'SEMCOG: A Hybrid Object-based Image and Video Database System and Its Modeling, Language, and Query Processing.', '1999', 'TAPOS', ''),
	(1137536, 'WebDB: A System for Querying Semi-structured Data on the Web.', '2002', 'J. Vis. Lang. Comput.', ''),
	(1138176, 'Supporting efficient multimedia database exploration.', '2001', 'VLDB J.', 'Due to the fuzziness of query specification and media matching, multimedia retrieval is conducted by way of exploration. It is essential to provide feedback so that users can visualize query reformulation alternatives and database content distribution. Since media matching is an expensive task, another issue is how to efficiently support exploration so that the system is not overloaded by perpetual query reformulation. In this paper, we present a uniform framework to represent statistical information of both semantics and visual metadata for images in the databases. We propose the concept of query verification, which evaluates queries using statistics, and provides users with feedback, including the strictness and reformulation alternatives of each query condition as well as estimated numbers of matches. With query verification, the system increases the efficiency of the multimedia database exploration for both users and the system. Such statistical information is also utilized to support progressive query processing and query relaxation.'),
	(1138287, 'System support for exploration and expert feedback in resolving conflicts during integration of metadata.', '2008', 'VLDB J.', 'A critical reality in integration is that knowledge obtained from different sources may often be conflicting. Conflict-resolution, whether performed during the design phase or during run-time, can be costly and, if done without a proper understanding of the usage context, can be ineffective. In this paper, we propose a novel exploration and feedback-based approach [FICSR (Pronounced as fixer)] to conflict-resolution when integrating metadata from different sources. Rather than relying on purely automated conflict-resolution mechanisms, FICSR brings the domain expert in the conflict-resolution process and informs the integration based on the expert\'s feedback. In particular, instead of relying on traditional model based definition of consistency (which, whenever there are conflicts, picks a possible world among many), we introduce a ranked interpretation of the metadata and statements about the metadata. This not only enables FICSR to avoid committing to an interpretation too early, but also helps in achieving a more direct correspondence between the experts\' (subjective) interpretation of the data and the system\'s (objective) treatment of the available alternatives. Consequently, the ranked interpretation leads to new opportunities for exploratory feedback for conflict-resolution: within the context of a given statement of interest, (a) a preliminary ranking of candidate matches, representing different resolutions of the conflicts, informs the user about the alternative interpretations of the metadata, while (b) user feedback regarding the preferences among alternatives is exploited to inform the system about the expert\'s relevant domain knowledge. The expert\'s feedback, then, is used for resolving not only the conflicts among different sources, but also possible mis-alignments due to the initial matching phase. To enable this $${(system stackrel{_{informs}}{longleftrightarrow} user)}$$ feedback process, we develop data structures and algorithms for efficient off-line conflict/agreement analysis of the integrated metadata. We also develop algorithms for efficient on-line query processing, candidate result enumeration, validity analysis, and system feedback. The results are brought together and evaluated in the Feedback-based InConSistency Resolution (FICSR) system.'),
	(1187762, 'Hiding Tree Structured Data and Queries from Untrusted Data Stores.', '2005', 'Information Systems Security', ''),
	(1212236, 'PICC Counting: Who Needs Joins When You Can Propagate Efficiently?.', '2009', 'SDM', ''),
	(1212882, 'Skip-and-prune: cosine-based top-k query processing for efficient context-sensitive document retrieval.', '2009', 'SIGMOD Conference', 'Keyword search and ranked retrieval together emerged as popular data access paradigms for various kinds of data, from web pages to XML and relational databases. A user can submit keywords without knowing much (sometimes nothing) about the complex structure underlying a data collection, yet the system can identify, rank, and return a set of relevant matches by exploiting statistics about the distribution and structure of the data. Keyword-based data models are also suitable for capturing user\'s search context in terms of weights associated to the keywords in the query. Given a search context, the data in the database can also be re-interpreted for semantically correct retrieval. This option, however, is often ignored as the cost of re-assessing the content in the database naively tends to be prohibitive. In this paper, we first argue that top-k query processing can help tackle this challenge by re-assessing only the relevant parts of the database, efficiently. A road-block in this process, however, is that most efficient implementations of top-k query processing assume that the scoring function is monotonic, whereas the cosine-based scoring function needed for re-interpretation of content based on user context is not. In this paper, we develop an efficient top-k query processing algorithm, skip-and-prune (SnP), which is able to process top-k queries under cosine-based non-monotonic scoring functions. We compare the use of proposed algorithm against the alternative implementations of the context-aware retrieval, including naive top-k, accumulator-based inverted files, and full-scan. The experiment results show that while being fast, naive top-k is not an effective solution due to the non-monotonicity of underlying scoring function. The proposed technique, SnP, however, matches the precision of accumulator-based inverted files and full-scan, yet it is orders of magnitude faster than these.'),
	(1230512, 'Multitiered Cache Management and Acceleration for Database-Driven Websites.', '2004', 'Concurrent Engineering: R&A', ''),
	(1230513, 'Acceleration and Monitoring of Data Center-Hosted Distributed Database-Driven Web Applications.', '2004', 'Concurrent Engineering: R&A', ''),
	(1236702, 'Exploring path query results through relevance feedback.', '2009', 'CIKM', 'Feedback driven data exploration schemes have been implemented for non-structured data (such as text) and document-centric XML collections where formulating precise queries is often impossible. In this paper, we study the problem of enabling exploratory access, through ranking, to data-centric XML. Given a path query and a set of results identified by the system to this query over the data, we consider feedback which captures the user\'s preference for some features over the others. The feedback can be positive or negative. To deal with feedback, we develop a probabilistic feature significance measure and describe how to use this for ranking results in the presence of dependencies between the path features. We bring together these techniques in AXP, a system for adaptive and exploratory path retrieval. The experimental results show the effectiveness of the proposed techniques.'),
	(1262335, 'CoSeNa: a context-based search and navigation system.', '2009', 'MEDES', 'Most of the existing document and web search engines rely on keyword-based queries. To find matches, these queries are processed using retrieval algorithms that rely on word frequencies, topic recentness, document authority, and (in some cases) available ontologies. In this paper, we propose an innovative approach to exploring text collections using a novel keywords-by-concepts (KbC) graph, which supports navigation using domain-specific concepts as well as keywords that are characterizing the text corpus. The KbC graph is a weighted graph, created by tightly integrating keywords extracted from documents and concepts obtained from domain taxonomies. Documents in the corpus are associated to the nodes of the graph based on evidence supporting contextual relevance; thus, the KbC graph supports contextually informed access to these documents. In this paper, we also present CoSeNa (Context-based Search and Navigation) system that leverages the KbC model as the basis for document exploration and retrieval as well as contextually-informed media integration.'),
	(1279177, 'Object and Combination Shedding Schemes for Adaptive Media Workflow Execution.', '2010', 'IEEE Trans. Knowl. Data Eng.', 'Complex media fusion operations can be costly in terms of the time they need to process input objects. If data arrive faster to fusion nodes than the speed with which they can consume the inputs, this will result in some input objects not being processed. In this paper, we develop load shedding mechanisms which take into consideration both data quality and expensive nature of media fusion operators. In particular, we present quality assessment models for objects and multistream fusion operators and highlight that such quality assessments may impose partial orders on objects. We highlight that the most effective load control approach for fusion operators involves shedding of (not the individual input objects but) combinations of objects. Yet, identifying suitable combinations of objects in real time will not be possible if efficient combination selection algorithms do not exist. We develop efficient combination selection schemes for scenarios with different quality assessment and target characteristics. We first develop efficient combination-based load shedding when the fusion operator has unambiguously monotone semantics. We then extend this to the more general ambiguously monotone case and present experimental results that show the performance gains using quality-aware combination-based load shedding strategies under the various fusion scenarios.'),
	(1279294, 'Introduction to the special section for the best papers of ACM multimedia 2008.', '2009', 'TOMCCAP', ''),
	(1295319, 'Multimedia Data Querying.', '2009', 'Encyclopedia of Database Systems', ''),
	(1305468, 'Information-Gradient Based Decentralized Data Management over RFID Tag Clouds.', '2009', 'Mobile Data Management', 'The tasks in the physical environments are mainly information centric processes, such as search and exploration of physical objects. We have developed an informational environment, AURA that supports object searches in the physical world1. The goal of AURA is to enable individuals to use the environment in which they function as a living(short-term) memory of their activities and of the objects with which they interact in this environment. To support physical searches, the environment that the user is occupying must be transparently embedded with relevant information and made accessible by in-situ search mechanisms. We achieve this through innovative algorithms that re-imagine a collection of environmentally distributed RFID tags to act as a distributed storage cloud that encodes the required information for attribute-based object search. Since RFID tags lack radio transmitters and, thus, cannot communicate among each other, aura Prop and auraSearch leverage the movements of the humans in the environment to propagate information: as they move in the environment, users not only leave traces (or auras) of their own activities, but also help further disseminate auras of prior activities in the same space. This scheme creates an information-gradient in the physical environment which AURA then leverages to direct the user toward the object of interest. auraSearch significantly reduces the number of steps that the user has to walk while searching for a given object.'),
	(1341457, 'Organization and Tagging of Blog and News Entries Based on Content Reuse.', '2010', 'Signal Processing Systems', 'As their popularity as dynamic platforms for information dissemination and sharing increases, the use of Weblogs (blogs) which track and comment on real world (political, news, entertainment) events is also growing. The success of the blog as a popular medium for information sharing, on the other hand, is also its weakest spot in that there is little support beyond keyword based searches for blog entries. Consequently, there is impending need for navigational support, which can help users relate a large, diverse, and inherently distributed collection of blogosphere. In this paper, we first note that the existence of large degrees of content overlaps in the form of quotation/commentary pairs (as well as content borrowings across media outlets) can be leveraged for tracking the topic development patterns within the blogosphere. Relying on this observation, we first propose focus and flow analysis techniques that rely on reuse detection and focus and flow to help place blog entries into logical organizations. We then show that these implicit or explicit quotations as well as focus analysis could be leveraged to identify the contexts in which entries occur; thus, resulting in more effective tagging. Thus, we propose CDIP (a collection-driven, yet individuality-preserving tagging system) which relies on relationships provided by quotation/reuse detection and semantic-focus analysis to automatically tag the blogs in such a way that, not-only the related blogs share tags, but also individuality of the entries is preserved for discriminating tag-based accesses.'),
	(1515593, 'Relevant shape contour snippet extraction with metadata supported hidden Markov models.', '2010', 'CIVR', 'In most existing works on shape contour matching, the shape contours are considered and matched in whole. When searching for contour snippets, however, techniques that match whole contours are not directly applicable. In particular, a relevant snippet can be anywhere on a shape contour; moreover, the relevance of shape snippet is a function of not only the shape of the snippet itself, but also of its neighborhood on the contour. In this paper, we propose an HMM based solution to shape snippet extraction. Relying on a general-purpose symbolic representation (such as SAX), we first convert the shape contour onto a representation suitable for snippet marking and extraction processes. We then show that, given a set of samples, we can train an HMM capable of detecting relevant snippets in new shape images. Next, we show that the HMM performance can be boosted significantly if the similarities between the symbolic representations are used to create new sibling training sequences from the input sequences. The experiment results show that just adding one additional sibling per input training sequence can improve the diversity of the training set sufficiently to boost the overlaps between actual and detected snippets much. While a naive application of this metadata driven training technique can increase the training costs significantly, we show that a novel metadata-driven HMM (mHMM) scheme can significantly improve the HMM-base snippet detection performance with negligible costs.'),
	(1520818, 'Reducing metadata complexity for faster table summarization.', '2010', 'EDBT', 'Since the visualization real estate puts stringent constraints on how much data can be presented to the users at once, table summarization is an essential tool in helping users quickly explore large data sets. An effective summary needs to minimize the information loss due to the reduction in details. Summarization algorithms leverage the redundancy in the data to identify value and tuple clustering strategies that represent the (almost) same amount of information with a smaller number of data representatives. It has been shown that, when available, metadata, such as value hierarchies associated to the attributes of the tables, can help greatly reduce the resulting information loss. However, table summarization, whether carried out through data analysis performed on the table from scratch or supported through already available metadata, is an expensive operation. We note that the table summarization process can be significantly sped up when the metadata used for supporting the summarization itself is pre-processed to reduce the unnecessary details. The pre-processing of the metadata, however, needs to be performed carefully to ensure that it does not add significant amounts of additional loss to the table summarization process. In this paper, we propose a tRedux algorithm for value hierarchy pre-processing and reduction. Experimental evaluations show that, depending on the table and taxonomy complexity, metadata summarization can provide gains in table summarization time that can range (in absolute values) from seconds to 10s-of-1000s of seconds. Consequently, while resulting in only an extra ~ 20% reduction in table quality, tRedux can provide ~ 2x speedups in table summarization time. Experiments also show that tRedux has a better performance than alternative metadata reduction strategies in supporting table summarization; and, as the taxonomy complexity increases, the absolute gains of tRedux also increase.'),
	(1520849, 'Feedback-driven result ranking and query refinement for exploring semi-structured data collections.', '2010', 'EDBT', 'Feedback process has been used extensively in document-centric applications, such as text retrieval and multimedia retrieval. Recently, there have been efforts to apply feedback to semi-structured XML document collections as well. In this paper, we note that feedback can also be an effective tool for exploring (through result ranking and query refinement) large semi-structured data collections. In particular, in large scale data sharing and curation environments, where the user may not know the structure of the data, queries may initially be overly vague. Given a path query and a set of results identified by the system to this query over the data, we consider two types of feedback: Soft feedback captures the user\'s preference for some features over the others. Hard feedback, on the other hand, expresses users\' assertions regarding whether certain features should be further enforced or, in contrast, are to be avoided. Both soft and hard feedback can be positive or negative. For soft feedback, we develop a probabilistic feature significance measure and describe how to use this for ranking results in the presence of dependencies between the path features. To deal with the hard feedback efficiently (i.e., fast enough for interactive exploration), we present finite automata based query refinement solutions. In particular, we present a novel LazyDFA+ algorithm for managing hard feedback. We also describe optimizations that leverage the inherently iterative nature of the feedback process. We bring together these techniques in AXP, a system for adaptive and exploratory path retrieval. The experimental results show the effectiveness of the proposed techniques.'),
	(1531074, 'Enabling accessible interfaces to digital library content.', '2009', 'ICME', 'Most of the web interfaces are primarily designed for people with sight, with visually rich features that makes effective use of the tools to enhance visual usability but in process making it impossible for users who are blind or visually impaired to use them. In this work, our goal is to improve participation to NSF\'s National Science Digital Library1 (NSDL) by teachers, librarians, and learners who are blind. The middleware for accessible information spaces on NSDL (MAISON) is enhancing the accessibility of NSDL, its internal and external resources and existing services (such as strand maps of educational benchmarks). Relying on cutting-edge, context-aware graph segmentation, filtering and summarization, and concept propagation techniques, the middleware provides information space adaptation, reduction, and preview services through open web-based service APIs to enable implementation of informative navigation interfaces that are able to reduce the complexity of the information space and provide previews to prevent user disorientation.'),
	(1542975, 'Advances in Multimedia Information Systems, 11th International Workshop, MIS 2005, Sorrento, Italy, September 19-21, 2005, Proceedings', '2005', 'Multimedia Information Systems', ''),
	(1543022, 'Proceedings of the 16th International Conference on Multimedia 2008, Vancouver, British Columbia, Canada, October 26-31, 2008', '2008', 'ACM Multimedia', ''),
	(1578685, 'How Does the Data Sampling Strategy Impact the Discovery of Information Diffusion in Social Media?', '2010', 'ICWSM', ''),
	(794244, 'Facilitating Complex Web Queries Through Visual User Interfaces and Query Relaxation.', '1998', 'Computer Networks', ''),
	(1238347, 'Workshop Organizers\' Message.', '2009', 'DASFAA Workshops', 'The recent advancement of workflow technologies and adoption of the Service-Oriented Architecture (SOA) has much facilitated the automation of business collaboration within and across organizations to increase their competiveness and responsiveness to the fast evolving global economic environment. The widespread of mobile technologies has further resulted in an increasing demand for the support of Mobile Business Collaboration (MBC) across multiple platforms anytime and anywhere. Examples include supply-chain logistics, group calendars, and dynamic human resources planning. As mobile devices become more powerful, the adoption of mobile computing is imminent. However, mobile business collaboration is not merely porting the software with an alternative user interface, but rather involves a wide range of new requirements, constraints, and technical challenges.'),
	(1303112, 'Ontology Based Content Management for Digital Television Services.', '2009', 'ICEBE', 'Traditional Content Management Systems (CMS) for Digital Television (TV) services usually attempt to provide friendly user interfaces with some content information for attracting new subscriptions. However, the searching and subscription functions provide limited abilities for user requirement elicitation and matchmaking of contents. With the help of ontology, this paper purposes an agent-based Content Management System for Digital TV services. Not only users can retrieve matched contents effectively, service providers can also obtain multi-level analysis of user behaviors and achieve cross-sale of contents and services. We demonstrate the flexibility of our approach with a sample ontology and system architecture.'),
	(1303118, 'Designing a Credit Approval System Using Web Services, BPEL, and AJAX.', '2009', 'ICEBE', 'In the business world, financial institutions, like banks and investment firms, heavily rely on technology to manipulate daily operations and support business. Many more business processes have now become automated and require procedures to be approved. For example, when providing business services liked personal / corporate loans, mortgage, or Letter of Credit (LC), a customer is required to submit information within their applications; whereas, the service provider has to perform complicated approval procedures, involving different departments or even external parties. In this paper, we discuss how a Credit Approval System (CAS) handles the workflow of such business processes. The system is extensible to contemporary technologies including Business Process Execution Language (BPEL), Asynchronous JavaScript and XML (AJAX), and Java Server Face (JSF) in order to coordinate related parties through the Internet as well as to facilitate the operations and communications with different levels of staff in the Intranet. Our experiences and design characteristics will be further implemented into a system designed for a global financial firm.'),
	(330271, 'Protocol for Collaborative Multimedia Presentations.', '2000', 'IEEE International Conference on Multimedia and Expo (I)', ''),
	(1016853, 'Unified Read Requests.', '2003', 'Multimedia Tools Appl.', 'Most work on multimedia storage systems has assumed that clients will be serviced using a round-robin strategy. The server services the clients in rounds and each client is allocated a time slice within that round. Furthermore, most such algorithms are evaluated on the basis of a tightly specified cost function. This is the basis for well known algorithms such as FCFS, SCAN, SCAN-EDF, etc.In this paper, we describe a Request Merging (RM) module that takes as input, a set of client requests, and a set of constraints on the desired performance such as client waiting time or maximum disk bandwidth, and a cost function. It produces as output, a Unified Read Request (URR), telling the storage server which data items to read, and when the clients would like these data items to be delivered to them. Given a cost function cf, a URR is optimal if there is no other URR satisfying the constraints with a lower cost. We present three algorithms in this paper, each of which accomplishes this kind of request merging. The first algorithm OptURR is guaranteed to produce minimal cost URRs with respect to arbitrary cost functions. In general, the problem of computing an optimal URR is NP-complete, even when only two data objects are considered. To alleviate this problem, we develop two other algorithms, called GreedyURR and FastURR that may produce sub-optimal URRs, but which have some nicer computational properties. We will report on the pros and cons of these algorithms through an experimental evaluation.'),
	(1016855, 'Application-Layer Protocol for Collaborative Multimedia Presentations.', '2003', 'Multimedia Tools Appl.', 'Many multimedia presentation applications involve retrieval of objects from more than one collaborating server. Presentations of objects from different collaborating servers might be interdependent. For instance, we can consider distributed video servers where blocks of movies are distributed over a set of servers. Here, blocks of a movie from different video servers have to be retrieved and presented continuously without any gaps in the presentation. Such applications first need an estimate of the available network resources to each of the collaborating server in order to identify a schedule for retrieving the objects composing the presentation. A collaborating server can suggest modifications of the retrieval schedule depending on its load. These modifications can potentially affect the retrieval schedule for other collaborating applications. Hence, a sequence of negotiations have to be carried out with the collaborating servers in order to commit for a retrieval schedule of the objects composing the multimedia presentation. In this paper, we propose an application sub-layer protocol, Resource Lock Commit Protocol (RLCP), for handling the negotiation and commitment of the resources required for a collaborative multimedia presentation application.'),
	(599972, 'Contour map matching for event detection in sensor networks.', '2006', 'SIGMOD Conference', 'Many sensor network applications, such as object tracking and disaster monitoring, require effective techniques for event detection. In this paper, we propose a novel event detection mechanism based on matching the contour maps of in-network sensory data distribution. Our key observation is that events in sensor networks can be abstracted into spatio-temporal patterns of sensory data and that pattern matching can be done efficiently through contour map matching. Therefore, we propose simple SQL extensions to allow users to specify common types of events as patterns in contour maps and study energy-efficient techniques of contour map construction and maintenance for our pattern-based event detection. Our experiments with synthetic workloads derived from a real-world coal mine surveillance application validate the effectiveness and efficiency of our approach.'),
	(1518177, 'Database Systems for Advanced Applications, DASFAA 2009 International Workshops: BenchmarX, MCIS, WDPP, PPDA, MBC, PhD, Brisbane, Australia, April 20-23, 2009', '2009', 'DASFAA Workshops', ''),
	(600062, 'Lazy, adaptive rid-list intersection, and its application to index anding.', '2007', 'SIGMOD Conference', 'RID-List (row id list) intersection is a common strategy in query processing, used in star joins, column stores, and even search engines. To apply a conjunction of predicates on a table, a query process ordoes index lookups to form sorted RID-lists (or bitmap) of the rows matching each predicate, then intersects the RID-lists via an AND-tree, and finally fetches the corresponding rows to apply any residual predicates and aggregates. This process can be expensive when the RID-lists are large. Furthermore, the performance is sensitive to the order in which RID lists are intersected together, and to treating the right predicates as residuals. If the optimizer chooses a wrong order or a wrong residual, due to a poor cardinality estimate, the resulting plan can run orders of magnitude slower than expected. We present a new algorithm for RID-list intersection that is both more efficient and more robust than this standard algorithm. First, we avoid forming the RID-lists up front, and instead form this lazily as part of the intersection. This reduces the associated IO and sort cost significantly, especially when the data distribution is skewed. It also ameliorates the problem of wrong residual table selection. Second, we do not intersect the RID-lists via an AND-tree, because this is vulnerable to cardinality mis-estimations. Instead, we use an adaptive set intersection algorithm that performs well even when the cardinality estimates are wrong. We present detailed experiments of this algorithm on data with varying distributions to validate its efficiency and predictability.'),
	(643126, 'QoS-based Data Access and Placement for Federated Information Systems.', '2005', 'VLDB', ''),
	(643554, 'Parallel Querying with Non-Dedicated Computers.', '2005', 'VLDB', 'We present DITN, a new method of parallel querying based on dynamic outsourcing of join processing tasks to non-dedicated, heterogeneous computers. In DITN, partitioning is not the means of parallelism. Data layout decisions are taken outside the scope of the DBMS, and handled within the storage software; query processors see a Data In The Network image. This allows gradual scaleout as the workload grows, by using non-dedicated computers.A typical operator in a parallel query plan is Exchange [7]. We argue that Exchange is unsuitable for non-dedicated machines because it poorly addresses node heterogeneity, and is vulnerable to failures or load spikes during query execution. DITN uses an alternate intra-fragment parallelism where each node executes an independent select-project-join-aggregate-group by block, with no tuple exchange between nodes. This method cleanly handles heterogeneous nodes, and well adapts during execution to node failures or load spikes.Initial experiments suggest that DITN performs competitively with a traditional configuration of dedicated machines and well-partitioned data for up to 10 processors at least. At the same time, DITN gives significant flexibility in terms of gradual scaleout and handling of heterogeneity, load bursts, and failures.'),
	(341276, 'BYPASS: Topology-Aware Lookup Overlay for DHT-based P2P File Locating Services.', '2004', 'ICPADS', 'In this paper we propose a novel peer-to-peer filelocation system, BYPASS, to enhance the distributed filelookup time in DHT-based P2P systems. BYPASSconstructs a secondary overlay in which file locationinformation is distributed considering heterogeneity ofpeer capabilities and network proximity between requestsand results. The secondary overlay in BYPASS allows onlyhigh-capability peers to participate in the system-wide filelookup and takes advantage of physical network proximitybased on the Autonomous System (AS) network topology.We evaluate effectiveness of BYPASS using a set of large-scalesimulations. The results show that BYPASS cansignificantly reduce file lookup latency at the cost ofadditional, yet acceptable storage and network resources.'),
	(571374, 'An Efficient Peer-to-Peer File Sharing Exploiting Hierarchy and Asymmetry.', '2003', 'SAINT', 'Many Peer-to-Peer (P2P) file sharing systems havebeen proposed to take advantage of high scalability andabundant resources at end-user machines. Previousapproaches adopted either simple flooding or routingwith complex structures, such as Distributed HashingTables (DHT). However, these approaches did notconsider the heterogeneous nature of the machines andthe hierarchy of networks on the Internet. This paperpresents Peer-to-peer Asymmetric file Sharing System(PASS), a novel approach to P2P file sharing, whichaccounts for the different capabilities and networklocations of the participating machines. Our systemselects only a portion of high-capacity machines(supernodes) for routing support, and organizes thenetwork by using location information. We show that ourkey-coverage based directory replication improves the filesearch performance to a small constant number of routinghops, regardless of the network size.'),
	(1616136, 'Guest Editors\' Introduction: Advances in Interactive Digital Entertainment Technologies.', '2009', 'Journal of Multimedia', ''),
	(301750, 'Finding Top-k Min-Cost Connected Trees in Databases.', '2007', 'ICDE', ''),
	(939956, 'Location dependent query in a mobile environment.', '2003', 'Inf. Sci.', 'The Location Dependent Query is one of the most meaningful and interesting research topics in mobile environment. However, no work till now has considered the attainability between two objects when answering Location Dependent Queries. In this paper, we focus on how to support target objects\' attainability information when dealing with Location Dependent Queries. We introduce some definitions to formalize the concept of attainability. Further, we present the Reachability Graph to index static target objects for supporting attainability. Next, we describe the architecture of a prototype, which contains the Reachability Graph as a main component and is designed to answer Location Dependent Queries. We also conduct initial tests with a number of datasets to query k nearest reachable objects to show the effectiveness of our methods.'),
	(1234960, 'A Database Approach for Accelerate Video Data Access.', '2009', 'APWeb/WAIM Workshops', 'In this paper, we studied the efficiency and break-event point of storing video objects into DBMS and proved that storing small video objects into database is a suitable solution. To the video objects that stored in database as BLOB data type, we devised a database based time-oriented approach to speed up the video content access. Our experiments showed that, because of we extracted some system-aware metadata and stored into database transparently, the read performance was become practicable.'),
	(1511973, 'Towards Video Management over Relational Database.', '2010', 'APWeb', 'Video has become popular in our daily life for both professional and consumer applications. Both low level video processing and high level semantic video analysis are critically computational tasks in application domains. Most of current video computing tools are developed for specific analytic tasks, they are lack higher level interoperability with database and treat database merely as a relational data storage engine rather than an analytic platform, which causes inefficient data access and massive amount of data movement. In this paper, we study how to support video data management over relational database, and present our initial solutions of video data storage mechanism, video data access method and efficient video analytics. We also illustrate our ongoing prototype system HybVideo that developed in a novel architecture. It integrates above solutions to tackle the major challenges of providing a platform for both storage and analysis of video data.'),
	(1512036, 'Managing a Large Shared Bank of Unstructured Data by Using Free-Table.', '2010', 'APWeb', 'This paper presents a reference framework, called BUD, to manage a large shared bank of unstructured data. This paper lists several important issues on managing or maintaining the unstructured data in BUD. BUD stores and manages the ever-growing unstructured data by introducing a novel technique called free-table, which is a conceptual view for end-users and a physical entity maintained by transactional storage manager of BUD. Free-table is cell-oriented but not column-oriented as relational table. It can store various types of unstructured data in cell with different versions. Additionally, we study two cases, VMP and PXRDB, to show that our proposal is feasible and tractable.'),
	(186044, 'The Minimum Range Assignment Problem on Linear Radio Networks.', '2000', 'ESA', ''),
	(267543, 'Fractional Path Coloring with Applications to WDM Networks.', '2001', 'ICALP', ''),
	(408179, 'Sorting-Based Selection Algorithms for Hypercube Networks.', '1993', 'IPPS', ''),
	(408642, 'De Bruijn Isomorphisms and Free Space Optical Networks.', '2000', 'IPDPS', ''),
	(614033, 'All-to-All Routing and Coloring in Weighted Trees of Rings.', '1999', 'SPAA', ''),
	(615089, 'Optimal Information Dissemination in Star and Pancake Networks.', '1993', 'SPDP', ''),
	(660501, 'Approximate Constrained Bipartite Edge Coloring.', '2001', 'WG', 'We study the following Constrained Bipartite Edge Coloring problem: We are given a bipartite graph G=(U,V,E) of maximum degree I with n vertices, in which some of the edges have been legally colored with c colors. We wish to complete the coloring of the edges of G minimizing the total number of colors used. The problem has been proved to be NP-hard even for bipartite graphs of maximum degree three. Two special cases of the problem have been previously considered and tight upper and ower bounds on the optimal number of colors were proved. The upper bounds led to 3/2-approximation algorithms for both problems. In this paper we present a randomized (1.37+o(1))-approximation algorithm for the general problem in the case where max{l,c} = ?(ln n). Our techniques are motivated by recent works on the Circular Arc Coloring problem and are essentially different and simpler than the existing ones.'),
	(749752, 'Sorting-Based Selection Algorithms for Hypercubic Networks.', '2000', 'Algorithmica', ''),
	(749914, 'The Minimum Range Assignment Problem on Linear Radio Networks.', '2003', 'Algorithmica', ''),
	(836055, 'Optimal Wavelength-routed Multicasting.', '1998', 'Discrete Applied Mathematics', ''),
	(836331, 'Approximate constrained bipartite edge coloring.', '2004', 'Discrete Applied Mathematics', 'We study the following Constrained Bipartite Edge Coloring problem: We are given a bipartite graph G=(U,V,E) of maximum degree I with n vertices, in which some of the edges have been legally colored with c colors. We wish to complete the coloring of the edges of G minimizing the total number of colors used. The problem has been proved to be NP-hard even for bipartite graphs of maximum degree three. Two special cases of the problem have been previously considered and tight upper and ower bounds on the optimal number of colors were proved. The upper bounds led to 3/2-approximation algorithms for both problems. In this paper we present a randomized (1.37+o(1))-approximation algorithm for the general problem in the case where max{l,c} = ?(ln n). Our techniques are motivated by recent works on the Circular Arc Coloring problem and are essentially different and simpler than the existing ones.'),
	(986586, 'Tight Bounds for Broadcasting in the Linear Cost Model.', '2001', 'Journal of Interconnection Networks', ''),
	(1024299, 'Isomorphisms of the De Bruijn digraph and free-space optical networks.', '2002', 'Networks', ''),
	(1099156, 'Models, Complexity and Algorithms for the Design of Multi-fiber WDM Networks.', '2003', 'Telecommunication Systems', ''),
	(1124650, 'Optimal Information Dissemination in Star and Pancake Networks.', '1996', 'IEEE Trans. Parallel Distrib. Syst.', 'This paper presents a new decomposition technique for hierarchical Cayley graphs. This technique yields a very easy implementation of the divide and conquer paradigm for some problems on very complex architectures as the star graph or the pancake. As applications, we introduce algorithms for broadcasting and prefix-like operations that improve the best known bounds for these problems. We also give the first nontrivial optimal gossiping algorithms for these networks. In star-graphs and pancakes with N = n! processors, our algorithms take less than $lceil {rm log} Nrceil + 1.5n$ steps.'),
	(369558, 'e-Learning Martial Arts.', '2006', 'ICWL', ''),
	(150356, 'XG: A Data-Driven Computation Grid for Enterprise-Scale Mining.', '2005', 'DEXA', ''),
	(176696, 'Load distribution of analytical query workloads for database cluster architectures.', '2008', 'EDBT', 'Enterprises may have multiple database systems spread across the organization for redundancy or for serving different applications. In such systems, query workloads can be distributed across different servers for better performance. A materialized view, or Materialized Query Table (MQT), is an auxiliary table with pre-computed data that can be used to significantly improve the performance of a database query. In this paper, we propose a framework for coordinating execution of OLAP query workloads across a database cluster with shared nothing architecture. Such coordination is complex since we need to consider (1) the time to build the MQTs, (2) the query execution impact of the MQTs, (3) whether the MQTs can fit in the disk space limitation, (4) server computation power, and (5) the effectiveness of the scheduling and placement algorithms in deriving a combination of configurations so that the workload can be completed in the shortest time period. We frame the problem as a combinatorial problem with a solution space that is exponential in the number of queries, MQTs, and servers. We provide a stochastic search heuristic that finds a near-optimal mapping of queries-to-servers and MQTs-to-servers within an arbitrarily bounded time and compare our solution with an exhaustive search and three standard greedy algorithms. Our search implementation produced schedules within 9% of the optimal found through an exhaustive search and produced better solutions than typical greedy algorithms for both TPC-H and synthetic benchmarks under a variety of experiments. For a key trial where disk space is limited, it produced 15% better results than the next best competitor, corresponding to an absolute wall clock advantage of over 10 hours.'),
	(256344, 'Object-based Navigation: An Intuitive Navigation Style for Content-Oriented Integration Environment.', '1997', 'Hypertext', ''),
	(256463, 'Defining logical domains in a web site.', '2000', 'Hypertext', ''),
	(298157, 'J2EE Architecture for Database Cluster-Based High Volume E-Commerce Web Applications.', '2008', 'ICDCS', 'High volume database-driven e-commerce applications demand a cluster-based infrastructure to offers high availability, scalability and fault tolerance. The current J2EE architecture and containers restrict the transparent deployment of applications over database clusters without engineering data access logic into the applications. Our work extends the J2EE architecture to allow transparent deployment of J2EE applications on a database cluster. The key challenge is to load balance read and write queries between the master and replica database instance and yet provide the application with the most recent data in the cluster while enabling service class based query routing. We validate the applicability and effectiveness of the proposed architecture using IBM WebSphere Trade3 stock trading application.'),
	(300502, 'Load Balancing for Multi-tiered Database Systems through Autonomic Placement of Materialized Views.', '2006', 'ICDE', 'A materialized view or Materialized Query Table (MQT) is an auxiliary table with precomputed data that can be used to significantly improve the performance of a database query. AMaterialized Query Table Advisor (MQTA) is often used to recommend and create MQTs. The state-of-the-art MQTA works in a standalone database server where MQTs are placed on the same server as that in which the base tables are located. The MQTA does not apply to a federated or scaleout scenario in which MQTs need to be placed on other servers close to applications (i.e. a frontend database server) for offloading the workload on the backend database server. In this paper, we propose a Data Placement Advisor (DPA) and load balancing strategies for multi-tiered database systems. Built on top of the MQTA, DPA recommends MQTs and advises placement strategies for minimizing the response time for a query workload. To demonstrate the benefit of the data placement advising, we implemented a prototype of DPA that works with theMQTA in the IBM® DB2® Universal Database^TM (DB2 UDB) and the IBM WebSphere® Information Integrator (WebSphere II). The evaluation results showed substantial improvements of workload response times when MQTs are intelligently recommended and placed at a frontend database server subject to space and load characteristics for TPC-H and OLAP type workloads.'),
	(301926, 'Dynamic Materialization of Query Views for Data Warehouse Workloads.', '2008', 'ICDE', 'A materialized view, or Materialized Query Table (MQT), is an auxiliary table with precomputed data that can be used to significantly improve the performance of a database query. Previous research efforts have focused onfinding the best candidate MQT set, with a common static heuristic being to greedily pre-materialize the MQTs prior to executing the workload. While this approach is sound when the size of the MQT set on disk is small, it will not be able to pre-materialize all MQTs and indexes when faced with real-world disk limits and view maintenance costs, and thus a static heuristic will fail to exploit the potentially large benefits of those MQTs not selected for materialization. In this paper we present an automated, dynamic MQT management scheme that materializes views and creates indexes in an on-demand fashion as a workload executes and manages them with an LRU cache. In order to maximize the benefit of executing queries with MQTs, the scheme makes an adaptive tradeoff between the MQT materializations, the base table accesses, and the benefit of MQT hits in the cache. To find the workload permutation that produces the overall highest net benefit, we use a genetic algorithm to search the N! solution space, and to avoid materializing seldom-used MQTs, we prune the set of MQT candidates.'),
	(330214, 'Integrating Image Matching and Classification for Multimedia Retrieval on the Web.', '1999', 'ICMCS, Vol. 1', 'With the recent explosive growth in the volume of images on the World-Wide Web, it has become increasingly difficult to search for images of interests. The classification of images helps users to access a large image collection efficiently. Classification reduces search space by filtering unrelated images. In this paper, we present a technique for image classification based on color, shape and composition using the primary objects. Our experimental results show that this approach can maintain 73% of recall just by searching 24% of the whole data set. The classification results are also used to improve the users\' interaction. The retrieval candidates are categorized based on the primary objects and presented to the users. We also show how we apply such technique to assist users in navigation.'),
	(500137, 'Heuristics-based scheduling of composite web service workloads.', '2006', 'MW4SOC', 'Web services can be aggregated to create composite workflows that provide streamlined functionality for human users or other systems. Although industry standards and recent research have sought to define best practices and to improve end-to-end workflow composition, one area that has not fully been explored is the scheduling of a workflow\'s web service requests to actual service provisioning in a multi-tiered, multi-organisation environment. This issue is relevant to modern business scenarios where business processes within a workflow must complete within QoS-defined limits. Because these business processes are web service consumers, service requests must be mapped and scheduled across multiple web service providers, each with its own negotiated service level agreement. In this paper we provide heuristics for scheduling service requests from multiple business process workflows to web service providers such that a business value metric across all workflows is maximised. We show that a genetic search algorithm is appropriate to perform this scheduling, and through experimentation we show that our algorithm scales well up to a thousand workflows and produces better mappings than traditional approaches.'),
	(644138, 'Deadline and QoS Aware Data Warehouse.', '2007', 'VLDB', 'A data warehouse infrastructure needs to support the requirement of (day time) ad hoc query response time and (night time) batch workload completion time. The following tasks need to be finished in a batch window: (1) Apply one day\'s delta data to the base tables; (2) refresh MQTs (Materialized Query Tables) for ad hoc queries and batch workloads; (3) run batch queries. Tools are available to optimize each step; however, many factors need to be considered for improving the overall performance of a data warehouse (i.e. meeting batch window deadline and ad hoc query response time). We have prototyped a Data Warehouse Operation Advisor to systematically study each component contributing to the batch window problem, and then perform global optimization to achieve desired results!'),
	(674405, 'Constructing multi-granular and topic-focused web site maps.', '2001', 'WWW', ''),
	(674709, 'Acceleration of Web Service Workflow Execution through Edge Computing.', '2003', 'WWW (Alternate Paper Tracks)', ''),
	(845901, 'On demand synchronization and load distribution for database grid-based Web applications.', '2004', 'Data Knowl. Eng.', 'With the availability of content delivery networks (CDN), many database-driven Web applications rely on data centers that host applications and database contents for better performance and higher reliability. However, it raises additional issues associated with database/data center synchronization, query/transaction routing, load balancing, and application result correctness/precision. In this paper, we investigate the issues in the context of data center synchronization for such load and precision critical Web applications in a distributed data center infrastructure. We develop a scalable scheme for adaptive synchronization of data centers to maintain the load and application precision requirements. A prototype has been built for the evaluation of the proposed scheme. The experimental results show the effectiveness of the proposed scheme in maintaining both application result precision and load distribution; adapting to traffic patterns and system capacity limits.'),
	(846232, 'Load balancing and data placement for multi-tiered database systems.', '2007', 'Data Knowl. Eng.', 'A materialized view or Materialized Query Table (MQT) is an auxiliary table with precomputed data that can be used to significantly improve the performance of a database query. A Materialized Query Table Advisor (MQTA) is often used to recommend and create MQTs. The state-of-the-art MQTA works in a standalone database server where MQTs are placed on the same server as that in which the base tables are located. The MQTA does not apply to a federated or scaleout scenario in which MQTs need to be placed on other servers close to applications (i.e. a frontend database server) for offloading the workload on the backend database server. In this paper, we propose a Data Placement Advisor (DPA) and load balancing strategies for multi-tiered database systems. Built on top of the MQTA, DPA recommends MQTs and advises placement strategies for minimizing the response time for a query workload. To demonstrate the benefit of the data placement advising, we implemented a prototype of DPA that works with the MQTA in the IBM^(R) DB2^(R) Universal Database(TM) (DB2 UDB) and the IBM WebSphere^(R) Information Integrator (WebSphere II). The evaluation results showed substantial improvements of workload response times when MQTs are intelligently recommended and placed on a frontend database server subject to space and load characteristics for TPC-H and OLAP type workloads.'),
	(1016817, 'Integration of Image Matching and Classification for Multimedia Navigation.', '2000', 'Multimedia Tools Appl.', 'With the recent explosive growth in the volume of images on the World-Wide Web, it has become increasingly difficult to search for images of interests. The classification of images helps users to access a large image collection efficiently. Classification reduces search space by filtering out unrelated images. Classification also allows for more user-friendly interfaces: users can better visualize easily result space by browsing the representative images of the candidates. In this paper, we present a technique for image classification based on color, shape and composition using the primary objects. We apply this classification technique in image matching for image retrieval on the Web. Our experimental results show that this approach can maintain 73% of recall by searching only 24% of the whole data set. We also show how we apply such technique to assist users in navigation.'),
	(1077777, 'Facilitating Object-Based Navigation Through Multimedia Web Databases.', '1998', 'TAPOS', ''),
	(1185942, 'A request-routing framework for SOA-based enterprise computing.', '2008', 'PVLDB', 'Enterprises may use a service-oriented architecture (SOA) to provide a streamlined interface to their business processes. To scale up the system, each tier in a composite service usually deploys multiple servers for load distribution and fault tolerance. Such load distribution across multiple servers within the same tier can be viewed as horizontal load distribution. One limitation of this approach is that load cannot be further distributed when all servers in the same tier are fully loaded. In complex multi-tiered systems, a single business process may actually be implemented by multiple different computation pathways among the tiers, each with different components, in order to provide resiliency and scalability. Such SOA-based enterprise computing with multiple implementation options gives opportunities for vertical load distribution across tiers. In this paper, we propose a requestrouting framework for SOA-based enterprise computing that takes into consideration both horizontal and vertical load distribution. Through experimentation we show that our algorithm and methodology scale well up to a large system configuration comprising up to 1000 workflow requests to a complex composite service with multiple implementations. We also show that a combination of both horizontal and vertical load distributions gives the maximum flexibility to improve performance and fault tolerance.'),
	(48288, 'Identifying Agitators as Important Blogger Based on Analyzing Blog Threads.', '2006', 'APWeb', ''),
	(212363, 'Augmented Hypermedia: System Integration and Usability.', '1998', 'FODO', 'This paper overviews recent hypermedia related research activities from the viewpoint of augmented hypermedia, a multiplier of value-added information processing, for the hypermedia. We explain the key functions of sharing, refining, and aggregating the hypermedia structure with showing the examples of our projects and related work. System architecture and usability issues are also presented. Making new meaningful associations on the hypermedia will play an important role of creating knowledge, which results in increasing the qualified information usability.'),
	(256340, 'Media-Based Navigation for Hypermedia Systems.', '1993', 'Hypertext', ''),
	(256342, 'Content-oriented Integration in Hypermedia System.', '1996', 'Hypertext', ''),
	(256346, 'Miyabi: A Hypertext Database with Media-Based Navigation (Video).', '1993', 'Hypertext', ''),
	(256456, 'Focus + Context Views of World-Wide Web Nodes.', '1997', 'Hypertext', ''),
	(300081, 'Hypermedia Database ``Himotoki\'\' and Its Applications.', '1996', 'ICDE', 'This paper describes the design concept of a hypermedia database Himotoki and its navigational capabilities. A hypermedia database is a system that integrates hypermedia operations with database models. Advantages are: (a) its structured design can improve authoring and browsing capabilities for large hypermedia applications, (b) nodes and links can be automatically generated under a certain condition, (c) navigational data interface for DBMS is obtained, etc.For providing cost-effective operations as hypermedia databases, we introduce a set-to-set linking and the navigational functions, i.e., media-based navigation, schema navigation, moving hot-spot navigation. These functional capabilities make media contents well-organized so as to improve the human-machine interactive interface. Implemented applications such as Electronic Aquatic Life and Hypermedia Museum demonstrate the usefulness of Himotoki navigational functions and customizability of its architectural design.'),
	(460552, 'Visualizing World-Wide Web Search Engine Results.', '1999', 'IV', ''),
	(520070, 'Using clustering and visualization for refining the results of a WWW image search engine.', '1998', 'Workshop on New Paradigms in Information Visualization and Manipulation', ''),
	(794941, 'Towards a Multimedia World-Wide Web Information Retrieval Engine.', '1997', 'Computer Networks', ''),
	(1141828, 'AMORE: A World Wide Web Image Retrieval Engine.', '1999', 'World Wide Web', 'Advanced Multimedia Oriented Retrieval Engine (AMORE) [2] is a World-Wide Web image retrieval engine integrating several techniques to facilitate effective retrieval of images from the Web. With the explosive growth of information that is available through the WWW, it is becoming increasingly difficult for the users to find the information of interest. Therefore, search engines are becoming very popular and useful. However, most of the popular search engines today are textual. Although most Web pages have images, the current image search engines on the WWW are primitive.For traditional text retrieval the only way to search for relevant documents is by specifying keywords. However, for multimedia retrieval it is essential that the user is provided with various options for retrieving the target image. AMORE allows the user to retrieve images of interest using various techniques.The effectiveness of an information retrieval engine is also dependent on the user interface to show the retrieved images. In AMORE, the retrieved images are shown using thumbnails. Like traditional WWW search engines the user can browse through pages of results. We also allow the user to click on an interesting thumbnail and retrieve similar images. This visual navigation strategy is helpful in quickly retrieving the target images. To help the user if many images are retrieved we have also developed a Query Result Visualization Environment. This interface allows the search results to be organized in various ways. We believe that the integration of information retrieval with visualization is helpful for the user\'s retrieval tasks.'),
	(299311, 'On Querying and Exploring Activities on a User\'s Desktop.', '2006', 'ICDE Workshops', 'Many desktop query and management systems offer an object oriented view of a computer, where the emphasis is on describing the information relevant to an object. However, objects may be related to each other in different ways and in different contexts. In this paper, we argue that users create and modify data as a function of activities they are involved in. We develop methods to explore objects on a desktop through activities. Our methods integrate discovered relationships between data objects based on their participation in different activities as well as other properties. Our activity model is well suited to support a query language that is able to alter the context and the definition of an activity to easily visualize complex relationships in data. We show that this new organization makes many new interesting desktop functionalities a reality.'),
	(500662, 'Ranked Relations: Concepts, Applications and Query Languages for Multimedia.', '2003', 'Multimedia Information Systems', ''),
	(500723, 'Retrieving Consistent Multimedia Presentation Fragments.', '2002', 'Multimedia Information Systems', ''),
	(518647, 'Topic Development Based Refinement of Audio-Segmented Television News.', '2008', 'NLDB', 'With the advent of the cable based television model, there is an emerging requirement for random access capabilities, from a variety of media channels, such as smart terminals and Internet. Random access to the information within a newscast program requires appropriate segmentation of the news. We present text analysis based techniques on the transcript of the news, to refine the automatic audio-visual segmentation. We present the effectiveness of applying the text segmentation algorithm CUTS to the news segmentation domain. We propose two extensions to the algorithm, and show their impacts through an initial evaluation.'),
	(628228, 'Representing and Reasoning with Temporal Constraints in Multimedia Presentations.', '2000', 'TIME', 'With the growing use of computers to create technical, business and personal presentations, there has been a huge increase in the number of multimedia presentation tools out in the market. Thus, over the coming years, there will be a growing need to build the ability to query rapidly databases consisting of interactive multimedia presentation.The MPA algebra proposed in [Adali, Sapino, Subrahmanian, An Algebra for Creating and Querying Multimedia Presentations, ACM Multimedia Systems Journal, to appear] provides a specification of how primitive algebraic operations on interactive multimedia presentation can be implemented. In this paper, we define a temporal extension of MPA dealing with temporal constraints in the representation and in the queries. In particular, we point out the different types of (explicit and implicit) temporal constraints within a multimedia presentation and define a suitable framework in which the different types of constraints can be represented and queries (regarding also the temporal aspects) can be answered efficiently.'),
	(1011105, 'Retrieval in multimedia presentations.', '2004', 'Multimedia Syst.', ''),
	(1016627, 'Ranked Relations: Query Languages and Query Processing Methods for Multimedia.', '2004', 'Multimedia Tools Appl.', 'In this paper, we describe the notion of a ranked relation that incorporates to the relational data model the notion of rank, i.e. ordering among tuples or objects. The ordering of tuples may be based on a single rank information, or multiple ranks combined together. We show that such relations arise naturally in many applications, especially in applications that query outside sources and return ranked relations as answers to content based queries. We introduce an algebra for querying ranked relations and give examples of its use for various applications. We then prove various properties of the algebra with special emphasis on the preservation of the coherence property, which shows when different rank columns are guaranteed to induce the same ordering among tuples. We show how these properties can be used to produce approximate early returns. Finally, we give experimental results based on Internet search engines for our early returns method and show that our method provides meaningful and fast answers to the user.'),
	(503796, 'Second international workshop on story representation, mechanism and context (SRMC 2008).', '2008', 'ACM Multimedia', 'Stories are one of the primary forms we use to organize our lived experiences into patterned narratives that aspire to communicate that which is memorable and valuable. SRMC 2008 provides a forum for multimedia researchers and practitioners to share their novel insights and understandings of the human and machine storytelling abilities necessary for the development of engaging, participatory and sustainable multimedia systems.'),
	(1543029, 'Proceedings of the 2nd ACM Workshop on Story Representation, Mechanism and Context, SRMC 2008, Vancouver, British Columbia, Canada, October 31, 2008', '2008', 'SRMC', ''),
	(32225, 'Perceived Consistency.', '2001', 'AICCSA', 'Abstract: Quality of service guarantees for multimedia communication systems have been considered on several abstraction levels. In the multimedia networking field it is typical to identify the minimal QoS requirements of an application to save resources by guaranteeing its functionality. Many of these applications can operate in spite of an imperfect delivery of media data, while other applications such as distributed databases or distributed filesystems consider perfect QoS necessary but accept delay. The basic problems of the latter is the consistency of their data, while the former require a consistent perception of the content. More generically, both QoS requirements can be interpreted as a problem of maintaining a consistent system state. Consequently we assume that many distributed applications, including most distributed multimedia applications, can fulfil their tasks in spite of imperfect consistency. Since the application requirements differ widely, the elements that make up consistency must be separated and classified. This paper introduces Consistency QoS and proposes a classification of elements that determine an application\'s consistency requirements. The low level QoS requirements that these separate parameters rely on are shown, and example parameter sets for application classes are given.'),
	(373266, 'Exploiting User Behaviour in Prefetching WWW Documents.', '1998', 'IDMS', ''),
	(96476, 'Summarization of social activity over time: people, actions and concepts in dynamic networks.', '2008', 'CIKM', 'We present a framework for automatically summarizing social group activity over time. The problem is important in understanding large scale online social networks, which have diverse social interactions and exhibit temporal dynamics. In this work we construct summarization by extracting activity themes. We propose a novel unified temporal multi-graph framework for extracting activity themes over time. We use non-negative matrix factorization (NMF) approach to derive two interrelated latent spaces for users and concepts. Activity themes are extracted from the derived latent spaces to construct group activity summary. Experiments on real-world Flickr datasets demonstrate that our technique outperforms baseline algorithms such as LSI, and is additionally able to extract temporally representative activities to construct meaningful group activity summary.'),
	(96581, 'Multi-scale characterization of social network dynamics in the blogosphere.', '2008', 'CIKM', 'We have developed a computational framework to characterize social network dynamics in the blogosphere at individual, group and community levels. Such characterization could be used by corporations to help drive targeted advertising and to track the moods and sentiments of consumers. We tested our model on a widely read technology blog called Engadget. Our results show that communities transit between states of high and low entropy, depending on sentiments (positive / negative) about external happenings. We also propose an innovative method to establish the utility of the extracted knowledge, by correlating the mined knowledge with an external time series data (the stock market). Our validation results show that the characterized groups exhibit high stock market movement predictability (89%) and removal of \'impactful\' groups makes the community less resilient by lowering predictability (26%) and affecting the composition of the groups in the rest of the community.'),
	(98306, 'Estimating the Physical Effort of Human Poses.', '2006', 'CIVR', ''),
	(256772, 'Dynamic prediction of communication flow using social context.', '2008', 'Hypertext', 'In this paper, we develop a temporally evolving representation framework for context that can efficiently predict communication flow in social networks between a given pair of individuals. The problem is important because it facilitates determining social and market trends as well as efficient information paths among people. We describe communication flow by two parameters: the intent to communicate and communication delay. To estimate these parameters, we design features to characterize communication and social context. Communication context refers to the attributes of current communication. Social context refers to the patterns of participation in communication (information roles) and the degree of overlap of friends between two people (strength of ties). A subset of optimal features of the communication and social context is chosen at a given time instant using five different feature selection strategies. The features are thereafter used in a Support Vector Regression framework to predict the intent to communicate and the delay between a pair of individuals. We have excellent results on a real world dataset from the most popular social networking site, www.myspace.com. We observe interestingly that while context can reasonably predict intent, delay seems to be more dependent on the personal contextual changes and other latent factors characterizing communication, e.g. \'age\' of information transmitted and presence of cliques among people.'),
	(256790, 'Can blog communication dynamics be correlated with stock market activity?', '2008', 'Hypertext', 'In this paper, we develop a simple model to study and analyze communication dynamics in the blogosphere and use these dynamics to determine interesting correlations with stock market movement. This work can drive targeted advertising on the web as well as facilitate understanding community evolution in the blogosphere. We describe the communication dynamics by several simple contextual properties of communication, e.g. the number of posts, the number of comments, the length and response time of comments, strength of comments and the different information roles that can be acquired by people (early responders / late trailers, loyals / outliers). We study a technology-savvy community called Engadget (http://www.engadget.com). There are two key contributions in this paper: (a) we identify information roles and the contextual properties for four technology companies, and (b) we model them as a regression problem in a Support Vector Machine framework and train the model with stock movements of the companies. It is interestingly observed that the communication activity on the blogosphere has considerable correlations with stock market movement. These correlation measures are further cross-validated against two baseline methods. Our results are promising yielding about 78% accuracy in predicting the magnitude of movement and 87% for the direction of movement.'),
	(332109, 'A computationally efficient 3D shape rejection algorithm.', '2005', 'ICME', ''),
	(332687, 'Exploiting Personal And Social Network Context For Event Annotation.', '2007', 'ICME', ''),
	(333035, 'Blog Antenna: Summarization of Personal Blog Temporal Dynamics Based on Self-Similarity Factorization.', '2007', 'ICME', ''),
	(333057, 'Splog Detection using Content, Time and Link Structures.', '2007', 'ICME', ''),
	(468020, 'Modeling personal and social network context for event annotation in images.', '2007', 'JCDL', 'This paper describes a framework to annotate images using personal and social network contexts. The problem is important as the correct context reduces the number of image annotation choices.. Social network context is useful as real-world activities of members of the social network are often correlated within a specific context. The correlation can serve as a powerful resource to effectively increase the ground truth available for annotation. There are three main contributions of this paper: (a) development of an event context framework and definition of quantitative measures for contextual correlations based on concept similarity in each facet of event context; (b) recommendation algorithms based on spreading activations that exploit personal context as well as social network context; (c) experiments on real-world, everyday images that verified both the existence of inter-user semantic disagreement and the improvement in annotation when incorporating both the user and social network context. We have conducted two user studies, and our quantitative and qualitative results indicate that context (both personal and social) facilitates effective image annotation.'),
	(502965, 'A utility framework for the automatic generation of audio-visual skims.', '2002', 'ACM Multimedia', 'In this paper, we present a novel algorithm for generating audio-visual skims from computable scenes. Skims are useful for browsing digital libraries, and for on-demand summaries in set-top boxes. A computable scene is a chunk of data that exhibits consistencies with respect to chromaticity, lighting and sound. There are three key aspects to our approach: (a) visual complexity and grammar, (b) robust audio segmentation and (c) an utility model for skim generation. We define a measure of visual complexity of a shot, and map complexity to the minimum time for comprehending the shot. Then, we analyze the underlying visual grammar, since it makes the shot sequence meaningful. We segment the audio data into four classes, and then detect significant phrases in the speech segments. The utility functions are defined in terms of complexity and duration of the segment. The target skim is created using a general constrained utility maximization procedure that maximizes the information content and the coherence of the resulting skim. The objective function is constrained due to multimedia synchronization constraints, visual syntax and by penalty functions on audio and video segments. The user study results indicate that the optimal skims show statistically significant differences with other skims with compression rates up to 90%.'),
	(503392, 'A real-time, multimodal biofeedback system for stroke patient rehabilitation.', '2006', 'ACM Multimedia', 'This paper presents a novel real-time, multi-modal biofeedback system for stoke patient therapy. The problem is important as traditional mechanisms of rehabilitation are monotonous, and do not incorporate detailed quantitative assessment of recovery in addition to traditional clinical schemes. We have been working on developing an experiential media system that integrates task dependent physical therapy and cognitive stimuli within an interactive, multimodal environment. The environment provides a purposeful, engaging, visual and auditory scene in which patients can practice functional therapeutic reaching tasks, while receiving different types of simultaneous feedback indicating measures of both performance and results. There are two contributions of this paper - (a) identification of features and goals for the functional task, (b) the development of sophisticated feedback (auditory and visual) mechanisms that match the semantics of action of the task.'),
	(503448, 'Media adaptation framework in biofeedback system for stroke patient rehabilitation.', '2007', 'ACM Multimedia', 'In this paper, we present a media adaptation framework for an immersive biofeedback system for stroke patient rehabilitation. In our biofeedback system, media adaptation refers to changes in audio/visual feedback as well as changes in physical environment. Effective media adaptation frameworks help patients recover generative plans for arm movement with potential for significantly shortened therapeutic time. The media adaptation problem has significant challenges - (a) high dimensionality of adaptation parameter space (b) variability in the patient performance across and within sessions(c) the actual rehabilitation plan is typically a non first-order Markov process, making the learning task hard. Our key insight is to understand media adaptation as a real-time feedback control problem. We use a mixture-of-experts based Dynamic Decision Network (DDN) for online media adaptation. We train DDN mixtures per patient, per session. The mixture models address two basic questions - (a) given a specific adaptation suggested by the domain expert, predict patient performance and (b) given an expected performance, determine optimal adaptation decision. The questions are answered through an optimality criterion based search on DDN models trained in previous sessions. We have also developed new validation metrics and have very good results for both questions on actual stroke rehabilitation data.'),
	(503471, 'The design of a real-time, multimodal biofeedback system for stroke patient rehabilitation.', '2006', 'ACM Multimedia', 'This paper presents a novel real-time, multi-modal biofeedback system for stroke patient therapy. The problem is important as traditional mechanisms of rehabilitation are monotonous, and do not incorporate detailed quantitative assessment of recovery in addition to traditional clinical schemes. We have been working on developing an experiential media system that integrates task dependent physical therapy and cognitive stimuli within an interactive, multimodal environment. The environment provides a purposeful, engaging, visual and auditory scene in which patients can practice functional therapeutic reaching tasks, while receiving different types of simultaneous feedback indicating measures of both performance and results. There are three contributions of this paper - (a) identification of features and goals for the functional task (b) The development of sophisticated feedback (auditory and visual) mechanisms that match the semantics of action of the task. We additionally develop novel action-feedback coupling mechanisms. (c) New metrics to validate the ability of the system to promote learnability, stylization and engagement. We have validated the system for nine subjects with excellent results.'),
	(503678, 'Contextual wisdom: social relations and correlations for multimedia event annotation.', '2007', 'ACM Multimedia', 'This work deals with the problem of event annotation in social networks. The problem is made difficult due to variability of semantics and due to scarcity of labeled data. Events refer to real-world phenomena that occur at a specific time and place, and media and text tags are treated as facets of the event metadata. We are proposing a novel mechanism for event annotation by leveraging related sources (other annotators) in a social network. Our approach exploits event concept similarity, concept co-occurrence and annotator trust. We compute concept similarity measures across all facets. These measures are then used to compute event-event and user-user activity correlation. We compute inter-facet concept co-occurrence statistics from the annotations by each user. The annotator trust is determined by first requesting the trusted annotators (seeds) from each user and then propagating the trust amongst the social network using the biased PageRank algorithm. For a specific media instance to be annotated, we start the process from an initial query vector and the optimal recommendations are determined by using a coupling strategy between the global similarity matrix, and the trust weighted global co-occurrence matrix. The coupling links the common shared knowledge (similarity between concepts) that exists within the social network with trusted and personalized observations (concept co-occurrences). Our initial experiments on annotated everyday events are promising and show substantial gains against traditional SVM based techniques.'),
	(504932, 'A Computational Estimate of the Physical Effort in Human Poses.', '2007', 'MMM (2)', ''),
	(539001, 'Context Aware Routing of Enterprise User Communications.', '2007', 'PerCom Workshops', 'This paper develops a context aware framework to address the diverse communication needs of a modern enterprise. Such enterprises are characterized by workers in different locations, subject to different policies, using different communication devices, and having varying degrees of skill sets. This diversity poses challenges in finding the most effective human worker (agent) for tasks like fielding a customer request, helping another agent with additional expert knowledge, or more generally help complete a task like a supply chain exception. We focus on the problem of routing communications to the most effective agent using a spectrum of contextual knowledge: availability, media type, activity, expertise, and location. We determine an optimal request-to-agent\' routing based on several metrics of effectiveness depending on the communication context. The optimal agent is selected to communicate on a specific media who minimizes the expected duration of interaction while maximizes the probability of successful call completion. Based on our model we have conducted simulations involving context aware and non-context aware routing scenarios. The results indicate that the context aware routing outperforms other conventional request-routing techniques. The work presented here can impact routing algorithms, as well as address problems related to enterprise staffing and temporal variation of context for the agent.'),
	(630611, 'The Splog Detection Task and A Solution Based on Temporal and Link Properties.', '2006', 'TREC', ''),
	(655496, 'Contextual Prediction of Communication Flow in Social Networks.', '2007', 'Web Intelligence', 'The paper develops a novel computational framework for predicting communication flow in social networks based on several contextual features. The problem is important because prediction of communication flow can impact timely sharing of specific information across a wide array of communities. We determine the intent to communicate and communication delay between users based on several contextual features in a social network corresponding to (a) neighborhood context, (b) topic context and (c) recipient context. The intent to communicate and communication delay are modeled as regression problems which are efficiently estimated using Support Vector Regression. We predict the intent and the delay, on an interval of time using past communication data. We have excellent prediction results on a real-world dataset from MySpace.com with an accuracy of 13-16%. We show that the intent to communicate is more significantly influenced by contextual factors compared to the delay.'),
	(655601, 'Blog Community Discovery and Evolution Based on Mutual Awareness Expansion.', '2007', 'Web Intelligence', 'There are information needs involving costly decisions that cannot be efficiently satisfied through conventional web search engines. Alternately, community centric search can provide multiple viewpoints to facilitate decision making. We propose to discover and model the temporal dynamics of thematic communities based on mutual awareness, where the awareness arises due to observable blogger actions and the expansion of mutual awareness leads to community formation. Given a query, we construct a directed action graph that is time-dependent, and weighted with respect to the query. We model the process of mutual awareness expansion using a random walk process and extract communities based on the model. We propose an interaction space based representation to quantify community dynamics. Each community is represented as a vector in the interaction space and its evolution is determined by a novel interaction correlation method. We have conducted experiments with a real-world blog dataset and have promising results for detection as well as insightful results for community evolution.'),
	(675439, 'Facetnet: a framework for analyzing communities and their evolutions in dynamic networks.', '2008', 'WWW', 'We discover communities from social network data, and analyze the community evolution. These communities are inherent characteristics of human interaction in online social networks, as well as paper citation networks. Also, communities may evolve over time, due to changes to individuals\' roles and social status in the network as well as changes to individuals\' research interests. We present an innovative algorithm that deviates from the traditional two-step approach to analyze community evolutions. In the traditional approach, communities are first detected for each time slice, and then compared to determine correspondences. We argue that this approach is inappropriate in applications with noisy data. In this paper, we propose FacetNet for analyzing communities and their evolutions through a robust unified process. In this novel framework, communities not only generate evolutions, they also are regularized by the temporal smoothness of evolutions. As a result, this framework will discover communities that jointly maximize the fit to the observed data and the temporal evolution. Our approach relies on formulating the problem in terms of non-negative matrix factorization, where communities and their evolutions are factorized in a unified way. Then we develop an iterative algorithm, with proven low time complexity, which is guaranteed to converge to an optimal solution. We perform extensive experimental studies, on both synthetic datasets and real datasets, to demonstrate that our method discovers meaningful communities and provides additional insights not directly obtainable from traditional methods.'),
	(675489, 'What makes conversations interesting?: themes, participants and consequences of conversations in online social media.', '2009', 'WWW', 'Rich media social networks promote not only creation and consumption of media, but also communication about the posted media item. What causes a conversation to be interesting, that prompts a user to participate in the discussion on a posted video? We conjecture that people participate in conversations when they find the conversation theme interesting, see comments by people whom they are familiar with, or observe an engaging dialogue between two or more people (absorbing back and forth exchange of comments). Importantly, a conversation that is interesting must be consequential - i.e. it must impact the social network itself. Our framework has three parts: characterizing themes, characterizing participants for determining interestingness and measures of consequences of a conversation deemed to be interesting. First, we detect conversational themes using a mixture model approach. Second, we determine interestingness of participants and interestingness of conversations based on a random walk model. Third, we measure the consequence of a conversation by measuring how interestingness affects the following three variables - participation in related themes, participant cohesiveness and theme diffusion. We have conducted extensive experiments using dataset from the popular video sharing site, YouTube. Our results show that our method of interestingness maximizes the mutual information, and is significantly better (twice as large) than three other baseline methods (number of comments, number of new participants and PageRank based assessment).'),
	(675590, 'Extracting community structure through relational hypergraphs.', '2009', 'WWW', 'Social media websites promote diverse user interaction on media objects as well as user actions with respect to other users. The goal of this work is to discover community structure in rich media social networks, and observe how it evolves over time, through analysis of multi-relational data. The problem is important in the enterprise domain where extracting emergent community structure on enterprise social media, can help in forming new collaborative teams, aid in expertise discovery, and guide long term enterprise reorganization. Our approach consists of three main parts: (1) a relational hypergraph model for modeling various social context and interactions; (2) a novel hypergraph factorization method for community extraction on multi-relational social data; (3) an on-line method to handle temporal evolution through incremental hypergraph factorization. Extensive experiments on real-world enterprise data suggest that our technique is scalable and can extract meaningful communities. To evaluate the quality of our mining results, we use our method to predict users\' future interests. Our prediction outperforms baseline methods (frequency counts, pLSA) by 36-250% on the average, indicating the utility of leveraging multi-relational social context by using our method.'),
	(701648, 'Splog Detection Using Self-similarity Analysis on Blog Temporal Dynamics.', '2007', 'AIRWeb', 'This paper focuses on spam blog (splog) detection. Blogs are highly popular, new media social communication mechanisms. The presence of splogs degrades blog search results as well as wastes network resources. In our approach we exploit unique blog temporal dynamics to detect splogs. There are three key ideas in our splog detection framework. We first represent the blog temporal dynamics using self-similarity matrices defined on the histogram intersection similarity measure of the time, content, and link attributes of posts. Second, we show via a novel visualization that the blog temporal characteristics reveal attribute correlation, depending on type of the blog (normal blogs and splogs). Third, we propose the use of temporal structural properties computed from self-similarity matrices across different attributes. In a splog detector, these novel features are combined with content based features. We extract a content based feature vector from different parts of the blog -- URLs, post content, etc. The dimensionality of the feature vector is reduced by Fisher linear discriminant analysis. We have tested an SVM based splog detector using proposed features on real world datasets, with excellent results (90% accuracy).'),
	(720457, 'Eventory -- An Event Based Media Repository.', '2007', 'ICSC', 'This paper focuses on the development of an event driven media sharing repository to facilitate community awareness. In this paper, an event refers to a real-world occurrence that unfolds over space and time. Our event model implementation supports creation of events using the standard facets of who, where, when and what. A key novelty in this research lies in the support of arbitrary event-event semantic relationships. We facilitate global as well as personalized event relationships. Each relationship can be unary or binary and can be at multiple granularities. The relationships can exist between events, between media, and between media and events. We have implemented a web based media archive system that allows people to create, explore and mange events. We have implemented an RSS based notification system that promotes awareness of actions. The initial user feedback has been positive and we are in the process of conducting a longitudinal study.'),
	(1121005, 'A dynamic decision network framework for online media adaptation in stroke rehabilitation.', '2008', 'TOMCCAP', 'In this article, we present a media adaptation framework for an immersive biofeedback system for stroke patient rehabilitation. In our biofeedback system, media adaptation refers to changes in audio/visual feedback as well as changes in physical environment. Effective media adaptation frameworks help patients recover generative plans for arm movement with potential for significantly shortened therapeutic time. The media adaptation problem has significant challenges&mdash;(a) high dimensionality of adaptation parameter space; (b) variability in the patient performance across and within sessions; (c) the actual rehabilitation plan is typically a non-first-order Markov process, making the learning task hard. Our key insight is to understand media adaptation as a real-time feedback control problem. We use a mixture-of-experts based Dynamic Decision Network (DDN) for online media adaptation. We train DDN mixtures per patient, per session. The mixture models address two basic questions&mdash;(a) given a specific adaptation suggested by the domain experts, predict the patient performance, and (b) given the expected performance, determine the optimal adaptation decision. The questions are answered through an optimality criterion based search on DDN models trained in previous sessions. We have also developed new validation metrics and have very good results for both questions on actual stroke rehabilitation data.'),
	(1167789, 'Analyzing communities and their evolutions in dynamic social networks.', '2009', 'TKDD', 'We discover communities from social network data and analyze the community evolution. These communities are inherent characteristics of human interaction in online social networks, as well as paper citation networks. Also, communities may evolve over time, due to changes to individuals\' roles and social status in the network as well as changes to individuals\' research interests. We present an innovative algorithm that deviates from the traditional two-step approach to analyze community evolutions. In the traditional approach, communities are first detected for each time slice, and then compared to determine correspondences. We argue that this approach is inappropriate in applications with noisy data. In this paper, we propose FacetNet for analyzing communities and their evolutions through a robust unified process. This novel framework will discover communities and capture their evolution with temporal smoothness given by historic community structures. Our approach relies on formulating the problem in terms of maximum a posteriori (MAP) estimation, where the community structure is estimated both by the observed networked data and by the prior distribution given by historic community structures. Then we develop an iterative algorithm, with proven low time complexity, which is guaranteed to converge to an optimal solution. We perform extensive experimental studies, on both synthetic datasets and real datasets, to demonstrate that our method discovers meaningful communities and provides additional insights not directly obtainable from traditional methods.'),
	(1167899, 'Detecting splogs via temporal dynamics using self-similarity analysis.', '2008', 'TWEB', 'This article addresses the problem of spam blog (splog) detection using temporal and structural regularity of content, post time and links. Splogs are undesirable blogs meant to attract search engine traffic, used solely for promoting affiliate sites. Blogs represent popular online media, and splogs not only degrade the quality of search engine results, but also waste network resources. The splog detection problem is made difficult due to the lack of stable content descriptors. We have developed a new technique for detecting splogs, based on the observation that a blog is a dynamic, growing sequence of entries (or posts) rather than a collection of individual pages. In our approach, splogs are recognized by their temporal characteristics and content. There are three key ideas in our splog detection framework. (a) We represent the blog temporal dynamics using self-similarity matrices defined on the histogram intersection similarity measure of the time, content, and link attributes of posts, to investigate the temporal changes of the post sequence. (b) We study the blog temporal characteristics using a visual representation derived from the self-similarity measures. The visual signature reveals correlation between attributes and posts, depending on the type of blogs (normal blogs and splogs). (c) We propose two types of novel temporal features to capture the splog temporal characteristics. In our splog detector, these novel features are combined with content based features. We extract a content based feature vector from blog home pages as well as from different parts of the blog. The dimensionality of the feature vector is reduced by Fisher linear discriminant analysis. We have tested an SVM-based splog detector using proposed features on real world datasets, with appreciable results (90&percnt; accuracy).'),
	(1184987, 'A Framework for Linear Transform Approximation Using Orthogonal Basis Projection.', '2007', 'Journal of Multimedia', ''),
	(1211160, 'MetaFac: community discovery via relational hypergraph factorization.', '2009', 'KDD', 'This paper aims at discovering community structure in rich media social networks, through analysis of time-varying, multi-relational data. Community structure represents the latent social context of user actions. It has important applications in information tasks such as search and recommendation. Social media has several unique challenges. (a) In social media, the context of user actions is constantly changing and co-evolving; hence the social context contains time-evolving multi-dimensional relations. (b) The social context is determined by the available system features and is unique in each social media website. In this paper we propose MetaFac (MetaGraph Factorization), a framework that extracts community structures from various social contexts and interactions. Our work has three key contributions: (1) metagraph, a novel relational hypergraph representation for modeling multi-relational and multi-dimensional social data; (2) an efficient factorization method for community extraction on a given metagraph; (3) an on-line method to handle time-varying relations through incremental metagraph factorization. Extensive experiments on real-world social data collected from the Digg social media website suggest that our technique is scalable and is able to extract meaningful communities based on the social media contexts. We illustrate the usefulness of our framework through prediction tasks. We outperform baseline methods (including aspect model and tensor analysis) by an order of magnitude.'),
	(1250242, 'A slide-ware application to support discursive presentations.', '2009', 'ACM Multimedia', 'Transdisciplinary collaborations call for dynamic, responsive slide-ware presentations beyond the linear structure afforded by traditional tools. The NextSlidePlease application addresses this through a novel authoring and presentation interface. The application also features an innovative algorithm to enhance presentation time management. The cross-platform Java application is currently being evaluated in a variety of real-world presentation contexts.'),
	(1258228, 'Social Synchrony: Predicting Mimicry of User Actions in Online Social Media.', '2009', 'CSE (4)', 'We propose a computational framework to predict synchronyof action in online social media. Synchrony is a temporalsocial network phenomenon in which a large number of usersare observed to mimic a certain action over a period of timewith sustained participation from early users.Understanding social synchrony can be helpful in identifyingsuitable time periods of viral marketing. Our method consistsof two parts – the learning framework and the evolutionframework. In the learning framework, we develop a DBNbased representation that includes an understanding of usercontext to predict the probability of user actions over a set oftime slices into the future. In the evolution framework, weevolve the social network and the user models over a set offuture time slices to predict social synchrony. Extensiveexperiments on a large dataset crawled from the popularsocial media site Digg (comprising ~7M diggs) show thatour model yields low error (15.2+4.3%) in predicting useractions during periods with and without synchrony.Comparison with baseline methods indicates that our methodshows significant improvement in predicting user actions.'),
	(1531100, 'Connecting content to community in social media via image content, user tags and user communication.', '2009', 'ICME', 'In this paper we develop a recommendation framework to connect image content with communities in online social media. The problem is important because users are looking for useful feedback on their uploaded content, but finding the right community for feedback is challenging for the end user. Social media are characterized by both content and community. Hence, in our approach, we characterize images through three types of features: visual features, user generated text tags, and social interaction (user communication history in the form of comments). A recommendation framework based on learning a latent space representation of the groups is developed to recommend the most likely groups for a given image. The model was tested on a large corpus of Flickr images comprising 15, 689 images. Our method outperforms the baseline method, with a mean precision 0.62 and mean recall 0.69. Importantly, we show that fusing image content, text tags with social interaction features outperforms the case of only using image content or tags.'),
	(1531252, 'Temporal patterns in social media streams: Theme discovery and evolution using joint analysis of content and context.', '2009', 'ICME', 'Online social networking sites such as Flickr and Facebook provide a diverse range of functionalities that foster online communities to create and share media content. In particular, Flickr groups are increasingly used to aggregate and share photos about a wide array of topics or themes. Unlike photo repositories where images are typically organized with respect to static topics, the photo sharing process as in Flickr often results in complex time-evolving social and visual patterns. Characterizing such time-evolving patterns can enrich media exploring experience in a social media repository. In this paper, we propose a novel framework that characterizes distinct time-evolving patterns of group photo streams. We use a non-negative joint matrix factorization approach to incorporate image content features and contextual information, including associated tags, photo owners and post times. In our framework, we consider a group as a mixture of themes - each theme exhibits similar patterns of image content and context. The theme extraction is to best explain the observed image content features and associations with tags, users and times. Extensive experiments on a Flickr dataset suggest that our approach is able to extract meaningful evolutionary patterns from group photo streams. We evaluate our method through a tag prediction task. Our prediction results outperform baseline methods, which indicate the utility of our theme based joint analysis.'),
	(1572350, 'Summarization of large scale social network activity.', '2009', 'ICASSP', 'This paper presents a novel social media summarization framework. Summarizing media created and shared in large scale online social networks unfolds challenging research problems. The networks exhibit heterogeneous social interactions and temporal dynamics. Our proposed framework relies on the co-presence of multiple important facets: who (users), what (concepts and media), how (actions) and when (time). First, we impose a syntactic structure of the social activity (relating users, media and concepts via specific actions) in our temporal multi-graph mining algorithm. Second, important activities along each facet are extracted as activity themes over time. Experiments on Flickr datasets demonstrate that our technique captures nontrivial evolution of media use in social networks.'),
	(1578606, 'JAM: Joint Action Matrix Factorization for Summarizing a Temporal Heterogeneous Social Network.', '2009', 'ICWSM', ''),
	(1590540, 'Birds of a Feather: Does User Homophily Impact Information Diffusion in Social Media?', '2010', 'CoRR', ''),
	(506773, 'Assessing Standard and Inverted Skip Graphs Using Multi-Dimensional Range Queries and Mobile Nodes.', '2007', 'MobiQuitous', 'The skip graph, an application-layer data structure for routing and indexing, may be used in a sensor network to facilitate queries of the distributed k-dimensional data collected by the nodes, such as their geographic positions. Nodes in a standard skip graph sort keys in layered groups, where group membership is determined by random membership vectors. We propose a skip graph extension that inverts the key and membership vector roles, wherein group membership is based on deterministic z-ordering of k-dimensional data and sorting within groups is based on random keys. This extension retains the structure of a standard skip graph, and can be modified for use in 3-D environments such as unmanned aerial vehicle swarms. Our results indicate this extension reduces the number of nodes contacted relative to the query precision, the volume of the multi-dimensional space, and the skip graph\'s height. We discuss our extension\'s performance relative to metrics at the application and network layers for static and mobile 2-D networks.'),
	(512203, 'Enabling Skip Graphs to Process K-Dimensional Range Queries in a Mobile Sensor Network.', '2007', 'NCA', ''),
	(370803, 'Dynamic Stochastic Models for Workflow Response Optimization.', '2005', 'ICWS', 'In this paper we propose a solution for optimizing (web service)business workflow response times through dynamic resource allocation.On-the-fly monitoring is combined with a novel workflow modelingalgorithm that discovers critical execution paths and builds dynamic stochastic models in the associated critical graph. One novelcontribution of this work is the ability to naturally handle parallelworkflow execution paths. This is essential in applications whereworkflows include multiple concurrent service calls/paths that need to be joined at a later point in time. We discuss theautomatic deployment of on-the-fly monitoring mechanisms withinthe resource management mechanisms. We implement, deployand experiment with a proof of concept within a generalized web services business process (BPEL4WS/SOAP) framework. In the experimental setup we explore and show the naturaladaptation to changing workflow conditions and appropriateautomatic re-allocation of resources to reduce execution times.'),
	(491990, 'Monitoring Moving Objects Using Low Frequency Snapshots in Sensor Networks.', '2008', 'MDM', 'Monitoring moving objects is one of the key application domains for sensor networks. In the absence of cooperative objects and devices attached to these objects, target tracking algorithms have to be used for monitoring. In this paper, we present that many of the applications of moving object monitoring systems could be addressed with low-frequency snapshot-based queries. With the realization of this query type, we show that existing target tracking algorithms may not be the least expensive solutions. We introduce an approach that uses two alternating strategies. We maintain a cheap low-quality knowledge of moving objects’ location between snapshots and trigger expensive sensor readings only when a snapshot period has elapsed. With extensive experiments we show that our approach is significantly more energy efficient than established methods. It is also more effective than existing data-and-query centric in-network query processing schemes as it can maintain object identities between snapshots.'),
	(584517, 'Application semantics in query optimization for WSNs.', '2007', 'SenSys', 'Efficient data acquisition in WSNs has attracted significant interest. For example, TinyDB [2] introduced query dissemination and data aggregation trees. Later, a probabilistic model of the physical world is used in [1]. Recently, [3] argues that probabilistic models of the physical world used in acquisition may miss outliers and introduces spatio-temporal suppression-based methods. We classify these established approaches as query-and-data centric approaches for optimizing the data acquisition process.'),
	(675677, 'Extracting data records from the web using tag path clustering.', '2009', 'WWW', 'Fully automatic methods that extract lists of objects from the Web have been studied extensively. Record extraction, the first step of this object extraction process, identifies a set of Web page segments, each of which represents an individual object (e.g., a product). State-of-the-art methods suffice for simple search, but they often fail to handle more complicated or noisy Web page structures due to a key limitation -- their greedy manner of identifying a list of records through pairwise comparison (i.e., similarity match) of consecutive segments. This paper introduces a new method for record extraction that captures a list of objects in a more robust way based on a holistic analysis of a Web page. The method focuses on how a distinct tag path appears repeatedly in the DOM tree of the Web document. Instead of comparing a pair of individual segments, it compares a pair of tag path occurrence patterns (called visual signals) to estimate how likely these two tag paths represent the same list of objects. The paper introduces a similarity measure that captures how closely the visual signals appear and interleave. Clustering of tag paths is then performed based on this similarity measure, and sets of tag paths that form the structure of data records are extracted. Experiments show that this method achieves higher accuracy than previous methods.'),
	(862645, 'Web service decomposition: Edge computing architecture for cache-friendly e-commerce applications.', '2006', 'Electronic Commerce Research and Applications', 'For e-commerce Web service applications, cache should be applicable especially to product information services. However, practical e-commerce use cases have limited cacheability: (1) a message may contain management components, which reduce reusability of cached messages; (2) content typically consists of composite objects, which makes it harder to maintain cache effectively. Our solution proposed in this paper is service decomposition that decomposes a web service into management services and composite objects. We introduce our cache model and specification based on composite objects. The specification includes dependency description that specifies how to maintain changes in composite objects when the source objects are updated. In order to implement cache management on this model, a large number of XPath query results over the source objects must be cached and effectively maintained. In this paper, we also introduce a high performance implementation scheme of cache management based on a hybrid XML filter that combines in-memory structure matching and RDBMS-based parameter matching. The filter takes advantage of parameterized query patterns within dependency description and achieves scalability.'),
	(1571222, 'CloudDB: One Size Fits All Revived.', '2010', 'SERVICES', 'We present a data management platform in the cloud, CloudDB. The guiding principle of CloudDB’s design is establishing data independence for the applications that need to use diverse underlying data stores that are optimized for varying workload needs and characteristics. The applications should not have to be aware of the physical organization of the data and how the data is accessed. Ideally, an application only needs a logical specification of the data access layer and the data access requests are handled in a declarative way. CloudDB hosts variety of specialized databases that deliver high performance, scalability, and cost efficiency for varying application needs. CloudDB’s API layer is designed in such a way to give data independence to the higher level applications. The goal is to let the clients use just a simple, standard, and uniform language API to access data management functions as a service.'),
	(1578652, 'A Social Identity Approach to Identify Familiar Strangers in a Social Network.', '2009', 'ICWSM', ''),
	(48613, 'Web Search Tailored Ontology Evaluation Framework.', '2007', 'APWeb/WAIM Workshops', ''),
	(451198, 'Semantic Interoperability in the Norwegian Petroleum Industry.', '2006', 'ISTA', ''),
	(518582, 'Document Space Adapted Ontology: Application in Query Enrichment.', '2006', 'NLDB', ''),
	(524670, 'Query Terms Abstraction Layers.', '2006', 'OTM Workshops (2)', ''),
	(525114, 'Empirical Insights on a Value of Ontology Quality in Ontology-Driven Web Search.', '2008', 'OTM Conferences (2)', 'Nowadays ontologies are often used to improve search applications. Quality of ontology plays an important role in these applications. An important body of work exists in both information retrieval evaluation and ontology quality assessment areas. However, there is a lack of task- and scenario-based quality assessment methods. In this paper we discuss a framework to assess fitness of ontology for use in ontology-driven Web search. We define metrics for ontology fitness to particular search tasks and metrics for ontology capability to enhance recall and precision. Further, we discuss results of a preliminary experiment showing applicability of the proposed framework and a value of ontology quality in ontology-driven Web search.'),
	(721510, 'On Significance of Ontology Quality in Ontology-Driven Web Search.', '2008', 'WSKS (1)', 'Web search performance and efficiency is critical for many people and organizations in knowledge society. Nowadays, ontologies are being applied in a number of ontology-based information retrieval systems in order to improve the performance of these systems. However, quality of ontology plays an important role in these applications. In order to feasibly assess the impact, evaluation criteria need to be connected to scenarios of use with a purpose to enhance particular search tasks. In this article discussed preliminary results of the experiment showing how different ontology quality aspect can improve ontology-driven Web search performance.'),
	(1224178, 'The role of ontology in enhancing semantic searches: the EvOQS framework and its initial validation.', '2008', 'IJKL', ''),
	(1242179, 'Construction of Ontology Based Semantic-Linguistic Feature Vectors for Searching: The Process and Effect.', '2009', 'Web Intelligence/IAT Workshops', 'Search is among the most frequent activities on the Web. However, the search activity still requires extra efforts in order to get satisfactory results. One of the reasons is heterogeneous information resources and exponential growth of information. The problem of heterogeneity arises as a result of discipline specific language used even in domain specific documents. This particular problem we tackle in this paper. We propose an approach to construct semantic-linguistic feature vectors (FV). The FVs are built based on domain semantics encoded in an ontology and enhanced by a relevant terminology from documents on the Web. Semantic information from the ontologies is also used to expand the user queries and the FVs are used to filter and rank the retrieved documents. The strength of this approach is twofold. First, it is grounded on relevant semantics from an ontology, and second, it accounts for statistically significant collocations of other terms and phrases in relation to the ontology entities. In this paper, we explain how these FVs are constructed and what effect they have on search performance.'),
	(1299816, 'Semantic-Linguistic Feature Vectors for Search: Unsupervised Construction and Experimental Validation.', '2009', 'ASWC', 'In this paper, we elaborate on an approach to construction of semantic-linguistic feature vectors (FV) that are used in search. These FVs are built based on domain semantics encoded in an ontology and enhanced by a relevant terminology from Web documents. The value of this approach is twofold. First, it captures relevant semantics from an ontology, and second, it accounts for statistically significant collocations of other terms and phrases in relation to the ontology entities. The contribution of this paper is the FV construction process and its evaluation. Recommendations and lessons learnt are laid down.'),
	(1535423, 'An ontology-driven approach to web search: analysis of its sensitivity to ontology quality and search tasks.', '2009', 'iiWAS', 'An increasing number of recent information retrieval systems makes use of ontologies to help the users to detail queries and to come up with semantic representations of documents. A particular concern here is user-friendliness (usability) and scalability of those approaches for Web search purposes. In this paper, we present an approach where entities in an ontology are associated with domain terminology by feature vectors (FV). A FV reflects the semantic and linguistic neighbourhoods of a particular entity. The semantic neighbourhood is derived from an ontology and is based on related entities and specified properties, while linguistic neighbourhood is based on co-location of terms in a text corpus. Later, during the search process the FVs are used to filter and rerank the search results of the underlying search engine and thereby increasing the precision of the result. We elaborate on the approach and describe how the FVs are constructed. Then we report on a conducted evaluation where we analyse the sensitivity of the approach w.r.t. ontology quality and search tasks. Results indicate that the proposed approach and implemented prototype are able to improve the search results of a standard Web search engine. Furthermore, the analysis of the experiment data shows that the level of ontology specification is important for the quality of the FVs.'),
	(1535430, 'Relating ontology and web terminologies by feature vectors: unsupervised construction and experimental validation.', '2009', 'iiWAS', 'Search is among the most frequent activities on the Web. However, the search activity still requires extra efforts in order to get satisfactory results. One of the reasons is heterogeneous information resources and exponential growth of information. In this paper we try to tackle these issues. We elaborate on an approach to construction of semantic-linguistic feature vectors (FV) that are used in search. These FVs are built based on domain semantics encoded in an ontology and enhanced by relevant terminology from Web documents. The value of this approach is twofold. First, it captures relevant semantics from an ontology, and, second, it accounts for statistically significant collocations of other terms and phrases in relation to the ontology entities. In this paper, we elaborate on the extended FV construction process and evaluate the FV quality with respect to a set of heterogeneous ontologies. The evaluation shows that ranking of entities is significant neither for FV quality nor FV construction process. However, the results demonstrate that the construction process is most sensitive to taxonomy type of ontologies while usage of advanced and rich ontologies produces better quality FVs.'),
	(302090, 'Integration of Server, Storage and Database Stack: Moving Processing Towards Data.', '2008', 'ICDE', 'Storage architecture includes more and more processing power for increasing requirement of reliability, managibility and scalability. For example, an IBM storage server is equipped with 4 or 8 state-of-the-art processors and gigabytes of memories. This trend enables analyzing data locally inside a storage server. Processing data locally is appealing under the following circumstances: 1) huge reduction of data flowing to the host, 2) reduction of CPU consumption on host. Accordingly, the benefits are 1) less data traffic through IO channel to the host, 2) better utilization of host bufferpool, and 3) enabling more workload on the host. One crucial task is to understand how DBMS can benefit from such hardware. That is to identify which database operations are beneficial to be offloaded given a query workload in a particular setting. For certain operations, we establish value proposition via various approaches and show the analytical and experimental results. In particular, starjoin queries are commonly used in business warehouses. We propose to offload a portion of a starjoin query from host to the POWER5 P processors on a storage server, which dramatically reduces the amount of channel IO and host CPU consumption. Moreover, the query elapsed time is improved via the exploitation of the state-of-the-art P processors on a storage server.'),
	(302095, 'Constant-Time Query Processing.', '2008', 'ICDE', 'Query performance in current systems depends significantly on tuning: how well the query matches the available indexes, materialized views etc. Even in a well tuned system, there are always some queries that take much longer than others. This frustrates users who increasingly want consistent response times to ad hoc queries. We argue that query processors should instead aim for constant response times for all queries, with no assumption about tuning. We present Blink, our first attempt at this goal, that runs every query as a table scan over a fully denormalized database, with hash group-by done along the way. To make this scan efficient, Blink uses a novel compression scheme that horizontally partitions tuples by frequency, thereby compressing skewed data almost down to entropy, even while producing long runs of fixed-length, easily-parseable values. We also present a scheme for evaluating a conjunction of range and equality predicates in SIMD fashion over compressed tuples, and different schemes for efficient hash-based aggregation within the L2 cache. A experimental study with a suite of arbitrary single block SQL queries over a TPCH-like schema suggests that constant-time queries can be efficient.'),
	(891777, 'Towards an information infrastructure for the grid.', '2004', 'IBM Systems Journal', 'In this paper we present our vision of an information infrastructure for grid computing, which is based on a service-oriented architecture. The infrastructure supports a virtualized view of the computing and data resources, is autonomic (driven by policies) in order to meet application goals for quality of service, and is compatible with the standards being developed in the technical community. We describe how we are implementing this vision in IBM today and how we expect the implementation to evolve in the future.'),
	(1138366, 'Autonomic query parallelization using non-dedicated computers: an evaluation of adaptivity options.', '2009', 'VLDB J.', 'Writing parallel programs that can take advantage of non-dedicated processors is much more difficult than writing such programs for networks of dedicated processors. In a non-dedicated environment such programs must use autonomic techniques to respond to the unpredictable load fluctuations that prevail in the computational environment. In adaptive query processing (AQP), several techniques have been proposed for dynamically redistributing processor load assignments throughout a computation to take account of varying resource capabilities, but we know of no previous study that compares their performance. This paper presents a simulation-based evaluation of these autonomic parallelization techniques in a uniform environment and compares how well they improve the performance of the computation. Four published strategies are compared with a new algorithm that seeks to overcome some weaknesses identified in the existing approaches. In addition, we explore the use of techniques from online algorithms to provide a firm foundation for determining when to adapt in two of the existing algorithms. The evaluations identify situations in which each strategy may be used effectively and in which it should be avoided.'),
	(1302855, 'Autonomic Query Parallelization using Non-dedicated Computers: An Evaluation of Adaptivity Options.', '2006', 'ICAC', 'Writing parallel programs that can take advantage of non-dedicated processors is much more difficult than writing such programs for networks of dedicated processors. In a non-dedicated environment such programs must use autonomic techniques to respond to the unpredictable load fluctuations that characterize the computational model. In the area of adaptive query processing (AQP), several techniques have been proposed for dynamically redistributing processor assignments throughout a computation to take account of varying resource capabilities, but we know of no previous study that compares their performance. This paper presents an simulation based evaluation of these autonomic parallelization techniques in a uniform environment and compares on how well they improve the scaleability of the computation. The existing strategies are compared with a new approach inspired by work on distributed hash tables. The evaluation identifies situations in which each strategy may be used effectively and it should be avoided.'),
	(176590, 'XG: A Grid-Enabled Query Processing Engine.', '2006', 'EDBT', ''),
	(471056, 'Evolving Toward the Perfect Schedule: Co-scheduling Job Assignments and Data Replication in Wide-Area Systems Using a Genetic Algorithm.', '2005', 'JSSPP', ''),
	(877191, 'A grid-based approach for enterprise-scale data mining.', '2007', 'Future Generation Comp. Syst.', 'We describe a grid-based approach for enterprise-scale data mining, which is based on leveraging parallel database technology for data storage, and on-demand compute servers for parallelism in the statistical computations. This approach is targeted towards the use of data mining in highly-automated vertical business applications, where the data is stored on one or more relational database systems, and an independent set of high-performance compute servers or a network of low-cost, commodity processors is used to improve the application performance and overall workload management. The goal of this paper is to describe an algorithmic decomposition of data mining kernels between the data storage and compute grids, which makes it possible to exploit the parallelism on the respective grids in a simple way, while minimizing the data transfer between these grids. This approach is compatible with existing standards for data mining task specification and results reporting, so that larger applications using these data mining algorithms do not have to be modified to benefit from this grid-based approach.'),
	(502382, 'ACM multimedia interactive art program: an introduction to the digital boundaries exhibition.', '2004', 'ACM Multimedia', 'The Digital Boundaries exhibition includes works that use multimedia to address issues of multiculturalism, identity, and awareness. By placing technology in new contexts to explore multimedia\'s impact on culture (and vice versa) we create a space for the discussion of new ideas and create an interdisciplinary impact by reinforcing a dialogue between the arts and multimedia communities. We discuss our motivation, the exhibition theme, the works selected, and their potential technical impact.'),
	(893920, 'Digital Boundaries: The 2004 ACM Multimedia Interactive Art Program Exhibition.', '2004', 'IEEE MultiMedia', 'At no time in history has multimedia technology had the prospect of making a stronger impact on cultures. Multimedia is everywhere: regardless of where we are we can access multimedia originating in many parts of the world as easily as we can create content to be shared with people from different cultures across the globe. The gap between the haves and the have-nots, however, is growing (the we above refers to a very few). Wealthier countries are using multimedia to reinforce physical boundaries(for example, requiring fingerprints and photographs at airports) and multimedia content from only a few cultures is proliferating.'),
	(95927, 'Information extraction from biomedical literature: methodology, evaluation and an application.', '2003', 'CIKM', 'Journals and conference proceedings represent the dominant mechanisms of reporting new biomedical results. The unstructured nature of such publications makes it difficult to utilize data mining or automated knowledge discovery techniques. Annotation (or markup) of these unstructured documents represents the first step in making these documents machine analyzable. In this paper we first present a system called BioAnnotator for identifying and annotating biological terms in documents. BioAnnotator uses domain based dictionary look-up for recognizing known terms and a rule engine for discovering new terms. The combination and dictionary look-up and rules result in good performance (87% precision and 94% recall on the GENIA 1.1 corpus for extracting general biological terms based on an approximate matching criterion). To demonstrate the subsequent mining and knowledge discovery activities that are made feasible by BioAnnotator, we also present a system called MedSummarizer that uses the extracted terms to identify the common concepts in a given group of genes.'),
	(890727, 'Enhancing a biomedical information extraction system with dictionary mining and context disambiguation.', '2004', 'IBM Journal of Research and Development', 'Journals and conference proceedings represent the dominant mechanisms for reporting new biomedical results. The unstructured nature of such publications makes it difficult to utilize data mining or automated knowledge discovery techniques. Annotation (or markup) of these unstructured documents represents the first step in making these documents machine-analyzable. Often, however, the use of similar (or the same) labels for different entities and the use of different labels for the same entity makes entity extraction difficult in biomedical literature, In this paper we present a system called BioAnnotator for identifying and classifying biological terms in documents. BioAnnotator uses domain-based dictionary lookup for recognizing known terms and a rule engine for discovering new terms. We explain how the system uses a biomedical dictionary to learn extraction patterns for the rule engine and how it disambiguates biological terms that belong to multiple semantic classes.'),
	(1250188, 'NextSlidePlease: agile hyperpresentations.', '2009', 'ACM Multimedia', 'In this video presentation, we introduce NextSlidePlease, a novel slide authoring and presentation application. The video begins with a dramatization illustrating the shortcomings of existing slide-ware tools identified through our prior research. We then describe our theoretical framework for addressing these identified problems and present a dramatization of the process by which our NextSlidePlease application can be used to overcome such issues in a business context. In addition, we illustrate the novel functional aspects of our application algorithm that enable effective time management and flexible presentations. Finally, we present promising results from two user studies.'),
	(1251593, 'ClusTR: Exploring Multivariate Cluster Correlations and Topic Trends.', '2009', 'ECML/PKDD (2)', 'We present a demonstration of ClusTR, a highly interactive system for exploring relationships between different clusterings of a dataset and for viewing the evolution in time of topics (e.g., tags associated with objects in the dataset) within and across such clusters. In particular, ClusTR allows exploration of generic multi-dimensional, text labeled and time sensitive data.');
/*!40000 ALTER TABLE `papers` ENABLE KEYS */;


-- Dumping structure for table dblp.writtenby
CREATE TABLE IF NOT EXISTS `writtenby` (
  `personid` int(20) NOT NULL,
  `paperid` int(20) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table dblp.writtenby: ~1,717 rows (approximately)
DELETE FROM `writtenby`;
/*!40000 ALTER TABLE `writtenby` DISABLE KEYS */;
INSERT INTO `writtenby` (`personid`, `paperid`) VALUES
	(1632506, 1511977),
	(1632506, 68194),
	(1632506, 105899),
	(1632506, 237222),
	(1632506, 943390),
	(1632506, 1201666),
	(1632506, 1511960),
	(1632672, 3562),
	(1632672, 299606),
	(1632672, 598954),
	(1632672, 599903),
	(1632672, 613631),
	(1632672, 942049),
	(1632672, 1118430),
	(1634203, 1230),
	(1634203, 1533),
	(1634203, 2192),
	(1634203, 27167),
	(1634203, 27228),
	(1634203, 63163),
	(1634203, 63165),
	(1634203, 94642),
	(1634203, 95095),
	(1634203, 95227),
	(1634203, 95302),
	(1634203, 95306),
	(1634203, 95308),
	(1634203, 95310),
	(1634203, 95355),
	(1634203, 95817),
	(1634203, 96053),
	(1634203, 96055),
	(1634203, 96057),
	(1634203, 104979),
	(1634203, 109525),
	(1634203, 115690),
	(1634203, 115704),
	(1634203, 139927),
	(1634203, 139950),
	(1634203, 140402),
	(1634203, 140422),
	(1634203, 140513),
	(1634203, 144383),
	(1634203, 144385),
	(1634203, 144425),
	(1634203, 144448),
	(1634203, 144454),
	(1634203, 144942),
	(1634203, 144961),
	(1634203, 149206),
	(1634203, 150612),
	(1634203, 151519),
	(1634203, 152064),
	(1634203, 157344),
	(1634203, 159034),
	(1634203, 159364),
	(1634203, 159366),
	(1634203, 159536),
	(1634203, 176187),
	(1634203, 176216),
	(1634203, 176431),
	(1634203, 176605),
	(1634203, 176654),
	(1634203, 176663),
	(1634203, 176687),
	(1634203, 176720),
	(1634203, 183990),
	(1634203, 184151),
	(1634203, 195840),
	(1634203, 196408),
	(1634203, 196639),
	(1634203, 212395),
	(1634203, 220333),
	(1634203, 220352),
	(1634203, 232931),
	(1634203, 243231),
	(1634203, 264270),
	(1634203, 296941),
	(1634203, 297695),
	(1634203, 298017),
	(1634203, 298088),
	(1634203, 299295),
	(1634203, 299343),
	(1634203, 299728),
	(1634203, 299874),
	(1634203, 299889),
	(1634203, 299891),
	(1634203, 299892),
	(1634203, 299963),
	(1634203, 300705),
	(1634203, 300888),
	(1634203, 300904),
	(1634203, 300905),
	(1634203, 300906),
	(1634203, 300992),
	(1634203, 301189),
	(1634203, 301357),
	(1634203, 301652),
	(1634203, 301678),
	(1634203, 301952),
	(1634203, 302255),
	(1634203, 302434),
	(1634203, 304093),
	(1634203, 304154),
	(1634203, 330975),
	(1634203, 365256),
	(1634203, 370546),
	(1634203, 372795),
	(1634203, 406553),
	(1634203, 491645),
	(1634203, 491647),
	(1634203, 491649),
	(1634203, 499787),
	(1634203, 499859),
	(1634203, 502779),
	(1634203, 505818),
	(1634203, 506231),
	(1634203, 506284),
	(1634203, 509106),
	(1634203, 509133),
	(1634203, 509167),
	(1634203, 522666),
	(1634203, 525257),
	(1634203, 543615),
	(1634203, 544326),
	(1634203, 544473),
	(1634203, 544761),
	(1634203, 544783),
	(1634203, 544806),
	(1634203, 544843),
	(1634203, 544850),
	(1634203, 559780),
	(1634203, 568214),
	(1634203, 571112),
	(1634203, 597986),
	(1634203, 597990),
	(1634203, 599586),
	(1634203, 599846),
	(1634203, 599963),
	(1634203, 600181),
	(1634203, 614465),
	(1634203, 614994),
	(1634203, 615754),
	(1634203, 616798),
	(1634203, 617027),
	(1634203, 617028),
	(1634203, 617182),
	(1634203, 617526),
	(1634203, 617628),
	(1634203, 617684),
	(1634203, 617935),
	(1634203, 618219),
	(1634203, 618238),
	(1634203, 641898),
	(1634203, 641900),
	(1634203, 641902),
	(1634203, 641949),
	(1634203, 643291),
	(1634203, 643654),
	(1634203, 643811),
	(1634203, 644071),
	(1634203, 653609),
	(1634203, 653611),
	(1634203, 663811),
	(1634203, 665202),
	(1634203, 665203),
	(1634203, 674403),
	(1634203, 674459),
	(1634203, 675223),
	(1634203, 676435),
	(1634203, 708902),
	(1634203, 712819),
	(1634203, 789647),
	(1634203, 835078),
	(1634203, 844266),
	(1634203, 844332),
	(1634203, 844425),
	(1634203, 844534),
	(1634203, 845017),
	(1634203, 845137),
	(1634203, 846398),
	(1634203, 846412),
	(1634203, 855948),
	(1634203, 855951),
	(1634203, 855961),
	(1634203, 856096),
	(1634203, 856114),
	(1634203, 856147),
	(1634203, 856149),
	(1634203, 856189),
	(1634203, 856222),
	(1634203, 856396),
	(1634203, 874449),
	(1634203, 902947),
	(1634203, 929626),
	(1634203, 929630),
	(1634203, 938194),
	(1634203, 938216),
	(1634203, 938986),
	(1634203, 939134),
	(1634203, 939166),
	(1634203, 939201),
	(1634203, 971328),
	(1634203, 972442),
	(1634203, 986325),
	(1634203, 988155),
	(1634203, 1011256),
	(1634203, 1012483),
	(1634203, 1074824),
	(1634203, 1112342),
	(1634203, 1112344),
	(1634203, 1112346),
	(1634203, 1112874),
	(1634203, 1117321),
	(1634203, 1118145),
	(1634203, 1118147),
	(1634203, 1118754),
	(1634203, 1124559),
	(1634203, 1137955),
	(1634203, 1138256),
	(1634203, 1141233),
	(1634203, 1185925),
	(1634203, 1253300),
	(1634203, 1284157),
	(1634203, 1306364),
	(1634203, 1516612),
	(1634203, 1518808),
	(1634203, 1519681),
	(1634203, 1577376),
	(1634203, 1591939),
	(1634203, 1617311),
	(1634203, 140737),
	(1634203, 175863),
	(1634203, 499885),
	(1634203, 525329),
	(1634203, 598248),
	(1634203, 599788),
	(1634203, 600041),
	(1634203, 600212),
	(1634203, 642089),
	(1634203, 642091),
	(1634203, 642213),
	(1634203, 643128),
	(1634203, 643129),
	(1634203, 643132),
	(1634203, 643133),
	(1634203, 674283),
	(1634203, 674307),
	(1634203, 674327),
	(1634203, 674407),
	(1634203, 845903),
	(1634203, 845905),
	(1634203, 845906),
	(1634203, 986735),
	(1634203, 986755),
	(1634203, 1113100),
	(1634203, 1114118),
	(1634203, 1316139),
	(1634203, 212288),
	(1634203, 599191),
	(1634203, 794692),
	(1634203, 845561),
	(1634204, 1230),
	(1634204, 1533),
	(1634204, 2192),
	(1634204, 27167),
	(1634204, 27228),
	(1634204, 63163),
	(1634204, 63165),
	(1634204, 94642),
	(1634204, 95095),
	(1634204, 95227),
	(1634204, 95302),
	(1634204, 95306),
	(1634204, 95308),
	(1634204, 95310),
	(1634204, 95355),
	(1634204, 95817),
	(1634204, 96053),
	(1634204, 96055),
	(1634204, 96057),
	(1634204, 104979),
	(1634204, 109525),
	(1634204, 115690),
	(1634204, 115704),
	(1634204, 139927),
	(1634204, 139950),
	(1634204, 140402),
	(1634204, 140422),
	(1634204, 140513),
	(1634204, 144383),
	(1634204, 144385),
	(1634204, 144425),
	(1634204, 144448),
	(1634204, 144454),
	(1634204, 144942),
	(1634204, 144961),
	(1634204, 149206),
	(1634204, 150612),
	(1634204, 151519),
	(1634204, 152064),
	(1634204, 157344),
	(1634204, 159034),
	(1634204, 159364),
	(1634204, 159366),
	(1634204, 159536),
	(1634204, 176187),
	(1634204, 176216),
	(1634204, 176431),
	(1634204, 176605),
	(1634204, 176654),
	(1634204, 176663),
	(1634204, 176687),
	(1634204, 176720),
	(1634204, 183990),
	(1634204, 184151),
	(1634204, 195840),
	(1634204, 196408),
	(1634204, 196639),
	(1634204, 212395),
	(1634204, 220333),
	(1634204, 220352),
	(1634204, 232931),
	(1634204, 243231),
	(1634204, 264270),
	(1634204, 296941),
	(1634204, 297695),
	(1634204, 298017),
	(1634204, 298088),
	(1634204, 299295),
	(1634204, 299343),
	(1634204, 299728),
	(1634204, 299874),
	(1634204, 299889),
	(1634204, 299891),
	(1634204, 299892),
	(1634204, 299963),
	(1634204, 300705),
	(1634204, 300888),
	(1634204, 300904),
	(1634204, 300905),
	(1634204, 300906),
	(1634204, 300992),
	(1634204, 301189),
	(1634204, 301357),
	(1634204, 301652),
	(1634204, 301678),
	(1634204, 301952),
	(1634204, 302255),
	(1634204, 302434),
	(1634204, 304093),
	(1634204, 304154),
	(1634204, 330975),
	(1634204, 365256),
	(1634204, 370546),
	(1634204, 372795),
	(1634204, 406553),
	(1634204, 491645),
	(1634204, 491647),
	(1634204, 491649),
	(1634204, 499787),
	(1634204, 499859),
	(1634204, 502779),
	(1634204, 505818),
	(1634204, 506231),
	(1634204, 506284),
	(1634204, 509106),
	(1634204, 509133),
	(1634204, 509167),
	(1634204, 522666),
	(1634204, 525257),
	(1634204, 543615),
	(1634204, 544326),
	(1634204, 544473),
	(1634204, 544761),
	(1634204, 544783),
	(1634204, 544806),
	(1634204, 544843),
	(1634204, 544850),
	(1634204, 559780),
	(1634204, 568214),
	(1634204, 571112),
	(1634204, 597986),
	(1634204, 597990),
	(1634204, 599586),
	(1634204, 599846),
	(1634204, 599963),
	(1634204, 600181),
	(1634204, 614465),
	(1634204, 614994),
	(1634204, 615754),
	(1634204, 616798),
	(1634204, 617027),
	(1634204, 617028),
	(1634204, 617182),
	(1634204, 617526),
	(1634204, 617628),
	(1634204, 617684),
	(1634204, 617935),
	(1634204, 618219),
	(1634204, 618238),
	(1634204, 641898),
	(1634204, 641900),
	(1634204, 641902),
	(1634204, 641949),
	(1634204, 643291),
	(1634204, 643654),
	(1634204, 643811),
	(1634204, 644071),
	(1634204, 653609),
	(1634204, 653611),
	(1634204, 663811),
	(1634204, 665202),
	(1634204, 665203),
	(1634204, 674403),
	(1634204, 674459),
	(1634204, 675223),
	(1634204, 676435),
	(1634204, 708902),
	(1634204, 712819),
	(1634204, 789647),
	(1634204, 835078),
	(1634204, 844266),
	(1634204, 844332),
	(1634204, 844425),
	(1634204, 844534),
	(1634204, 845017),
	(1634204, 845137),
	(1634204, 846398),
	(1634204, 846412),
	(1634204, 855948),
	(1634204, 855951),
	(1634204, 855961),
	(1634204, 856096),
	(1634204, 856114),
	(1634204, 856147),
	(1634204, 856149),
	(1634204, 856189),
	(1634204, 856222),
	(1634204, 856396),
	(1634204, 874449),
	(1634204, 902947),
	(1634204, 929626),
	(1634204, 929630),
	(1634204, 938194),
	(1634204, 938216),
	(1634204, 938986),
	(1634204, 939134),
	(1634204, 939166),
	(1634204, 939201),
	(1634204, 971328),
	(1634204, 972442),
	(1634204, 986325),
	(1634204, 988155),
	(1634204, 1011256),
	(1634204, 1012483),
	(1634204, 1074824),
	(1634204, 1112342),
	(1634204, 1112344),
	(1634204, 1112346),
	(1634204, 1112874),
	(1634204, 1117321),
	(1634204, 1118145),
	(1634204, 1118147),
	(1634204, 1118754),
	(1634204, 1124559),
	(1634204, 1137955),
	(1634204, 1138256),
	(1634204, 1141233),
	(1634204, 1185925),
	(1634204, 1253300),
	(1634204, 1284157),
	(1634204, 1306364),
	(1634204, 1516612),
	(1634204, 1518808),
	(1634204, 1519681),
	(1634204, 1577376),
	(1634204, 1591939),
	(1634204, 1617311),
	(1635058, 302084),
	(1635058, 95219),
	(1635058, 147932),
	(1635058, 176351),
	(1635058, 176791),
	(1635058, 298955),
	(1635058, 372949),
	(1635058, 600003),
	(1635058, 643619),
	(1635058, 661973),
	(1635058, 95587),
	(1635058, 144317),
	(1635058, 183019),
	(1635058, 299611),
	(1635058, 299683),
	(1635058, 598359),
	(1635058, 1112575),
	(1635058, 1118227),
	(1635070, 1120951),
	(1635490, 3562),
	(1635490, 299606),
	(1635490, 598954),
	(1635490, 599903),
	(1635490, 613631),
	(1635490, 942049),
	(1635490, 1118430),
	(1635490, 15951),
	(1635490, 440418),
	(1635490, 741905),
	(1635490, 939952),
	(1635490, 951472),
	(1635490, 1112818),
	(1635490, 1113938),
	(1635490, 1114115),
	(1635490, 1256392),
	(1635490, 1582723),
	(1635490, 329848),
	(1635490, 1112509),
	(1635490, 500712),
	(1635490, 501998),
	(1635490, 597965),
	(1635490, 1010999),
	(1635490, 1011099),
	(1635490, 1011101),
	(1635490, 1137958),
	(1635490, 300170),
	(1635490, 1016851),
	(1635490, 1112931),
	(1635490, 12651),
	(1635490, 744782),
	(1635490, 189256),
	(1635490, 212629),
	(1635490, 500664),
	(1635490, 504505),
	(1635490, 597963),
	(1635490, 597967),
	(1635490, 970511),
	(1635490, 1011001),
	(1635490, 1016740),
	(1635490, 1530955),
	(1635490, 95926),
	(1635490, 905980),
	(1635490, 984186),
	(1635606, 15951),
	(1635606, 440418),
	(1635606, 741905),
	(1635606, 939952),
	(1635606, 951472),
	(1635606, 1112818),
	(1635606, 1113938),
	(1635606, 1114115),
	(1635606, 1256392),
	(1635606, 1582723),
	(1635903, 329848),
	(1635903, 1112509),
	(1636367, 16253),
	(1636367, 655470),
	(1636367, 1120459),
	(1636367, 1250266),
	(1636367, 74115),
	(1636367, 111907),
	(1636367, 115789),
	(1636367, 140534),
	(1636367, 160603),
	(1636367, 174213),
	(1636367, 247977),
	(1636367, 627795),
	(1636367, 627796),
	(1636367, 651795),
	(1636367, 659164),
	(1636367, 659437),
	(1636367, 663479),
	(1636367, 708878),
	(1636367, 856062),
	(1636367, 938356),
	(1636367, 938357),
	(1636367, 96141),
	(1636367, 141232),
	(1636367, 176713),
	(1636367, 298253),
	(1636367, 1077465),
	(1636367, 68454),
	(1636367, 1335016),
	(1636367, 1273164),
	(1636367, 86364),
	(1636367, 140865),
	(1636367, 246170),
	(1636367, 257237),
	(1636367, 361013),
	(1636367, 369719),
	(1636367, 500287),
	(1636367, 568499),
	(1636367, 663920),
	(1636367, 1120546),
	(1636367, 1120554),
	(1636367, 1279090),
	(1636367, 1534426),
	(1636367, 1534427),
	(1636367, 1534428),
	(1636367, 1534429),
	(1636367, 1534430),
	(1636367, 224503),
	(1636578, 3028),
	(1636579, 1511977),
	(1636579, 299606),
	(1636579, 140737),
	(1636579, 175863),
	(1636579, 499885),
	(1636579, 525329),
	(1636579, 598248),
	(1636579, 599788),
	(1636579, 600041),
	(1636579, 600212),
	(1636579, 642089),
	(1636579, 642091),
	(1636579, 642213),
	(1636579, 643128),
	(1636579, 643129),
	(1636579, 643132),
	(1636579, 643133),
	(1636579, 643654),
	(1636579, 674283),
	(1636579, 674307),
	(1636579, 674327),
	(1636579, 674407),
	(1636579, 845903),
	(1636579, 845905),
	(1636579, 845906),
	(1636579, 986735),
	(1636579, 986755),
	(1636579, 1113100),
	(1636579, 1114118),
	(1636579, 1316139),
	(1636579, 302084),
	(1636579, 1120951),
	(1636579, 329848),
	(1636579, 500712),
	(1636579, 501998),
	(1636579, 597965),
	(1636579, 939952),
	(1636579, 1010999),
	(1636579, 1011099),
	(1636579, 1011101),
	(1636579, 1112509),
	(1636579, 1137958),
	(1636579, 16253),
	(1636579, 655470),
	(1636579, 1120459),
	(1636579, 1250266),
	(1636579, 3028),
	(1636579, 503806),
	(1636579, 1279294),
	(1636579, 1543022),
	(1636579, 27194),
	(1636579, 1137536),
	(1636579, 300490),
	(1636579, 500714),
	(1636579, 502770),
	(1636579, 502772),
	(1636579, 1017132),
	(1636579, 1016877),
	(1636579, 513412),
	(1636579, 89205),
	(1636579, 144236),
	(1636579, 300291),
	(1636579, 302442),
	(1636579, 330558),
	(1636579, 526712),
	(1636579, 559883),
	(1636579, 567762),
	(1636579, 599175),
	(1636579, 643127),
	(1636579, 673453),
	(1636579, 673856),
	(1636579, 832767),
	(1636579, 845567),
	(1636579, 845569),
	(1636579, 845902),
	(1636579, 1003367),
	(1636579, 1077790),
	(1636579, 1138176),
	(1636579, 1230512),
	(1636579, 1230513),
	(1636579, 499808),
	(1636579, 674266),
	(1636579, 96613),
	(1636579, 96684),
	(1636579, 98402),
	(1636579, 98916),
	(1636579, 176777),
	(1636579, 331904),
	(1636579, 473795),
	(1636579, 600134),
	(1636579, 600145),
	(1636579, 644255),
	(1636579, 701781),
	(1636579, 1138287),
	(1636579, 1236702),
	(1636579, 1262335),
	(1636579, 1295319),
	(1636579, 1520818),
	(1636579, 1520849),
	(1636579, 1013028),
	(1636579, 302429),
	(1636579, 1305468),
	(1636579, 1531074),
	(1636579, 1578685),
	(1636579, 42981),
	(1636579, 500675),
	(1636579, 524253),
	(1636579, 1016842),
	(1636579, 600292),
	(1636579, 675547),
	(1636579, 720514),
	(1636579, 1341457),
	(1636579, 1003505),
	(1636579, 1063485),
	(1636579, 1542975),
	(1636579, 300518),
	(1636579, 435694),
	(1636579, 435696),
	(1636579, 579367),
	(1636579, 604932),
	(1636579, 846415),
	(1636579, 1187762),
	(1636579, 96253),
	(1636579, 473571),
	(1636579, 1212236),
	(1636579, 1212882),
	(1636579, 256190),
	(1636579, 96708),
	(1636579, 300861),
	(1636579, 301601),
	(1636579, 332571),
	(1636579, 712831),
	(1636579, 1279177),
	(1636579, 503387),
	(1636579, 1515593),
	(1636579, 301711),
	(1636579, 990383),
	(1636579, 297941),
	(1636579, 338360),
	(1636579, 742863),
	(1636579, 802786),
	(1636579, 329850),
	(1636579, 500667),
	(1636579, 1016805),
	(1636579, 500710),
	(1636579, 503138),
	(1636579, 1016745),
	(1638447, 503806),
	(1638447, 1279294),
	(1638447, 1543022),
	(1638910, 1250266),
	(1639041, 68194),
	(1639041, 105899),
	(1639041, 237222),
	(1639041, 943390),
	(1639041, 1201666),
	(1639041, 1511977),
	(1639627, 27194),
	(1639627, 1137536),
	(1639627, 794244),
	(1641409, 503806),
	(1641656, 503806),
	(1642018, 1511977),
	(1642018, 74115),
	(1642018, 111907),
	(1642018, 115789),
	(1642018, 140534),
	(1642018, 160603),
	(1642018, 174213),
	(1642018, 247977),
	(1642018, 627795),
	(1642018, 627796),
	(1642018, 651795),
	(1642018, 659164),
	(1642018, 659437),
	(1642018, 663479),
	(1642018, 708878),
	(1642018, 856062),
	(1642018, 938356),
	(1642018, 938357),
	(1642018, 1238347),
	(1642018, 1303112),
	(1642018, 1303118),
	(1647019, 300170),
	(1647019, 1011099),
	(1647019, 1016851),
	(1647019, 1112931),
	(1647019, 330271),
	(1647019, 1016853),
	(1647019, 1016855),
	(1648720, 300170),
	(1648720, 501998),
	(1648720, 1011101),
	(1648720, 1112931),
	(1648720, 330271),
	(1648720, 1016853),
	(1648720, 1016855),
	(1649651, 598248),
	(1649651, 643128),
	(1649651, 674407),
	(1649651, 599972),
	(1649831, 1511960),
	(1649831, 1511977),
	(1649831, 96141),
	(1649831, 141232),
	(1649831, 176713),
	(1649831, 298253),
	(1649831, 1077465),
	(1649831, 599972),
	(1649831, 1518177),
	(1649882, 300490),
	(1649882, 643126),
	(1649882, 600062),
	(1649882, 643554),
	(1650202, 1511977),
	(1650202, 68454),
	(1650202, 1335016),
	(1650202, 1518177),
	(1651350, 500714),
	(1651350, 502770),
	(1651350, 502772),
	(1651350, 1017132),
	(1651350, 341276),
	(1651350, 571374),
	(1653321, 1250266),
	(1653321, 1273164),
	(1653321, 1616136),
	(1654062, 12651),
	(1654062, 744782),
	(1654062, 1010999),
	(1657953, 16253),
	(1660727, 1016877),
	(1663251, 1016877),
	(1665255, 1511977),
	(1665255, 301750),
	(1665255, 1234960),
	(1665255, 1511973),
	(1665255, 1512036),
	(1665255, 939956),
	(1672037, 513412),
	(1672037, 186044),
	(1672037, 267543),
	(1672037, 408179),
	(1672037, 408642),
	(1672037, 615089),
	(1672037, 660501),
	(1672037, 749752),
	(1672037, 749914),
	(1672037, 836331),
	(1672037, 1024299),
	(1672037, 1099156),
	(1672037, 1124650),
	(1672037, 614033),
	(1672037, 836055),
	(1672037, 986586),
	(1672067, 513412),
	(1672067, 186044),
	(1672067, 267543),
	(1672067, 408179),
	(1672067, 408642),
	(1672067, 615089),
	(1672067, 660501),
	(1672067, 749752),
	(1672067, 749914),
	(1672067, 836331),
	(1672067, 1024299),
	(1672067, 1099156),
	(1672067, 1124650),
	(1672500, 86364),
	(1672500, 140865),
	(1672500, 246170),
	(1672500, 257237),
	(1672500, 361013),
	(1672500, 369719),
	(1672500, 500287),
	(1672500, 568499),
	(1672500, 663920),
	(1672500, 1120546),
	(1672500, 1120554),
	(1672500, 1250266),
	(1672500, 1273164),
	(1672500, 1279090),
	(1672500, 1534426),
	(1672500, 1534427),
	(1672500, 1534428),
	(1672500, 1534429),
	(1672500, 1534430),
	(1672500, 1616136),
	(1672500, 369558),
	(1672554, 1511977),
	(1672554, 140737),
	(1672554, 175863),
	(1672554, 212288),
	(1672554, 598248),
	(1672554, 599191),
	(1672554, 642089),
	(1672554, 643128),
	(1672554, 643132),
	(1672554, 643133),
	(1672554, 674283),
	(1672554, 674307),
	(1672554, 674327),
	(1672554, 674407),
	(1672554, 794692),
	(1672554, 845561),
	(1672554, 845903),
	(1672554, 845905),
	(1672554, 845906),
	(1672554, 986735),
	(1672554, 986755),
	(1672554, 1113100),
	(1672554, 27194),
	(1672554, 89205),
	(1672554, 144236),
	(1672554, 300291),
	(1672554, 300490),
	(1672554, 302442),
	(1672554, 330558),
	(1672554, 526712),
	(1672554, 559883),
	(1672554, 567762),
	(1672554, 599175),
	(1672554, 643127),
	(1672554, 673453),
	(1672554, 673856),
	(1672554, 832767),
	(1672554, 845567),
	(1672554, 845569),
	(1672554, 845902),
	(1672554, 1003367),
	(1672554, 1077790),
	(1672554, 1137536),
	(1672554, 1138176),
	(1672554, 1230512),
	(1672554, 1230513),
	(1672554, 794244),
	(1672554, 643126),
	(1672554, 256344),
	(1672554, 330214),
	(1672554, 1016817),
	(1672554, 1077777),
	(1672554, 674709),
	(1672554, 150356),
	(1672554, 298157),
	(1672554, 300502),
	(1672554, 846232),
	(1672554, 644138),
	(1672554, 845901),
	(1672554, 176696),
	(1672554, 301926),
	(1672554, 500137),
	(1672554, 1185942),
	(1672554, 256463),
	(1672554, 674405),
	(1672555, 212288),
	(1672555, 599191),
	(1672555, 794692),
	(1672555, 27194),
	(1672555, 89205),
	(1672555, 330558),
	(1672555, 559883),
	(1672555, 599175),
	(1672555, 643127),
	(1672555, 673453),
	(1672555, 845902),
	(1672555, 1138176),
	(1672555, 256344),
	(1672555, 330214),
	(1672555, 1016817),
	(1672555, 1077777),
	(1672555, 48288),
	(1672555, 212363),
	(1672555, 256340),
	(1672555, 256342),
	(1672555, 256346),
	(1672555, 300081),
	(1672555, 520070),
	(1672555, 794941),
	(1672555, 1141828),
	(1672555, 256456),
	(1672555, 460552),
	(1673667, 1120459),
	(1673667, 499808),
	(1673667, 674266),
	(1677020, 1118430),
	(1677020, 189256),
	(1677020, 212629),
	(1677020, 500664),
	(1677020, 504505),
	(1677020, 597963),
	(1677020, 597967),
	(1677020, 970511),
	(1677020, 1011001),
	(1677020, 1016740),
	(1677020, 1530955),
	(1677020, 1120459),
	(1677020, 96613),
	(1677020, 96684),
	(1677020, 98402),
	(1677020, 98916),
	(1677020, 176777),
	(1677020, 331904),
	(1677020, 473795),
	(1677020, 600134),
	(1677020, 600145),
	(1677020, 644255),
	(1677020, 701781),
	(1677020, 1138287),
	(1677020, 1236702),
	(1677020, 1262335),
	(1677020, 1295319),
	(1677020, 1520818),
	(1677020, 1520849),
	(1677020, 500723),
	(1677020, 1011105),
	(1677020, 299311),
	(1677020, 500662),
	(1677020, 628228),
	(1677020, 1016627),
	(1677020, 518647),
	(1677489, 503806),
	(1677489, 503796),
	(1677489, 1543029),
	(1679303, 1250266),
	(1679303, 1013028),
	(1679303, 1543022),
	(1679303, 32225),
	(1679303, 373266),
	(1679311, 1279294),
	(1679311, 1543022),
	(1679311, 32225),
	(1679311, 373266),
	(1689133, 1511977),
	(1689133, 96141),
	(1689133, 141232),
	(1689133, 176713),
	(1689133, 224503),
	(1689133, 298253),
	(1689133, 1077465),
	(1689133, 1238347),
	(1689133, 1303112),
	(1689133, 1303118),
	(1691060, 98402),
	(1691060, 302429),
	(1691060, 502770),
	(1691060, 502772),
	(1691060, 1305468),
	(1691060, 1531074),
	(1691060, 1578685),
	(1691060, 333057),
	(1691060, 630611),
	(1691060, 655601),
	(1691060, 701648),
	(1691060, 1167899),
	(1691060, 96476),
	(1691060, 675590),
	(1691060, 720457),
	(1691060, 1211160),
	(1691060, 1250242),
	(1691060, 1531252),
	(1691060, 1572350),
	(1691060, 1578606),
	(1691060, 1590540),
	(1691060, 333035),
	(1691060, 675439),
	(1691060, 1167789),
	(1691060, 1531100),
	(1691060, 96581),
	(1691060, 256772),
	(1691060, 256790),
	(1691060, 539001),
	(1691060, 655496),
	(1691060, 675489),
	(1691060, 1258228),
	(1691060, 98306),
	(1691060, 332109),
	(1691060, 503392),
	(1691060, 503448),
	(1691060, 503471),
	(1691060, 504932),
	(1691060, 1121005),
	(1691060, 1184987),
	(1691060, 332687),
	(1691060, 468020),
	(1691060, 502965),
	(1691060, 503678),
	(1693982, 42981),
	(1693982, 500675),
	(1693982, 500714),
	(1693982, 524253),
	(1693982, 1016842),
	(1693982, 1017132),
	(1693982, 506773),
	(1693982, 512203),
	(1693983, 42981),
	(1693984, 42981),
	(1693985, 42981),
	(1693985, 506773),
	(1693985, 512203),
	(1700782, 499885),
	(1700782, 525329),
	(1700782, 599788),
	(1700782, 600041),
	(1700782, 600212),
	(1700782, 642091),
	(1700782, 642213),
	(1700782, 643129),
	(1700782, 643654),
	(1700782, 1114118),
	(1700782, 1253300),
	(1700782, 1316139),
	(1700782, 302084),
	(1700782, 600292),
	(1700782, 675547),
	(1700782, 720514),
	(1700782, 1341457),
	(1700782, 674709),
	(1700782, 48288),
	(1700782, 333057),
	(1700782, 630611),
	(1700782, 655601),
	(1700782, 701648),
	(1700782, 1167899),
	(1700782, 370803),
	(1700782, 491990),
	(1700782, 584517),
	(1700782, 1571222),
	(1700782, 675677),
	(1700782, 862645),
	(1700807, 1003505),
	(1700807, 1063485),
	(1700807, 1578652),
	(1701194, 1511977),
	(1701194, 48613),
	(1701194, 451198),
	(1701194, 518582),
	(1701194, 524670),
	(1701194, 525114),
	(1701194, 721510),
	(1701194, 1224178),
	(1701194, 1242179),
	(1701194, 1299816),
	(1701194, 1535423),
	(1701194, 1535430),
	(1701195, 1511977),
	(1701195, 48613),
	(1701195, 451198),
	(1701195, 518582),
	(1701195, 524670),
	(1701195, 525114),
	(1701195, 721510),
	(1701195, 1224178),
	(1701195, 1242179),
	(1701195, 1299816),
	(1701195, 1535423),
	(1701195, 1535430),
	(1706961, 98402),
	(1706961, 500714),
	(1706961, 502770),
	(1706961, 502772),
	(1706961, 1017132),
	(1707228, 513412),
	(1707228, 1578652),
	(1708489, 1511977),
	(1708489, 301750),
	(1708489, 1234960),
	(1708489, 1511973),
	(1708489, 1512036),
	(1709042, 1120459),
	(1709731, 674407),
	(1711120, 95926),
	(1711120, 1010999),
	(1711747, 1013028),
	(1715380, 1120951),
	(1715380, 1542975),
	(1715380, 500723),
	(1715380, 1011105),
	(1717396, 597965),
	(1726675, 300490),
	(1726675, 600062),
	(1726675, 643126),
	(1726675, 643554),
	(1726675, 302090),
	(1726675, 302095),
	(1726675, 891777),
	(1726675, 1138366),
	(1726675, 1302855),
	(1731435, 1511977),
	(1743291, 300518),
	(1743291, 435694),
	(1743291, 435696),
	(1743291, 579367),
	(1743291, 604932),
	(1743291, 846415),
	(1743291, 1187762),
	(1743632, 643132),
	(1743632, 150356),
	(1743632, 370803),
	(1743632, 176590),
	(1743632, 471056),
	(1743632, 877191),
	(1747591, 503806),
	(1747591, 502382),
	(1747591, 893920),
	(1749147, 599191),
	(1749147, 89205),
	(1749147, 330558),
	(1749147, 559883),
	(1749147, 567762),
	(1749147, 599175),
	(1749147, 643127),
	(1749147, 673453),
	(1749147, 845902),
	(1749147, 1138176),
	(1749147, 256344),
	(1749147, 330214),
	(1749147, 1016817),
	(1749147, 1077777),
	(1749147, 212363),
	(1749147, 256340),
	(1749147, 256342),
	(1749147, 256346),
	(1749147, 300081),
	(1749147, 520070),
	(1749147, 794941),
	(1749147, 1141828),
	(1749524, 599191),
	(1749524, 559883),
	(1749524, 256344),
	(1749524, 330214),
	(1749524, 1016817),
	(1749524, 1077777),
	(1749524, 256456),
	(1749524, 460552),
	(1749524, 520070),
	(1749524, 794941),
	(1749524, 1141828),
	(1749524, 95927),
	(1749524, 890727),
	(1751579, 1578685),
	(1751579, 503796),
	(1751579, 1543029),
	(1751579, 96476),
	(1751579, 675590),
	(1751579, 720457),
	(1751579, 1211160),
	(1751579, 1250242),
	(1751579, 1531252),
	(1751579, 1572350),
	(1751579, 1578606),
	(1751579, 1590540),
	(1751579, 1250188),
	(1755528, 300490),
	(1755528, 643126),
	(1755528, 298157),
	(1755528, 300502),
	(1755528, 846232),
	(1755528, 95927),
	(1755528, 890727),
	(1755661, 95219),
	(1755661, 147932),
	(1755661, 176351),
	(1755661, 176791),
	(1755661, 298955),
	(1755661, 302084),
	(1755661, 372949),
	(1755661, 600003),
	(1755661, 643619),
	(1755661, 661973),
	(1755997, 600041),
	(1755997, 600212),
	(1755997, 642091),
	(1755997, 642213),
	(1755997, 643129),
	(1755997, 1114118),
	(1755997, 95587),
	(1755997, 144317),
	(1755997, 183019),
	(1755997, 299611),
	(1755997, 299683),
	(1755997, 302084),
	(1755997, 598359),
	(1755997, 1112575),
	(1755997, 1118227),
	(1755997, 600292),
	(1755997, 491990),
	(1755997, 584517),
	(1756460, 1120459),
	(1756460, 96253),
	(1756460, 473571),
	(1756460, 499808),
	(1756460, 674266),
	(1756460, 675547),
	(1756460, 720514),
	(1756460, 1003505),
	(1756460, 1212236),
	(1756460, 1212882),
	(1756460, 1341457),
	(1756460, 1531074),
	(1756499, 674307),
	(1756499, 630611),
	(1756682, 1578685),
	(1756682, 96476),
	(1756682, 333035),
	(1756682, 333057),
	(1756682, 630611),
	(1756682, 655601),
	(1756682, 675439),
	(1756682, 675590),
	(1756682, 701648),
	(1756682, 1167789),
	(1756682, 1167899),
	(1756682, 1211160),
	(1756682, 1250242),
	(1756682, 1531100),
	(1756682, 1531252),
	(1756682, 1572350),
	(1756682, 1578606),
	(1756682, 1250188),
	(1756778, 1578685),
	(1756778, 96581),
	(1756778, 256772),
	(1756778, 256790),
	(1756778, 539001),
	(1756778, 655496),
	(1756778, 675489),
	(1756778, 1258228),
	(1756778, 1531100),
	(1756778, 1531252),
	(1756778, 1590540),
	(1756805, 96613),
	(1756805, 176777),
	(1756805, 1138287),
	(1756805, 1236702),
	(1756805, 1520849),
	(1756805, 939956),
	(1756806, 655470),
	(1756806, 96613),
	(1756806, 98916),
	(1756806, 176777),
	(1756806, 256190),
	(1756806, 499808),
	(1756806, 600134),
	(1756806, 600145),
	(1756806, 600292),
	(1756806, 644255),
	(1756806, 1138287),
	(1756806, 1236702),
	(1756806, 1520849),
	(1756874, 96684),
	(1756874, 473795),
	(1756874, 1262335),
	(1756874, 1251593),
	(1756898, 96708),
	(1756898, 302429),
	(1756898, 1305468),
	(1757570, 525329),
	(1757570, 1316139),
	(1758870, 98402),
	(1758870, 502772),
	(1758870, 98306),
	(1758870, 332109),
	(1758870, 503392),
	(1758870, 503448),
	(1758870, 503471),
	(1758870, 504932),
	(1758870, 1121005),
	(1758870, 1184987),
	(1758891, 503806),
	(1758891, 1279294),
	(1758891, 1543022),
	(1758891, 502382),
	(1758891, 893920),
	(1758891, 1251593),
	(1758896, 1578685),
	(1758896, 332687),
	(1758896, 468020),
	(1758896, 502965),
	(1758896, 503678),
	(1758957, 98402),
	(1758957, 300861),
	(1758957, 301601),
	(1758957, 331904),
	(1758957, 332571),
	(1758957, 500714),
	(1758957, 502770),
	(1758957, 502772),
	(1758957, 712831),
	(1758957, 1017132),
	(1758957, 1279177),
	(1758958, 98402),
	(1758958, 331904),
	(1758958, 502772),
	(1758958, 503387),
	(1758958, 341276),
	(1758958, 571374),
	(1759443, 98916),
	(1759443, 600134),
	(1759818, 701781),
	(1759818, 1262335),
	(1764417, 140402),
	(1764417, 144448),
	(1764417, 150612),
	(1764417, 617628),
	(1764417, 642213),
	(1764417, 643129),
	(1764417, 674403),
	(1764417, 676435),
	(1764417, 708902),
	(1764417, 846412),
	(1764417, 1114118),
	(1767798, 300490),
	(1767798, 600062),
	(1767798, 643126),
	(1767798, 643554),
	(1767798, 150356),
	(1767798, 300502),
	(1767798, 644138),
	(1767798, 846232),
	(1767798, 302090),
	(1767798, 302095),
	(1767798, 891777),
	(1767798, 1138366),
	(1767798, 1302855),
	(1767798, 176590),
	(1768163, 643128),
	(1768163, 674407),
	(1770995, 1013028),
	(1772259, 212629),
	(1772259, 500664),
	(1772259, 597963),
	(1772259, 597965),
	(1772259, 597967),
	(1772259, 905980),
	(1772259, 984186),
	(1772259, 1010999),
	(1772259, 1011001),
	(1772259, 299311),
	(1772259, 500662),
	(1772259, 628228),
	(1772259, 1016627),
	(1783310, 1250266),
	(1792289, 643132),
	(1792339, 140737),
	(1792339, 175863),
	(1792339, 499885),
	(1792339, 599788),
	(1792339, 600041),
	(1792339, 600212),
	(1792339, 642089),
	(1792339, 643128),
	(1792339, 643132),
	(1792339, 643133),
	(1792339, 643654),
	(1792339, 674307),
	(1792339, 674327),
	(1792339, 845903),
	(1792339, 845905),
	(1792339, 845906),
	(1792339, 1253300),
	(1792339, 1571222),
	(1792340, 140737),
	(1792340, 175863),
	(1792340, 598248),
	(1792340, 642089),
	(1792340, 642091),
	(1792340, 642213),
	(1792340, 643128),
	(1792340, 643129),
	(1792340, 643132),
	(1792340, 643133),
	(1792340, 674307),
	(1792340, 674327),
	(1792340, 674407),
	(1792340, 845903),
	(1792340, 845905),
	(1792340, 845906),
	(1792340, 1114118),
	(1792340, 302084),
	(1792340, 1230512),
	(1792340, 674709),
	(1792340, 491990),
	(1792340, 584517),
	(1792340, 675677),
	(1792340, 862645),
	(1792340, 1571222),
	(1792577, 302442),
	(1792688, 986755),
	(1792688, 845901),
	(1800077, 302442),
	(1800077, 150356),
	(1800077, 176696),
	(1800077, 301926),
	(1800077, 500137),
	(1800077, 1185942),
	(1800077, 176590),
	(1800077, 471056),
	(1800077, 877191),
	(1823882, 1279177),
	(1823882, 1515593),
	(1823882, 1531074),
	(1832334, 643133),
	(1849119, 435696),
	(1875664, 500712),
	(1875664, 1137958),
	(1876677, 525329),
	(1876677, 1316139),
	(1876677, 301711),
	(1876677, 990383),
	(1879077, 599191),
	(1879077, 674283),
	(1879077, 794692),
	(1879077, 1113100),
	(1879077, 256463),
	(1879077, 674405),
	(1895113, 1013028),
	(1904891, 1250266),
	(1904891, 1534428),
	(1904891, 369558),
	(1911080, 297941),
	(1911080, 338360),
	(1911080, 742863),
	(1911080, 802786),
	(1913144, 302429),
	(1913144, 1305468),
	(1931101, 329850),
	(2000872, 435696),
	(2034808, 499808),
	(2034835, 499885),
	(2034835, 599788),
	(2034835, 600041),
	(2034835, 643654),
	(2034835, 1253300),
	(2034835, 675677),
	(2034835, 1571222),
	(2035130, 500667),
	(2035130, 1016805),
	(2035134, 500675),
	(2035134, 524253),
	(2035134, 1016842),
	(2035146, 500710),
	(2036284, 503138),
	(2036284, 1016745),
	(2036489, 503806),
	(2036525, 503806),
	(2041988, 513412),
	(2041988, 614033),
	(2041988, 836055),
	(2041988, 986586),
	(2044172, 701781),
	(2044172, 1262335),
	(2044172, 1520818),
	(2044172, 518647),
	(2062158, 559883),
	(2080404, 600041),
	(2080448, 600212),
	(2080448, 600292),
	(2089879, 1543022),
	(2097005, 643128),
	(2097005, 1230513),
	(2097006, 643128),
	(2097006, 643133),
	(2097006, 674407),
	(2097006, 986755),
	(2101523, 1531074),
	(2205873, 845569),
	(2266970, 1003505),
	(2266970, 1063485),
	(2371891, 1531074),
	(2390072, 1279177),
	(2390072, 1531074);
/*!40000 ALTER TABLE `writtenby` ENABLE KEYS */;
/*!40014 SET FOREIGN_KEY_CHECKS=1 */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
